const gameState={};class Preload extends Phaser.Scene{constructor(){super("Preload")}preload(){WebFont.load({custom:{families:["Rock Kapak"]},active:()=>{this.fontLoaded=!0}});const width=this.cameras.main.width,height=this.cameras.main.height,x=width/2,y=height/2,progressBox=this.add.graphics(),progressBar=this.add.graphics();progressBox.fillStyle(2236962,.8),progressBox.fillRect(width/2-160,270,320,50);const loadingText=this.add.text(x,y-50,"Loading...",{font:"20px monospace",fill:"#ffffff"}).setOrigin(.5,.5),percentText=this.add.text(x,y-5,"0%",{font:"18px monospace",fill:"#ffffff"}).setOrigin(.5,.5);this.load.on("progress",(function(value){percentText.setText(parseInt(100*value)+"%"),progressBar.clear(),progressBar.fillStyle(16777215,1),progressBar.fillRect(width/2-150,280,300*value,30)})),this.load.on("complete",(function(){progressBar.destroy(),progressBox.destroy(),loadingText.destroy(),percentText.destroy()})),this.load.image("knuckleFist","assets/images/cards/knuckleFist.jpg"),this.load.image("kabutu","assets/images/cards/kabutu.jpg"),this.load.image("combatBoots","assets/images/cards/combatBoots.jpg"),this.load.image("tantoBlade","assets/images/cards/tantoBlade.jpg"),this.load.image("circlePit","assets/images/cards/circlePit.jpg"),this.load.image("seppuku","assets/images/cards/seppuku.jpg"),this.load.image("katana","assets/images/cards/katana.jpg"),this.load.image("rocknRonin","assets/images/cards/rocknRonin.jpg"),this.load.image("powerChord","assets/images/cards/powerChord.jpg"),this.load.image("rawEnergy","assets/images/cards/rawEnergy.jpg"),this.load.image("pyromania","assets/images/cards/pyromania.jpg"),this.load.image("stageInvasion","assets/images/cards/stageInvasion.jpg"),this.load.image("studdedLeather","assets/images/cards/studdedLeather.jpg"),this.load.image("boneShredder","assets/images/cards/boneShredder.jpg"),this.load.image("blackFumes","assets/images/cards/blackFumes.jpg"),this.load.image("masakari","assets/images/cards/masakari.jpg"),this.load.image("discontent","assets/images/cards/discontent.jpg"),this.load.image("dogsOfWar","assets/images/cards/dogsOfWar.jpg"),this.load.image("roninsRot","assets/images/cards/roninsRot.jpg"),this.load.image("libertySpikes","assets/images/cards/libertySpikes.jpg"),this.load.image("moshpitMassacre","assets/images/cards/moshpitMassacre.jpg"),this.load.image("bladesBlight","assets/images/cards/bladesBlight.jpg"),this.load.image("scorchedSoul","assets/images/cards/scorchedSoul.jpg"),this.load.image("risingWakizashi","assets/images/cards/risingWakizashi.jpg"),this.load.image("deadCities","assets/images/cards/deadCities.jpg"),this.load.image("nastyNihonto","assets/images/cards/nastyNihonto.jpg"),this.load.image("crowdSurfer","assets/images/cards/crowdSurfer.jpg"),this.load.image("toxicFrets","assets/images/cards/toxicFrets.jpg"),this.load.image("toxicFretsToken","assets/images/cards/toxicFretsToken.png"),this.load.image("ashenEncore","assets/images/cards/ashenEncore.jpg"),this.load.image("ashenEncoreToken","assets/images/cards/ashenEncoreToken.png"),this.load.image("edoEruption","assets/images/cards/edoEruption.jpg"),this.load.image("edoEruptionToken","assets/images/cards/edoEruptionToken.png"),this.load.image("steelToe","assets/images/cards/steelToe.jpg"),this.load.image("steelToeToken","assets/images/cards/steelToeToken.png"),this.load.image("foreverTrueToken","assets/images/cards/foreverTrueToken.png"),this.load.image("foreverTrue","assets/images/cards/foreverTrue.jpg"),this.load.image("rebelSpiritToken","assets/images/cards/rebelSpiritToken.png"),this.load.image("rebelSpirit","assets/images/cards/rebelSpirit.jpg"),this.load.image("rebelHeartToken","assets/images/cards/rebelHeartToken.png"),this.load.image("rebelHeart","assets/images/cards/rebelHeart.jpg"),this.load.image("bushidoToken","assets/images/cards/bushidoToken.png"),this.load.image("bushido","assets/images/cards/bushido.jpg"),this.load.image("toxicAvengerToken","assets/images/cards/toxicAvengerToken.png"),this.load.image("toxicAvenger","assets/images/cards/toxicAvenger.jpg"),this.load.image("kirisuteGomenToken","assets/images/cards/kirisuteGomenToken.png"),this.load.image("kirisuteGomen","assets/images/cards/kirisuteGomen.jpg"),this.load.image("hollidayInKamakuraToken","assets/images/cards/hollidayInKamakuraToken.png"),this.load.image("hollidayInKamakura","assets/images/cards/hollidayInKamakura.jpg"),this.load.image("kamishimoUberAllesToken","assets/images/cards/kamishimoUberAllesToken.png"),this.load.image("kamishimoUberAlles","assets/images/cards/kamishimoUberAlles.jpg"),this.load.image("player","assets/images/sprites/punkrock.png"),this.load.image("deck","assets/images/cardback.jpg"),this.load.image("strengthAndArmor","assets/images/strengthAndArmor.png"),this.load.image("rectangularButton","assets/images/stoneButtonInsetReady.png"),this.load.image("rectangularButtonHovered","assets/images/stoneButtonInsetHovered.png"),this.load.image("rectangularButtonPressed","assets/images/stoneButtonInsetPressed.png"),this.load.image("radioButtonRoundOn","assets/images/radioButtonRoundOn.png"),this.load.image("radioButtonRoundOff","assets/images/radioButtonRoundOff.png"),this.load.image("targetingCursor","assets/images/targetingCursor.png"),this.load.image("targetingCursorReady","assets/images/targetingCursorReady.png"),this.load.image("bgLoadingScreen","assets/images/bgLoadingScreen.jpg"),this.load.image("endscene","assets/images/endscene.jpg"),this.load.audio("cardsDealtSound","assets/sounds/cardsdealt.wav"),this.load.audio("thundersound","assets/sounds/thundersound.mp3"),this.load.audio("buttonPressedSound","assets/sounds/buttonpressed.wav"),this.load.audio("attackSound","assets/sounds/attacksound.wav"),this.load.audio("powerUpSound","assets/sounds/powerupsound.wav"),this.load.audio("healSound","assets/sounds/healsound.wav"),this.load.audio("victorySound","assets/sounds/victorysound.mp3"),this.load.audio("bossTune","assets/sounds/music/DecisiveBattle.mp3"),this.load.audio("titleTheme","assets/sounds/music/TitleTheme.mp3"),this.load.audio("gunShotSound","assets/sounds/gunshot.mp3")}create(){self=this,gameState.score={numberOfTurns:0,levelsCompleted:0,damageTaken:0,damageDealt:0,totaleScore:0},gameState.player={sprite:this.add.sprite(320,350,"player").setScale(.38).setFlipX(!0).setInteractive(),healthBarColor:"0x00ff00",alive:!0,stance:"Neutral",poison:0,stancePoints:0,numCards:5,numCardsBase:5,numCardsStance:0,health:90,healthMax:90,mana:4,manaMax:4,manaBase:4,manaStance:0,manaCard:0,strength:0,strengthMax:15,strengthBase:0,strengthStance:0,strengthCard:0,armor:0,armorMax:15,armorBase:0,armorStance:0,armorCard:0},gameState.enemy={name:"Name",sprite:"",healthBarColor:"0xff0000",alive:!0,actions:[],health:40,healthMax:40,strength:0,strengthBase:0,strengthTurn:0,strengthMax:15,armor:0,armorMax:15,poison:0},gameState.deck=[{key:"knuckleFist",type:"targetSelected",cost:1,stancePoints:1,damage:7,fire:0,poison:()=>gameState.toxicFrets?1:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"knuckleFist",type:"targetSelected",cost:1,stancePoints:1,damage:7,fire:0,poison:()=>gameState.toxicFrets?1:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"knuckleFist",type:"targetSelected",cost:1,stancePoints:1,damage:7,fire:0,poison:()=>gameState.toxicFrets?1:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"knuckleFist",type:"targetSelected",cost:1,stancePoints:1,damage:7,fire:0,poison:()=>gameState.toxicFrets?1:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"kabutu",type:()=>gameState.edoEruption&&gameState.player.stancePoints>0?"targetAll":"buff",cost:1,stancePoints:-1,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:5,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"kabutu",type:()=>gameState.edoEruption&&gameState.player.stancePoints>0?"targetAll":"buff",cost:1,stancePoints:-1,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:5,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"kabutu",type:()=>gameState.edoEruption&&gameState.player.stancePoints>0?"targetAll":"buff",cost:1,stancePoints:-1,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:5,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"combatBoots",type:"targetAll",cost:2,stancePoints:0,damage:5,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:()=>gameState.player.stancePoints>0?2*gameState.player.stancePoints:0,reduceTargetStrength:0,drawCard:0},{key:"tantoBlade",type:"targetSelected",cost:2,stancePoints:0,damage:()=>gameState.player.stancePoints<0?12-2*gameState.player.stancePoints:12,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"discontent",type:"buff",cost:1,stancePoints:()=>gameState.player.stancePoints>0?-2:gameState.player.stancePoints<0?2:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0}],gameState.bonusCards=[{key:"kamishimoUberAlles",type:"permanent",cost:1,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0,token:"kamishimoUberAllesToken"},{key:"hollidayInKamakura",type:"permanent",cost:0,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0,token:"hollidayInKamakuraToken"},{key:"rebelSpirit",type:"permanent",cost:1,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0,token:"rebelSpiritToken"},{key:"foreverTrue",type:"permanent",cost:1,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0,token:"foreverTrueToken"},{key:"toxicFrets",type:"permanent",cost:1,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0,token:"toxicFretsToken"},{key:"ashenEncore",type:"permanent",cost:1,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0,token:"ashenEncoreToken"},{key:"edoEruption",type:"permanent",cost:1,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0,token:"edoEruptionToken"},{key:"studdedLeather",type:"buff",cost:1,stancePoints:2,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:5,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"rocknRonin",type:"buff",cost:0,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:()=>gameState.player.strength,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"seppuku",type:"buff",cost:1,stancePoints:0,damage:0,fire:0,poison:0,heal:-5,poisonRemove:0,strength:()=>gameState.player.stancePoints<0?1-gameState.player.stancePoints:1,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"rawEnergy",type:"buff",cost:()=>gameState.player.stancePoints>0?-2:-1,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"powerChord",type:"buff",cost:1,stancePoints:()=>gameState.player.stancePoints<=0?1:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:()=>gameState.player.stancePoints>0?3:0},{key:"crowdSurfer",type:"buff",cost:1,stancePoints:0,damage:0,fire:0,poison:0,heal:()=>gameState.player.stancePoints<0?-2*gameState.player.stancePoints:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:()=>gameState.player.stancePoints>0?gameState.player.stancePoints:0},{key:"stageInvasion",type:"targetAll",cost:2,stancePoints:0,damage:()=>2*(gameState.currentCards.length+1),fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"circlePit",type:"targetAll",cost:()=>gameState.player.mana,stancePoints:0,damage:0,fire:()=>4*gameState.costPlayed,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"moshpitMassacre",type:"targetAll",cost:2,stancePoints:0,damage:8,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"blackFumes",type:()=>gameState.player.stancePoints>=0?"targetAll":"targetSelected",cost:2,stancePoints:0,damage:0,fire:0,poison:()=>gameState.player.stancePoints>0?3:gameState.player.stancePoints<0?5:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"boneShredder",type:"targetSelected",cost:1,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:1,armor:0,reduceTargetArmor:0,reduceTargetStrength:1,drawCard:()=>gameState.player.stancePoints>0?1:0},{key:"masakari",type:"targetSelected",cost:2,stancePoints:0,damage:()=>gameState.player.stancePoints<0?9*(1-gameState.player.stancePoints*gameState.player.strength/10):9,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"pyromania",type:"targetSelected",cost:2,stancePoints:0,damage:0,fire:16,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"roninsRot",type:"targetSelected",cost:1,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:()=>gameState.player.stancePoints>0?1:0},{key:"dogsOfWar",type:"targetSelected",cost:1,stancePoints:1,damage:9,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"libertySpikes",type:"targetSelected",cost:1,stancePoints:0,damage:5,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:()=>gameState.player.stancePoints<0?2:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:()=>gameState.player.stancePoints>0?1:0},{key:"bladesBlight",type:"targetSelected",cost:3,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"scorchedSoul",type:"targetSelected",cost:1,stancePoints:0,damage:0,fire:8,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"katana",type:"targetSelected",cost:3,stancePoints:0,damage:()=>gameState.player.stancePoints<0?13*(1-gameState.player.stancePoints*gameState.player.strength/10):13,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"risingWakizashi",type:"targetSelected",cost:1,stancePoints:-1,damage:9,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"deadCities",type:"targetSelected",cost:1,stancePoints:0,damage:0,fire:0,poison:3,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0},{key:"nastyNihonto",type:"targetSelected",cost:2,stancePoints:0,damage:10,fire:0,poison:()=>gameState.player.stancePoints>0?2*gameState.player.stancePoints:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0}],gameState.extraCards=[{key:"kirisuteGomen",type:"permanent",cost:1,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0,token:"kirisuteGomenToken"},{key:"rebelHeart",type:"permanent",cost:1,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0,token:"rebelHeartToken"},{key:"bushido",type:"permanent",cost:1,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0,token:"bushidoToken"},{key:"toxicAvenger",type:"permanent",cost:1,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0,token:"toxicAvengerToken"},{key:"steelToe",type:"permanent",cost:1,stancePoints:0,damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetArmor:0,reduceTargetStrength:0,drawCard:0,token:"steelToeToken"}];let bgLoadingScreen=this.add.image(550,480,"bgLoadingScreen").setScale(1.4).setInteractive();this.add.text(550,170,"Punk Rock Samurai",{fontSize:"100px",fill:"#000000",fontFamily:"Rock Kapak"}).setOrigin(.5),this.add.text(550,500,"Click to start",{fontSize:"45px",fill:"#ff0000",fontWeight:"bold"}).setOrigin(.5);let screenClicked=!1;gameState.thunder=this.sound.add("thundersound"),gameState.musicTheme=this.sound.add("titleTheme"),bgLoadingScreen.on("pointerup",(()=>{screenClicked||(screenClicked=!0,gameState.thunder.play({volume:.9,seek:.25}),this.cameras.main.shake(200,.002,!1),this.cameras.main.flash(100),this.time.delayedCall(100,(()=>{this.cameras.main.fadeOut(100)}),[],this),this.time.delayedCall(200,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),self.time.delayedCall(100,(()=>{self.scene.start("Mainmenu"),console.log("Mainmenu called")}))}),[],this))}))}}class BaseScene extends Phaser.Scene{preload(){this.load.image("listbox1","assets/images/listbox1.png"),this.load.image("listbox2","assets/images/listbox2.png")}create(){this.scene.start("Preload")}baseCreate(backgoundImage,scale=.75){this.add.image(0,0,backgoundImage).setScale(scale).setOrigin(.02,0),this.cameras.main.fadeIn(600,0,0,0),this.input.keyboard.createCursorKeys(),gameState.targetingCursor=this.add.sprite(0,0,"targetingCursor").setDepth(200).setVisible(!1),gameState.playingCard=!1,gameState.drawPile=[...gameState.deck],gameState.discardPile=[],gameState.cardsDealtSound=this.sound.add("cardsDealtSound"),gameState.victorySound=this.sound.add("victorySound"),gameState.buttonPressedSound=this.sound.add("buttonPressedSound"),gameState.attackSound=this.sound.add("attackSound"),gameState.powerUpSound=this.sound.add("powerUpSound"),gameState.healSound=this.sound.add("healSound"),gameState.thunder=this.sound.add("thundersound"),gameState.gunShotSound=this.sound.add("gunShotSound"),gameState.music=this.sound.add("bossTune")}resetPlayer(player,scale){player.sprite=this.add.sprite(320,350,"player").setScale(scale).setFlipX(!0).setInteractive(),player.stance="Neutral",player.poison=0,player.stancePoints=0,player.numCardsBase=5,player.numCardsStance=0,player.manaBase=4,player.manaStance=0,player.manaCard=0,player.mana=4,player.manaMax=4,player.strengthBase=0,player.strengthStance=0,player.strengthCard=0,player.strengthMax=15,player.armorBase=0,player.armorStance=0,player.armorCard=0}addHealthBar(character,color){const x=character.x,y=character.y,height=character.height;character.healthBarBackground=this.add.graphics(),character.healthBarBackground.lineStyle(3,0,1),character.healthBarBackground.strokeRect(x-40,y-height/2-30,100,10),character.healthBar=this.add.graphics(),character.healthBar.fillStyle(color,1),character.healthBar.fillRect(x-40,y-height/2-30,character.health/character.healthMax*100,10),character.healthBarText=this.add.text(x-18,y-height/2-25,`${character.health}/${character.healthMax}`,{fontSize:"11px",fill:"#000000"}).setOrigin(.5)}addManaBar(character){const x=character.x,y=character.y,height=character.height;character.manaBarBackground=this.add.graphics(),character.manaBarBackground.lineStyle(3,0,1),character.manaBarBackground.strokeRect(character.x-40,character.y-height/2-45,100,10),character.manaBar=this.add.graphics(),character.manaBar.fillStyle(255,1),character.manaBar.fillRect(x-40,y-height/2-45,character.mana/character.manaMax*100,10),character.manaBarText=this.add.text(x-27,y-height/2-40,`${character.mana}/${character.manaMax}`,{fontSize:"11px",fill:"#000000"}).setOrigin(.5)}addStatsDisplay(character){let textConfig={fontSize:"11px",fill:"#FFFFFF"};character.strengthAndArmorImage=this.add.sprite(character.sprite.x-20,460,"strengthAndArmor").setScale(.4).setInteractive().setDepth(20),character.armorText=this.add.text(character.sprite.x+13,462,`${character.armor}/${character.armorMax}`,textConfig).setDepth(25),character.strengthText=this.add.text(character.sprite.x-40,462,`${character.strength}/${character.strengthMax}`,textConfig).setDepth(25)}describeCharacter(character){gameState.targetingCursor.visible||!0!==character.alive||character.sprite.on("pointerover",(()=>{const armorText=character.armor<0?"more":"less",strengthText=character.strength<0?"less":"more",fullText=`${character.name}\n\n${character.armor} armor: Take ${Math.round(Math.abs(character.armor/20*100))} %\n${armorText} physical damage\n\nMax armor: Take 75 %\nless physical damage \n\n${character.strength} Strength: Deal ${10*Math.abs(character.strength)} %\n${strengthText} physical damage\n\nMax strength: Deal 150 %\nmore physical damage\n\nPoison: ${character.poison}\nPoison change per turn: ${character.poison>0?-1:0}`,x=character.sprite.x-character.width/2;character.descriptionBackground=this.add.graphics({x:x-200,y:210}),character.descriptionBackground.fillStyle(16777215,1).setAlpha(.9).setInteractive().setDepth(30),character.descriptionBackground.fillRect(0,0,215,250);character.descriptionText=this.add.text(x+10,335,fullText,{fontSize:"12px",fill:"#000000"}).setDepth(35).setOrigin(1,.5)})),character.sprite.on("pointerout",(function(){character.descriptionBackground&&character.descriptionBackground.destroy(),character.descriptionText&&character.descriptionText.destroy()}))}addStanceBar(character,textColor){character.stancePoints=0;let screenCenterX=this.cameras.main.width/2;gameState.stanceBarHeight=20,gameState.stanceBarMargin=60,gameState.stanceBarStartX=screenCenterX-220,gameState.stanceBarBackground=this.add.graphics(),gameState.stanceBarBackground.lineStyle(3,0,1),gameState.stanceBarBackground.strokeRect(gameState.stanceBarStartX,gameState.stanceBarMargin,440,gameState.stanceBarHeight).setDepth(20);for(let i=1;i<6;i++)gameState.stanceBarBackground.moveTo(gameState.stanceBarStartX+73.33*i,gameState.stanceBarMargin),gameState.stanceBarBackground.lineTo(gameState.stanceBarStartX+73.33*i,gameState.stanceBarMargin+20),gameState.stanceBarBackground.strokePath();gameState.stanceBar=this.add.graphics(),gameState.stanceBar.fillStyle(65280,1);let stanceTextConfig={fontSize:"30px",fill:textColor};gameState.stanceText=this.add.text(550,gameState.stanceBarMargin-25,`Stance: ${gameState.player.stance}`,stanceTextConfig).setOrigin(.5).setInteractive(),gameState.stanceText.on("pointerover",(()=>{gameState.stanceDescriptionBackground=this.add.sprite(550,gameState.stanceBarBackground.y+50,"listbox2").setScale(2.9,7.3),gameState.stanceDescriptionBackground.setInteractive().setDepth(20).setOrigin(.5,0).setAlpha(.85),gameState.stanceDescriptionText=this.add.text(550,gameState.stanceBarBackground.y+105,"Stance represents the ever-shifting balance\nbetween the conflicting ideals of the\npunk rock samurai: Discipline and Freedom.\n\nPositive Discipline during your turn:\n+3 Strength\n\nPositive Discipline at the end of your turn:\n+3 Armor\n\nMax Discipline at the end of your turn:\n-1 card next turn\n\nPositive Freedom during your turn:\n+1 mana\n\nPositive Freedom at the end of your turn:\n+1 card next turn\n+1 mana next turn\n\nMax Freedom at the end of your turn:\n-2 Armor",{fontSize:"14px",fill:"#000000"}).setDepth(25).setOrigin(.5,0)})),gameState.stanceText.on("pointerout",(()=>{this.time.delayedCall(20,(()=>{gameState.stanceDescriptionBackground.destroy(),gameState.stanceDescriptionText.destroy()}))}))}extractLevelFightFromName(name){const match=/Level(\d+)Fight(\d+)/.exec(name);return match?{level:parseInt(match[1],10),fight:parseInt(match[2],10)}:{level:null,fight:null}}powerUpTweens(character){this.tweens.add({targets:character.sprite,scaleY:1.125*character.sprite.scaleX,scaleX:1.125*character.sprite.scaleY,duration:120,ease:"Cubic",yoyo:!0},this)}attackTweens(character,distance){if("undefined"==typeof attackTweenStarted||!attackTweenStarted){let attackTweenStarted=!0;this.tweens.add({targets:character.sprite,x:character.x+distance,duration:120,ease:"Cubic",yoyo:!0,onComplete:()=>attackTweenStarted=!1},this)}}cardTweens(target,scale,duration){this.tweens.add({targets:target,scaleX:scale,scaleY:scale,duration:duration,ease:"Cubic"},this)}animateCard(card,depth){card.sprite.on("pointerover",(()=>{gameState.cardsDealtSound.play({volume:.6}),this.tweens.add({targets:card.sprite,y:470,angle:0,scaleX:.46,scaleY:.46,duration:300,ease:"Cubic"}),card.sprite.setDepth(100)}),this),card.sprite.on("pointerout",(()=>{card.isBeingPlayed||(this.tweens.add({targets:card.sprite,y:card.startHeight,angle:card.angle,scaleX:.35,scaleY:.35,duration:300,ease:"Cubic"}),card.sprite.setDepth(depth))}),this)}addButtons(){const muteButton=this.add.sprite(1050,40,"radioButtonRoundOff").setScale(.5).setInteractive();gameState.muteText=this.add.text(875,30,"Mute music",{fontSize:"25px",fill:"#000000"}),muteButton.on("pointerup",(()=>{gameState.music.mute?(gameState.music.mute=!1,muteButton.setTexture("radioButtonRoundOff")):(gameState.music.mute=!0,muteButton.setTexture("radioButtonRoundOn"))})),gameState.endOfTurnButton=this.add.sprite(870,510,"rectangularButton").setScale(.45).setOrigin(.5),gameState.endOfTurnText=this.add.text(870,510,"End Turn",{fontSize:"20px",fill:"#000000"}).setOrigin(.5),gameState.endOfTurnButton.on("pointerover",(function(){gameState.endOfTurnButtonPressed||this.setTexture("rectangularButtonHovered")})),gameState.endOfTurnButton.on("pointerout",(function(){gameState.endOfTurnButtonPressed||this.setTexture("rectangularButton")}))}clearBoard(){gameState.characters.forEach((character=>{character.sprite.destroy(),character.strengthAndArmorImage.destroy(),character.armorText.destroy(),character.strengthText.destroy(),character.strengthAndArmorImage.destroy(),character.healthBarBackground.destroy(),character.healthBar.destroy(),character.healthBarText.destroy()})),gameState.player.manaBarBackground.destroy(),gameState.player.manaBar.destroy(),gameState.player.manaBarText.destroy(),gameState.endOfTurnButton.destroy(),gameState.endOfTurnText.destroy(),gameState.drawPileImage.destroy(),gameState.discardPileImage.destroy(),gameState.drawPileText.destroy(),gameState.discardPileText.destroy(),gameState.stanceBar.destroy(),gameState.stanceText.destroy(),gameState.stanceBarBackground.destroy(),gameState.actionText&&gameState.actionText.destroy(),console.log("board cleared")}shuffleDeck(deck){for(let i=deck.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[deck[i],deck[j]]=[deck[j],deck[i]]}return deck}updateEnemyIntention(enemy){let actionKey="function"==typeof enemy.chosenAction.key?enemy.chosenAction.key():enemy.chosenAction.key;enemy.intentionText.setText(`${actionKey}`)}updateHealthBar(character){character.health=Phaser.Math.Clamp(character.health,0,character.healthMax),character.healthBar.clear(),character.healthBar.fillStyle(character===gameState.player?65280:16711680,1),character.healthBar.fillRect(character.x-40,character.y-character.height/2-30,character.health/character.healthMax*100,10),character.healthBarText.setText(`${character.health}/${character.healthMax}`)}updateManaBar(character){character.mana=Phaser.Math.Clamp(character.mana,0,character.manaMax),character.manaBar.clear(),character.manaBar.fillStyle(255,1),character.manaBar.fillRect(character.x-40,character.y-character.height/2-45,character.mana/character.manaMax*100,10),character.manaBarText.setText(`${character.mana}/${character.manaMax}`)}updatePoison(character){character.poison>0&&(console.log("character.poison > 0"),character.health=Math.max(1,character.health-character.poison),character.poisonText&&(console.log("character.poisonText exists"),character.poisonText.setText(`Poison: -${character.poison} HP`)),character.poison-=1)}updateStanceBar(character){const points=gameState.player.stancePoints;switch(points){case-3:character.armorStance=3,character.strengthStance=3,character.manaStance=0,character.numCardsStance=-1,character.stance="Discipline";break;case-2:case-1:character.armorStance=3,character.strengthStance=3,character.manaStance=0,character.numCardsStance=0,character.stance="Discipline";break;case 0:character.armorStance=0,character.strengthStance=0,character.manaStance=0,character.numCardsStance=0,character.stance="Neutral";break;case 1:case 2:character.armorStance=0,character.strengthStance=0,character.manaStance=1,character.numCardsStance=1,character.stance="Freedom";break;case 3:character.armorStance=-2,character.strengthStance=0,character.manaStance=1,character.numCardsStance=1,character.stance="Freedom";break;default:return void console.error(`Unexpected value for points: ${points}`)}gameState.stanceBar.clear(),points<0?gameState.stanceBar.fillRect(gameState.stanceBarStartX+220+73.33*points,gameState.stanceBarMargin,73.33*Math.abs(points),gameState.stanceBarHeight):gameState.stanceBar.fillRect(gameState.stanceBarStartX+220,gameState.stanceBarMargin,73.33*points,gameState.stanceBarHeight),gameState.stanceText.setText(`Stance: ${character.stance}`)}}const sceneState={};class Mainmenu extends Phaser.Scene{constructor(){super("Mainmenu")}async getTopScores(){const response=await fetch("https://www.dreamlo.com/lb/64c442f28f40bb8380e27ce7/json");let scores=(await response.json()).dreamlo.leaderboard.entry;return scores.length>1&&scores.sort(((a,b)=>b.score-a.score)),scores.slice(0,5)}preload(){this.load.image("rectangularFrame","assets/images/stoneButtonFrame.png")}create(){const self=this;this.cameras.main.fadeIn(600,0,0,0),this.input.keyboard.createCursorKeys(),this.add.image(550,480,"bgLoadingScreen").setScale(1.4),this.add.text(15,5,"Punk Rock Samurai Beta v1.00",{fontSize:"12px",fill:"#ff0000"});let nextlevelstarting=!1;gameState.isEnteringName=!1,sceneState.name="",sceneState.cardsDealtSound=this.sound.add("cardsDealtSound"),sceneState.buttonPressedSound=this.sound.add("buttonPressedSound"),sceneState.newGameElements=[],sceneState.leaderboardElements=[],sceneState.creditsElements=[],sceneState.instructionsElements=[],sceneState.displayedScoreArray=[];const headlineConfig={fontSize:"25px",fill:"#000000"},textConfig={fontSize:"14px",fill:"#000000"},buttonTextConfig={fontSize:"18px",fill:"#000000"},x=120,y=350,newGameButton=self.add.image(x,y,"rectangularButton"),newGameText=self.add.text(x,y,"New Game",buttonTextConfig).setOrigin(.5);sceneState.newGameButtonClicked=!1;const loadGameButton=self.add.image(x,415,"rectangularButton"),loadGameText=self.add.text(x,415,"Load Game",{fontSize:"16px",fill:"#a9a9a9"}).setOrigin(.5);let loadGameButtonClicked=!1;const leaderBoardButton=self.add.image(x,480,"rectangularButton"),leaderBoardText=self.add.text(x,480,"Leaderboard",buttonTextConfig).setOrigin(.5);let leaderBoardButtonClicked=!1;const creditsButton=self.add.image(x,545,"rectangularButton"),creditsText=self.add.text(x,545,"Credits",buttonTextConfig).setOrigin(.5);let creditsButtonClicked=!1;const instructionsButton=self.add.image(x,610,"rectangularButton"),instructionsText=self.add.text(x,610,"Instructions",buttonTextConfig).setOrigin(.5);let instructionsButtonClicked=!1;function activateNameForm(gameObject){gameObject.on("pointerup",(()=>{gameState.isEnteringName||(gameState.isEnteringName=!0,console.log("isEnteringName has been activated"),"Enter your name..."===gameState.name&&(gameState.name=""),sceneState.formCursor.setAlpha(0),sceneState.cursorTween.resume(),self.time.delayedCall(200,(()=>{self.input.off("pointerup"),self.input.once("pointerup",(()=>{if(gameState.isEnteringName){let delayTime=0;gameState.name||(gameState.name="Enter your name...",delayTime=100),self.time.delayedCall(delayTime,(()=>{gameState.isEnteringName=!1,console.log("isEnteringName has been deactivated")})),sceneState.formCursor.setAlpha(0),sceneState.cursorTween.pause()}}))})))}))}function startNextLevel(){self.cameras.main.fadeOut(1e3),self.time.delayedCall(1e3,(()=>{self.scene.start("Level1Fight1")}))}function cardTweens(target,scale,duration){self.tweens.add({targets:target,scaleX:scale,scaleY:scale,duration:duration,ease:"Cubic"})}function animateButton(button){button.on("pointerover",(function(){this.setTexture("rectangularButtonHovered")})),button.on("pointerout",(function(){this.setTexture("rectangularButton")}))}function clearElements(){[...sceneState.newGameElements,...sceneState.leaderboardElements,...sceneState.creditsElements,...sceneState.instructionsElements,...sceneState.displayedScoreArray].forEach((element=>{element&&"function"==typeof element.destroy?element.destroy():console.log(`${element} not phaser object`)}))}sceneState.buttons=[newGameButton,loadGameButton,leaderBoardButton,creditsButton,instructionsButton],sceneState.textArray=[newGameText,loadGameText,leaderBoardText,creditsText,instructionsText],sceneState.menuElements=[...sceneState.buttons,...sceneState.textArray],sceneState.buttons.forEach((button=>{animateButton(button),button.setScale(.8,.5).setInteractive().setOrigin(.5)})),newGameButton.on("pointerdown",(()=>{if(sceneState.newGameButtonClicked)sceneState.newGameButtonClicked=!1,clearElements();else{sceneState.buttonPressedSound.play({volume:.7}),sceneState.newGameButtonClicked=!0,loadGameButtonClicked=!1,leaderBoardButtonClicked=!1,creditsButtonClicked=!1,instructionsButtonClicked=!1,clearElements(),gameState.name="Enter your name...";const nameTextConfig={fontSize:"23px",fill:"#000000"};sceneState.nameText=this.add.text(420,315,gameState.name,nameTextConfig).setDepth(21);const buttonTextConfig={fontSize:"28px",fill:"#000000"};sceneState.startGameButton=this.add.image(550,400,"rectangularButton").setScale(1.2,.6).setInteractive(),sceneState.startGameText=this.add.text(470,387,"Let's go!",buttonTextConfig),animateButton(sceneState.startGameButton),sceneState.startGameButton.on("pointerdown",(()=>{gameState.isEnteringName=!1,function(){"Enter your name..."===gameState.name||""===gameState.name?gameState.playerName="Punk Rock Samurai":gameState.playerName=gameState.name;console.log(`Playername: ${gameState.playerName}`),clearElements(),sceneState.menuElements.forEach((element=>{element.destroy()})),self.time.delayedCall(600,(()=>{!function(){const x=320,y=430,spacing=220,bonusCards=gameState.extraCards.slice(0,3),bonusCardTextConfig={fontSize:"50px",fill:"#ff0000"},bonusCardText=self.add.text(550,170,"Choose 1 Free Permanent",bonusCardTextConfig).setOrigin(.5);bonusCards.forEach(((bonusCard,index)=>{bonusCard.sprite=self.add.sprite(x+index*spacing,y,bonusCard.key).setScale(.45).setInteractive(),console.log(`bonusCardsprite added for: ${bonusCard.key}`),bonusCard.sprite.on("pointerover",(function(){sceneState.cardsDealtSound.play({volume:.8}),cardTweens(bonusCard.sprite,.58,200)}),this),bonusCard.sprite.on("pointerout",(function(){cardTweens(bonusCard.sprite,.45,400)}),this),bonusCard.sprite.on("pointerup",(function(){sceneState.cardsDealtSound.play({volume:1.8}),gameState.bonusCard=bonusCard,gameState.extraCards.splice(gameState.extraCards.indexOf(bonusCard),1),bonusCards.forEach((card=>{var gameObject,duration;card.sprite.removeInteractive(),card!==bonusCard&&(gameObject=card.sprite,duration=200,gameObject&&self.tweens.add({targets:gameObject,alpha:0,ease:"Power1",duration:duration,onComplete:()=>{gameObject.destroy()}}))})),self.tweens.add({targets:bonusCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),bonusCardText.setText("Permanent Selected"),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()}))}()}));const formCursorConfig={fontSize:"32px",fill:"#000000"};sceneState.formCursor=this.add.text(420,310,"|",formCursorConfig).setDepth(21).setAlpha(0),sceneState.cursorTween=this.tweens.add({targets:sceneState.formCursor,alpha:1,duration:300,hold:600,yoyo:!0,repeat:-1,paused:!0}),sceneState.formFrame=this.add.image(550,325,"rectangularFrame"),sceneState.formFrame.setScale(1.2,.6).setInteractive().setDepth(22),sceneState.nameForm=this.add.graphics({x:400,y:290}),sceneState.nameForm.fillStyle(16777215,1).setAlpha(.9).setInteractive().setDepth(20),sceneState.nameForm.fillRect(0,0,300,65),sceneState.nameForm.setInteractive(new Phaser.Geom.Rectangle(0,0,300,65),Phaser.Geom.Rectangle.Contains),sceneState.newGameElements=[sceneState.formCursor,sceneState.nameForm,sceneState.nameText,sceneState.formFrame,sceneState.startGameButton,sceneState.startGameText],activateNameForm(sceneState.nameForm),activateNameForm(sceneState.formFrame)}})),this.input.keyboard.on("keydown",(event=>{if(gameState.isEnteringName){const maxNameLength=16;8===event.keyCode&&gameState.name.length>0?gameState.name=gameState.name.slice(0,-1):1===event.key.length&&event.key.match(/[a-zA-Z0-9\s\-_]/)&&gameState.name.length<maxNameLength?gameState.name+=event.key:gameState.name.length===maxNameLength&&self.cameras.main.shake(30,.001,!1)}})),loadGameButton.on("pointerup",(function(){self.cameras.main.shake(70,.002,!1)})),leaderBoardButton.on("pointerup",(async()=>{if(sceneState.buttonPressedSound.play({volume:.7}),leaderBoardButtonClicked)leaderBoardButtonClicked=!1,clearElements();else{const topScores=await self.getTopScores(),x=250;let y=200;sceneState.newGameButtonClicked=!1,loadGameButtonClicked=!1,leaderBoardButtonClicked=!0,creditsButtonClicked=!1,instructionsButtonClicked=!1,clearElements(),sceneState.leaderboardsBackground=this.add.graphics(),sceneState.leaderboardsBackground.fillStyle(16777215,1).setAlpha(.9),sceneState.leaderboardsBackground.fillRect(x,y,810,250);const headlineConfig={fontSize:"25px",fill:"#000000"};sceneState.leaderboardHeadline=this.add.text(x+20,y+30,"Leaderboard",headlineConfig).setOrigin(0),sceneState.displayedScoreArray=[];for(let i=0;i<topScores.length;i++){const dateOnly=topScores[i].date.split(" ")[0],scoreText=`${i+1}. Name: ${topScores[i].name}, Score: ${topScores[i].score}, Date: ${dateOnly}`,displayedScore=this.add.text(x+30,y+80,scoreText,textConfig).setOrigin(0);sceneState.displayedScoreArray.push(displayedScore),y+=20}sceneState.leaderboardElements=[sceneState.leaderboardsBackground,sceneState.leaderboardHeadline,sceneState.displayedScoreArray]}})),creditsButton.on("pointerup",(function(){creditsButtonClicked?(creditsButtonClicked=!1,clearElements()):(sceneState.buttonPressedSound.play({volume:.7}),sceneState.newGameButtonClicked=!1,loadGameButtonClicked=!1,leaderBoardButtonClicked=!1,creditsButtonClicked=!0,instructionsButtonClicked=!1,clearElements(),sceneState.creditsBackground=self.add.graphics(),sceneState.creditsBackground.fillStyle(16777215,1).setAlpha(.9),sceneState.creditsBackground.fillRect(250,200,810,340),sceneState.creditsHeadline=self.add.text(270,230,"Credits",headlineConfig).setOrigin(0),sceneState.creditsText=self.add.text(270,280,"Game Design and Programming by Erlend Kulander Kvitrud\nMusic by Marllon Silva (xDeviruchi) (https://soundcloud.com/xdeviruchi)\nPunch sound by @danielsoundsgood (https://danielsoundsgood.itch.io/)\nHealing sound by Dylan Kelk (https://freesound.org/people/SilverIllusionist/)\nPower up sound by MATRIXXX (https://freesound.org/people/MATRIXXX_/)\nGunshot sound by Fesliyan Studios (https://www.fesliyanstudios.com)\nButton Sprites by Ian Eborn (http://thaumaturge-art.com/)\nArmor and Strength symbols by Josepzin (https://opengameart.org/users/josepzin)\nCard sprites by Avery Ross (https://opengameart.org/users/averyre)\nCharacter sprites and backgrounds were generated with MidJourney",textConfig),sceneState.creditsText.setLineSpacing(2),sceneState.creditsElements=[sceneState.creditsBackground,sceneState.creditsHeadline,sceneState.creditsText])})),instructionsButton.on("pointerup",(function(){sceneState.buttonPressedSound.play({volume:.7}),instructionsButtonClicked?(instructionsButtonClicked=!1,clearElements()):(sceneState.newGameButtonClicked=!1,loadGameButtonClicked=!1,leaderBoardButtonClicked=!1,creditsButtonClicked=!1,instructionsButtonClicked=!0,clearElements(),sceneState.instructionsBackground=self.add.graphics(),sceneState.instructionsBackground.fillStyle(16777215,1).setAlpha(.9),sceneState.instructionsBackground.fillRect(250,20,810,650),sceneState.instructionsHeadline=self.add.text(270,50,"Instructions",headlineConfig).setOrigin(0),sceneState.instructionsText=self.add.text(270,100,'The game consists of four levels, each of which consists of three fights.\nAt the start of your turn, you gain 4 mana and draw 5 cards. You may then play any number\nof cards before hitting "End Turn". Your remaining cards and mana are then depleted,\nand the enemy\'s turn begins. You win the fight by killing all enemies. Losing a fight\nresults in permadeath. Missing health carries over from fight to fight, but is reset at\nthe beginning of each new level\n\nThere are three different kinds of attack: physical damage, fire damage and poison.\n\nPhysical damage is affected by the Strength of the attacker and the Armor of the defender\n-Each unit of Strength increases outgoing physical damage by 10 %.\n-Each unit of Armor blocks 5 % of incomming physical damage\nArmor and Strength are both capped at 15 units.\n\nFire damage is unaffected by Strength and Armor, but otherwise acts like physical damage.\n\nPoison is unaffected by Strength and Armor. A poisoned character suffers damage each\nround equal to his poison counter. At the end of his turn, this counter is reduced by 1. \nUnlike physical and fire damage, poison cannot reduce a characters health below 1 HP.\n\nPermanents are cards that can only be played once, and are then removed from your deck.\nAfter use, they remain active and provide passive bonuses. A maximum of 4 permanents may be\nactive at any given time. Permanents can be depleted, which unleases powerful one-off\neffects and then removes them from the game. If there are no empty slots for new permanents,\npermanent cards may be played directly from hand for their depletion effects.\n\nStance represents the balance between Discipline and Freedom.\n-Positive Discipline during your turn: +3 Strength.\n-Positive Discipline at the end of your turn: +3 Armor.\n-Max Discipline at the end of your turn: -1 card next turn.\n\n-Positive Freedom during your turn: +1 mana.\n-Positive Freedom at the end of your turn: +1 card and +1 mana next turn.\n-Max Freedom at the end of your turn:-2 Armor.',textConfig),sceneState.instructionsText.setLineSpacing(1.5),sceneState.instructionsElements=[sceneState.instructionsBackground,sceneState.instructionsHeadline,sceneState.instructionsText])}))}update(){let textWidth=0;gameState.isEnteringName&&sceneState.newGameButtonClicked&&(sceneState.nameText.setText(gameState.name),textWidth=sceneState.nameText.width,sceneState.formCursor.x=sceneState.nameText.x+textWidth-7)}}class Level1Fight1 extends BaseScene{self;constructor(){super("Level1Fight1")}preload(){this.load.image("theCity","assets/images/theCity.jpg"),this.load.image("bakgrunnCity1","assets/images/bakgrunnCity1.jpg"),this.load.image("nazi","assets/images/sprites/nazi.png")}create(){const self=this;this.baseCreate("bakgrunnCity1"),this.resetPlayer(gameState.player,.37),this.addButtons(),function(){gameState.drawPileImage=self.add.image(120,600,"deck"),gameState.drawPileImage.setScale(.13).setOrigin(.5,.5).setInteractive();gameState.drawPileText=self.add.text(120,600,gameState.drawPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.drawPileText.setDepth(100).setOrigin(.5,.5),gameState.drawPileImage.on("pointerover",(function(){if(gameState.drawPile.length>0){const cardsPerRow=gameState.drawPile.length<12?4:6,cardSpacing=105,startX=gameState.drawPile.length<12?400:250,startY=150;gameState.drawPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.drawPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]}))}(),gameState.discardPileText=self.add.text(980,600,gameState.discardPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.discardPileText.setDepth(100).setOrigin(.5,.5),gameState.discardPileImage=self.add.image(980,600,"deck"),gameState.discardPileImage.setScale(.13).setOrigin(.5,.5).setInteractive().setTint(16711680),gameState.discardPileImage.on("pointerover",(function(){if(gameState.discardPile.length>0){const cardsPerRow=gameState.discardPile.length<12?4:6,cardSpacing=105,startX=gameState.discardPile.length<12?400:250,startY=150;gameState.discardPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.discardPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]})),gameState.kamishimoUberAlles=0,gameState.kirisuteGomen=!1,gameState.toxicFrets=!1,gameState.ashenEncore=!1,gameState.edoEruption=!1,gameState.steelToe=!1,gameState.currentCards=[],gameState.cardImages=[],gameState.permanents=[],gameState.player.name=gameState.playerName?gameState.playerName:"Punk Rock Samurai",gameState.enemy1=Object.create(gameState.enemy),gameState.enemy1.name="Nazi Punk",gameState.enemy1.sprite=this.add.sprite(710,350,"nazi").setScale(.38).setFlipX(!1).setInteractive(),gameState.enemy1.health=50,gameState.enemy1.healthMax=50,gameState.enemies=[gameState.enemy1],gameState.characters=[...gameState.enemies,gameState.player],gameState.characters.forEach((character=>{character.height=character.sprite.displayHeight,character.width=character.sprite.displayWidth,character.x=character.sprite.x,character.y=character.sprite.y,this.addHealthBar(character,character.healthBarColor),this.addStatsDisplay(character),this.describeCharacter(character,character.sprite)})),this.addManaBar(gameState.player),this.addStanceBar(gameState.player,"#a9a9a9");const levelTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},levelimage=this.add.image(0,0,"theCity").setScale(.87).setOrigin(.02,0).setDepth(300),leveltextTop=this.add.text(550,270,"Level 1:",levelTextConfig).setDepth(301).setOrigin(.5),leveltextBottom=this.add.text(550,430,"The City",levelTextConfig).setDepth(301).setOrigin(.5);let levelStarting=!1;function startFight(){gameState.turn=0,gameState.musicTheme.stop(),self.shuffleDeck(gameState.drawPile);const{level:level,fight:fight}=self.extractLevelFightFromName(self.scene.key);gameState.startText=self.add.text(550,300,`Level ${level}\nFight ${fight}!`,{fontSize:"60px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setDepth(200).setOrigin(.5),addPermanent(gameState.bonusCard),self.time.delayedCall(350,(()=>{gameState.music.play({loop:!0,volume:.35})})),self.time.delayedCall(2800,(()=>{fadeOutGameObject(gameState.startText,200),self.time.delayedCall(300,startPlayerTurn())}))}function startPlayerTurn(){let numCards=gameState.player.numCardsBase+gameState.player.numCardsStance;gameState.turn+=1,gameState.endOfTurnButtonPressed=!1,gameState.yourTurnText=self.add.text(550,300,"Your turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),gameState.player.poisonText=self.add.text(570,350,"",{fontSize:"25px",fill:"#ff0000"}).setOrigin(.5),console.log(`player's turn number ${gameState.turn} has started`),gameState.player.armorCard=0,gameState.player.strengthCard=0;const manaMax=gameState.player.manaBase+gameState.player.manaStance;gameState.player.manaMax=gameState.rebelSpirit&&gameState.turn%3==0?manaMax+1:manaMax,gameState.player.mana=gameState.player.manaMax,gameState.foreverTrue&&gameState.player.stancePoints>0?(gameState.player.manaMax+=1,gameState.player.mana+=1):gameState.player.stancePoints=0,self.updateStanceBar(gameState.player),self.updateManaBar(gameState.player),self.updateHealthBar(gameState.player),self.updatePoison(gameState.player),removeIfDead(gameState.player),updateStrengthAndArmor(gameState.player),self.time.delayedCall(2e3,(()=>{gameState.player.poisonText.destroy(),fadeOutGameObject(gameState.yourTurnText,200),function(numCards){gameState.endOfTurnButton.setTexture("rectangularButton"),gameState.endOfTurnButton.setInteractive();const startSlotIndex=Math.floor((gameState.slots.length-numCards)/2);for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));const card=gameState.drawPile.pop(),cardDepth=10+i+startSlotIndex;card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),card.isBeingPlayed=!1,gameState.currentCards.push(card),card.sprite.setDepth(cardDepth);const slot=gameState.slots[startSlotIndex+i];slot&&(card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot),gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),self.animateCard(card,cardDepth),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}));gameState.playersTurn=!0}(numCards),gameState.enemies.forEach((enemy=>{updateEnemyActions(),function(enemy){!function(enemy){const totalProbability=enemy.actions.reduce(((sum,action)=>sum+action.probability),0);if(1!==totalProbability){const scalingFactor=1/totalProbability;for(let action of enemy.actions)action.probability*=scalingFactor}}(enemy);let cumProb=0;for(let i=0;i<enemy.actions.length;i++)cumProb+=enemy.actions[i].probability,enemy.actions[i].cumulativeProbability=cumProb;const rand=Math.random();enemy.chosenAction=enemy.actions.find((action=>rand<action.cumulativeProbability))}(enemy),function(enemy){const actionKey="function"==typeof enemy.chosenAction.key?enemy.chosenAction.key():enemy.chosenAction.key,textConfig={fontSize:"13px",fill:"#000000"};enemy.intentionText=self.add.text(enemy.x+10,enemy.y-enemy.height/2-40,`${actionKey}`,textConfig),enemy.intentionText.setOrigin(.5,1).setDepth(11);const originalSpriteWidth=self.textures.get("listbox1").getSourceImage().width,scale=enemy.intentionText.width/originalSpriteWidth;enemy.intentionBackground=self.add.sprite(enemy.x+10,enemy.y-enemy.height/2-33,"listbox1").setScale(1.05*scale,1),enemy.intentionBackground.setInteractive().setOrigin(.5,1).setAlpha(.85).setDepth(10)}(enemy)}))}))}self.time.delayedCall(4e3,(()=>{levelStarting||(levelStarting=!0,fadeOutGameObject(levelimage,2e3),fadeOutGameObject(leveltextTop,2e3),fadeOutGameObject(leveltextBottom,2e3),self.time.delayedCall(2200,startFight()))})),self.input.on("pointerup",(()=>{levelStarting||(levelStarting=!0,fadeOutGameObject(levelimage,2e3),fadeOutGameObject(leveltextTop,2e3),fadeOutGameObject(leveltextBottom,2e3),self.time.delayedCall(2200,startFight()))}));function activateCard(card){if(gameState.typePlayed="function"==typeof card.type?card.type():card.type,gameState.costPlayed="function"==typeof card.cost?card.cost():card.cost,gameState.player.mana>=gameState.costPlayed&&!1===gameState.playingCard)if(gameState.player.mana-=gameState.costPlayed,self.updateManaBar(gameState.player),console.log(`activated card: ${card.key}\nCost: ${gameState.costPlayed}`),gameState.player.freedomBeforeCardPlayed="Freedom"===gameState.player.stance,card.isBeingPlayed=!0,gameState.currentCards=gameState.currentCards.filter((c=>c!==card)),card.slot&&(card.slot.available=!0),"targetSelected"===gameState.typePlayed)!function(card,handOfCards){gameState.targetingCursor.setVisible(!0),gameState.thisTurn=gameState.turn;for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.removeInteractive();for(let enemy of gameState.enemies)enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){card.isBeingPlayed&&gameState.playersTurn&&gameState.thisTurn===gameState.turn&&(card.isBeingPlayed=!1,gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,enemy));for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.setInteractive()}))}(card,gameState.currentCards);else if("targetAll"===gameState.typePlayed){gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length);const enemiesCopy=[...gameState.enemies];gameState.enemiesLength=enemiesCopy.length,enemiesCopy.forEach(((enemy,index)=>{const isLastEnemy=index===enemiesCopy.length-1;playCard(card,enemy,isLastEnemy)}))}else"permanent"===gameState.typePlayed?addPermanent(card):(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,gameState.player));else self.cameras.main.shake(70,.002,!1)}function playCard(card,target,isLastEnemy=!1){gameState.playingCard=!0,fadeOutGameObject(card.sprite,200),fadeOutGameObject(gameState.actionText,50),gameState.targetingCursor.setVisible(!1);const{damagePlayed:damagePlayed,firePlayed:firePlayed,stancePointsPlayed:stancePointsPlayed,poisonPlayed:poisonPlayed,healPlayed:healPlayed,strengthPlayed:strengthPlayed,armorPlayed:armorPlayed,reduceTargetArmorPlayed:reduceTargetArmorPlayed,reduceTargetStrengthPlayed:reduceTargetStrengthPlayed,drawCardPlayed:drawCardPlayed}=function(card,target,isLastEnemy=!1){const stancePoints=gameState.player.stancePoints,moshpitMassacreCondition="moshpitMassacre"===card.key&&stancePoints>0&&target.poison>0,scorchedSoulCondition="scorchedSoul"===card.key&&target.poison>0,bladesBlightCondition="bladesBlight"===card.key&&target.poison>0,roninsRotCondition="roninsRot"===card.key&&target.poison>0,kabutuEdoCondition="kabutu"===card.key&&gameState.edoEruption&&stancePoints>0,steelToeCondition="combatBoots"===card.key&&gameState.steelToe,knuckleFistEdoCondition="knuckleFist"===card.key&&gameState.edoEruption&&stancePoints<0,steelToeOutcome=stancePoints>0?2*(1+stancePoints):2;return{damagePlayed:moshpitMassacreCondition?11:getValueOrInvoke(card.damage),firePlayed:kabutuEdoCondition?2*stancePoints:scorchedSoulCondition?12:getValueOrInvoke(card.fire),stancePointsPlayed:kabutuEdoCondition&&isLastEnemy?-1:getValueOrInvoke(card.stancePoints),poisonPlayed:bladesBlightCondition?target.poison:getValueOrInvoke(card.poison),healPlayed:getValueOrInvoke(card.heal),strengthPlayed:getValueOrInvoke(card.strength),armorPlayed:knuckleFistEdoCondition?-stancePoints:getValueOrInvoke(card.armor),reduceTargetArmorPlayed:steelToeCondition?steelToeOutcome:getValueOrInvoke(card.reduceTargetArmor),reduceTargetStrengthPlayed:roninsRotCondition?target.poison:getValueOrInvoke(card.reduceTargetStrength),drawCardPlayed:getValueOrInvoke(card.drawCard)}}(card,target,isLastEnemy),damageModifyer=(1+.1*gameState.player.strength)*(1-target.armor/20),damageTotal=Math.round(Math.max(0,firePlayed+damagePlayed*damageModifyer));target!=gameState.player&&(gameState.score.damageDealt+=damageTotal,console.log(`${damagePlayed} Physical Damage and ${firePlayed} Fire Damage was dealt to ${target.name}`),target.strengthTurn-=reduceTargetStrengthPlayed,target.armor-=reduceTargetArmorPlayed,target.poison+=poisonPlayed,target.health-=damageTotal),"seppuku"===card.key||"boneShredder"===card.key?gameState.player.strengthBase+=strengthPlayed:gameState.player.strengthCard+=strengthPlayed,"libertySpikes"===card.key&&gameState.player.stancePoints>0&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),healPlayed&&(gameState.player.health=Math.min(gameState.player.health+healPlayed,gameState.player.healthMax),self.updateHealthBar(gameState.player)),gameState.player.armorCard+=armorPlayed,gameState.player.poison=Math.max(0,gameState.player.poison-card.poisonRemove),function(damageTotal,poisonPlayed,strengthPlayed,armorPlayed){const actionTextConfig={fontSize:"32px",fill:"#ff0000"};if("targetSelected"===gameState.typePlayed||"targetAll"===gameState.typePlayed){self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8});const actionTextTarget=`${damageTotal>0?`Deals ${damageTotal} damage`:""}\n\n${poisonPlayed>0?`Deals ${poisonPlayed} Poison`:""}`;gameState.actionText=self.add.text(550,300,actionTextTarget,actionTextConfig).setOrigin(.5),self.attackTweens(gameState.player,60)}else strengthPlayed>0?(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${strengthPlayed} Strength`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player)):armorPlayed>0&&(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${armorPlayed} Armor`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player))}(damageTotal,poisonPlayed,strengthPlayed,armorPlayed),gameState.player.stancePoints+stancePointsPlayed>=-3&&gameState.player.stancePoints+stancePointsPlayed<=3&&(gameState.player.stancePoints+=stancePointsPlayed,self.updateStanceBar(gameState.player)),gameState.player.freedomAfterCardPlayed="Freedom"===gameState.player.stance,!gameState.player.freedomBeforeCardPlayed&&gameState.player.freedomAfterCardPlayed&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),updateStats(target),self.updateHealthBar(target),updateStrengthAndArmor(gameState.player),removeIfDead(target),checkGameOver(),updateEnemyActions(),drawNewCards(drawCardPlayed),gameState.enemies.forEach((enemy=>{self.updateEnemyIntention(enemy)})),self.time.delayedCall(260,(()=>{gameState.playingCard=!1})),self.time.delayedCall(1500,(()=>{gameState.actionText&&gameState.actionText.destroy()}))}function getValueOrInvoke(cardProperty){return"function"==typeof cardProperty?cardProperty():cardProperty}function initiateEnemiesTurn(){0!==gameState.enemies.length&&(gameState.enemies[gameState.currentEnemyIndex].alive?function(enemy){gameState.playersTurn&&(gameState.playersTurn=!1,enemy.turnText=self.add.text(550,300,"Enemy turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),self.time.delayedCall(1600,(()=>{fadeOutGameObject(enemy.turnText,200)})));enemy.turnComplete=!1,function(enemy){enemy.poisonText=self.add.text(570,350,"",{fontSize:"30px",fill:"#ff0000"}).setOrigin(.5),self.updatePoison(enemy),gameState.toxicAvenger&&enemy.poison>0&&updateStats(enemy);const delaytime=""!==enemy.poisonText._text||enemy.turnText?1800:600;self.time.delayedCall(delaytime,(()=>{enemy.poisonText.destroy();const chosenAction=enemy.chosenAction,actionTextConfig={fontSize:"32px",fill:"#ff0000"};if(gameState.player.poison+=chosenAction.poison,enemy.health=Math.min(enemy.health+chosenAction.heal,enemy.healthMax),enemy.strengthBase=Math.min(enemy.strengthBase+chosenAction.strength,enemy.strengthMax),updateStats(enemy),enemy.armor=Math.min(enemy.armor+chosenAction.armor,enemy.armorMax),chosenAction.damage>0||chosenAction.fire>0){const damageModifyer=(1+.1*enemy.strength)*(1-gameState.player.armor/20);self.cameras.main.shake(120,.005,!1),gameState.attackSound.play({volume:.8}),console.log(`enemy.damageTotal: ${enemy.damageTotal}`),enemy.damageTotal=Math.round(Math.max(0,chosenAction.fire+chosenAction.damage*damageModifyer)),gameState.player.health-=enemy.damageTotal,gameState.score.damageTaken+=enemy.damageTotal,gameState.actionText=self.add.text(550,300,`Deals ${enemy.damageTotal} damage`,actionTextConfig).setOrigin(.5),self.tweens.add({targets:enemy.sprite,x:enemy.sprite.x-60,duration:120,ease:"Cubic",yoyo:!0})}else chosenAction.heal>0?(gameState.healSound.play({volume:.5}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy)):(chosenAction.strength>0||chosenAction.armor>0||chosenAction.poison>0)&&(gameState.powerUpSound.play({volume:.2}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy));enemy.strengthTurn=0,function(enemy){[gameState.player,enemy].forEach((character=>{self.updateHealthBar(character),removeIfDead(character),updateStats(character)})),self.time.delayedCall(1300,(()=>{fadeOutGameObject(gameState.actionText,200),enemy.turnComplete=!0,checkGameOver()||!gameState.enemies[gameState.currentEnemyIndex].turnComplete&&gameState.enemies[gameState.currentEnemyIndex].alive||(gameState.currentEnemyIndex++,gameState.currentEnemyIndex<gameState.enemies.length?initiateEnemiesTurn():(gameState.currentEnemyIndex=0,startPlayerTurn()))}))}(enemy)}))}(enemy)}(gameState.enemies[gameState.currentEnemyIndex]):(gameState.currentEnemyIndex++,initiateEnemiesTurn()))}function updateEnemyActions(){1===gameState.turn?gameState.enemy1.actions=[{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:7,text:"Gains 7 armor",probability:1}]:2===gameState.turn?gameState.enemy1.actions=[{key:()=>`Intends to\nDeal ${Math.round(12*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:12,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 12 damage",probability:1}]:3===gameState.turn?gameState.enemy1.actions=[{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 15 damage",probability:1}]:gameState.enemy1.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 fire damage",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(12*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:12,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 12 damage",probability:.27+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(17*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:17,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 17 damage",probability:.18+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:2,text:"Heals 15 HP\nGains 2 armor",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:1,text:"Heals 25 HP\nGains 1 armor",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.06},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:4,armor:0,text:"Gains 4 strenght",probability:.12+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:5,text:"Gains 5 armor",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 poison",probability:0}]}function checkGameOver(){return gameState.player.alive?!gameState.enemies.some((enemy=>enemy.alive))&&(gameState.playersTurn=!1,function(){gameState.score.numberOfTurns+=gameState.turn,gameState.score.levelsCompleted+=1,gameState.music.stop(),self.updateManaBar(gameState.player),addHandtoDeck(),self.time.delayedCall(600,(()=>{gameState.attackSound.isPlaying&&gameState.attackSound.stop(),gameState.victorySound.play({volume:.9,rate:1}),self.clearBoard()})),gameState.actionText&&(gameState.actionText.destroy(),console.log("gameState.actionText still existed at initiateVictory and got destroyed"));const victoryTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},victoryText=self.add.text(550,300,"Victory!",victoryTextConfig).setOrigin(.5);self.time.delayedCall(1800,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),victoryText.destroy(),function(){self.shuffleDeck(gameState.bonusCards);const gameOverTextConfig={fontSize:"40px",fill:"#000000"},rewardTextConfig={fontSize:"25px",fill:"#000000"};gameState.gameOverText=self.add.text(550,180,"Choose a reward",gameOverTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsText=self.add.text(550,400,"Add 1 card\nto your deck",rewardTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsButton=self.add.image(550,400,"rectangularButton"),gameState.rewardAddCardsButton.setScale(1.2).setInteractive().setOrigin(.5).setDepth(102),gameState.rewardAddCardsButton.on("pointerover",(function(){this.setTexture("rectangularButtonHovered")})),gameState.rewardAddCardsButton.on("pointerout",(function(){this.setTexture("rectangularButton")})),gameState.rewardAddCardsButton.on("pointerup",(function(){gameState.rewardAddCardsText.destroy(),gameState.gameOverText.destroy(),gameState.rewardAddCardsButton.destroy(),function(){console.log("rewardAddCard called"),gameState.gameOverText.destroy();const x=320,y=300,spacing=220;let bonusCards=gameState.bonusCards.slice(0,3);console.log(`bonusCards: ${bonusCards.key}`),bonusCards.forEach(((bonusCard,index)=>{bonusCard.sprite=self.add.sprite(x+index*spacing,y,bonusCard.key),bonusCard.sprite.setScale(.45).setInteractive().setDepth(102),console.log(`bonusCardsprite added for: ${bonusCard.key}`),bonusCard.sprite.on("pointerover",(()=>{gameState.cardsDealtSound.play({volume:.6}),self.cardTweens(bonusCard.sprite,.58,200)}),self),bonusCard.sprite.on("pointerout",(()=>{self.cardTweens(bonusCard.sprite,.45,400)}),self),bonusCard.sprite.on("pointerup",(()=>{let nextlevelstarting=!1;gameState.deck.push(bonusCard),"permanent"===bonusCard.type&&gameState.bonusCards.splice(gameState.bonusCards.indexOf(bonusCard),1),bonusCards.forEach((card=>{card.sprite.removeInteractive(),card!==bonusCard&&fadeOutGameObject(card.sprite,200)})),self.tweens.add({targets:bonusCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),self.add.text(550,180,"Gained 1 card",{fontSize:"40px",fill:"#000000"}).setOrigin(.5),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()}))}()}))}(),!0):(gameState.playersTurn=!1,function(){gameState.player.health=0,self.updateManaBar(gameState.player),addHandtoDeck(),gameState.music.stop(),gameState.endOfTurnButton.destroy(),gameState.actionText&&fadeOutGameObject(gameState.actionText,200);gameState.score.numberOfTurns+=gameState.turn,gameState.gameOverText=self.add.text(550,300," Defeat!",{fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setOrigin(.5),gameState.gameOverText.setInteractive();let scenetransitionstarted=!1;self.time.delayedCall(400,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),scenetransitionstarted||(gameState.gameOverText.on("pointerup",(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})),self.time.delayedCall(2400,(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})))}))}(),!0)}function startNextLevel(){self.cameras.main.fadeOut(1e3),self.time.delayedCall(1e3,(()=>{self.scene.start("Level1Fight2")}))}gameState.slots=[{available:!0,x:230,y:640,index:0,angle:-12},{available:!0,x:320,y:610,index:1,angle:-8},{available:!0,x:410,y:590,index:2,angle:-4},{available:!0,x:500,y:580,index:3,angle:0},{available:!0,x:590,y:590,index:4,angle:4},{available:!0,x:680,y:610,index:5,angle:8},{available:!0,x:770,y:640,index:6,angle:12},{available:!0,x:860,y:670,index:7,angle:16}],gameState.endOfTurnButton.on("pointerup",(function(){gameState.currentEnemyIndex=0,gameState.targetingCursor.visible||!gameState.playersTurn?self.cameras.main.shake(70,.002,!1):(this.setTexture("rectangularButtonPressed"),this.removeInteractive(),gameState.buttonPressedSound.play(),gameState.endOfTurnButtonPressed=!0,addHandtoDeck(),updateStrengthAndArmor(gameState.player),updateEnemyActions(),gameState.rebelHeart&&(gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+Math.abs(gameState.player.stancePoints)),self.updateHealthBar(gameState.player)),gameState.enemies.forEach((enemy=>{enemy.turnComplete=!enemy.alive,fadeOutGameObject(enemy.intentionText,200),fadeOutGameObject(enemy.intentionBackground,200)})),0!=gameState.player.mana&&(gameState.player.mana=0,self.updateManaBar(gameState.player)),self.time.delayedCall(100,(()=>{gameState.actionText&&gameState.actionText.destroy(),initiateEnemiesTurn()})))}));function addPermanent(card){const slot=gameState.permanentSlots.find((slot=>slot.available));"kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length)):card!=gameState.bonusCard&&(gameState.deck=gameState.deck.filter((c=>c!==card))),slot?(card!=gameState.bonusCard&&(card.slot.available=!0,card.sprite.destroy()),card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,gameState.permanents.push({card:card,slot:slot,tokenSprite:card.tokenSprite}),function(card){card.tokenSprite.on("pointerover",(function(){gameState.cardsDealtSound.play({volume:1.5}),card.permanentCardSprite=self.add.sprite(550,300,card.key).setScale(.55).setDepth(26)})),card.tokenSprite.on("pointerout",(function(){card.permanentCardSprite.destroy()}))}(card),function(card){if("foreverTrue"===card.key)gameState.foreverTrue=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteForeverTrue(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelSpirit"===card.key)gameState.rebelSpirit=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelSpirit(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelHeart"===card.key)gameState.rebelHeart=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelHeart(card):self.cameras.main.shake(70,.002,!1)}));else if("bushido"===card.key)gameState.bushido=!0,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteBushido(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicAvenger"===card.key)gameState.toxicAvenger=!0,gameState.enemies.forEach((enemy=>updateStats(enemy))),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicAvenger(card):self.cameras.main.shake(70,.002,!1)}));else if("kirisuteGomen"===card.key)gameState.player.strengthMax+=5,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn&&gameState.enemies.some((enemy=>enemy.health<30))?depleteKirisuteGomen(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicFrets"===card.key)gameState.toxicFrets=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicFrets(card):self.cameras.main.shake(70,.002,!1)}));else if("ashenEncore"===card.key)gameState.ashenEncore=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteAshenEncore(card):self.cameras.main.shake(70,.002,!1)}));else if("edoEruption"===card.key)gameState.edoEruption=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteEdoEruption(card):self.cameras.main.shake(70,.002,!1)}));else if("steelToe"===card.key)gameState.steelToe=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteSteelToe(card):self.cameras.main.shake(70,.002,!1)}));else if("kamishimoUberAlles"===card.key){const tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;gameState.kamishimoUberAlles+=1,updateStrengthAndArmor(gameState.player),tokenSprite.on("pointerup",(()=>{gameState.playersTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.kamishimoUberAlles-=1,updateStrengthAndArmor(gameState.player)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}else if("hollidayInKamakura"===card.key){let tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;const turnplayed=gameState.turn,fightplayed=gameState.score.levelsCompleted;tokenSprite.on("pointerup",(()=>{const depletedDifferentTurn=turnplayed!=gameState.turn||fightplayed!=gameState.score.levelsCompleted;console.log(`depletedDifferentTurn: ${depletedDifferentTurn}\nturnplayed: ${turnplayed}\ngameState.turn: ${gameState.turn}\nfightplayed: ${fightplayed}\ngameState.score.levelsCompleted: ${gameState.score.levelsCompleted}\ngameState.playersTurn: ${gameState.playersTurn}`),gameState.playersTurn&&depletedDifferentTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.player.manaMax+=1,gameState.player.mana+=1,self.updateManaBar(gameState.player),drawNewCards(1)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}}(card)):function(card){switch(self.cameras.main.shake(70,.002,!1),card.isBeingPlayed=!1,console.log(`No available slot for permanent card ${card.key}`),card.key){case"foreverTrue":depleteForeverTrue(card);break;case"rebelSpirit":depleteRebelSpirit(card);break;case"rebelHeart":depleteRebelHeart(card);break;case"bushido":depleteBushido(card);break;case"toxicAvenger":depleteToxicAvenger(card);break;case"kirisuteGomen":depleteKirisuteGomen(card);case"toxicFrets":depleteToxicFrets(card);break;case"ashenEncore":depleteAshenEncore(card);break;case"edoEruption":depleteEdoEruption(card);break;case"steelToe":depleteSteelToe(card);break;case"kamishimoUberAlles":case"hollidayInKamakura":gameState.currentCards.push(card),card.slot.available=!1}}(card)}function depleteForeverTrue(card){gameState.foreverTrue=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),drawNewCards(8)}function depleteRebelSpirit(card){gameState.rebelSpirit=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.mana+=3,gameState.player.manaMax+=3,self.updateManaBar(gameState.player)}function depleteRebelHeart(card){gameState.rebelHeart=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+12),self.updateHealthBar(gameState.player)}function depleteBushido(card){gameState.bushido=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.strengthBase+=6,updateStrengthAndArmor(gameState.player)}function depleteToxicAvenger(card){gameState.toxicAvenger=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison+=4,updateStats(enemy)}))}function depleteKirisuteGomen(card){if(gameState.enemies.some((enemy=>enemy.health<30))){gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let functionActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){enemy.health<30&&functionActive?(enemy.health=0,gameState.attackSound.play({volume:1}),self.cameras.main.shake(120,.025,!1),card.tokenSlot&&(card.tokenSlot.available=!0,gameState.player.strengthMax-=5),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),removeIfDead(enemy),checkGameOver(),updateStrengthAndArmor(gameState.player)):(self.cameras.main.shake(70,.002,!1),functionActive=!1),gameState.targetingCursor.setVisible(!1)}))}))}else self.cameras.main.shake(70,.002,!1),card.slot.available=!1,gameState.currentCards.some((card=>"kirisuteGomen"===card.key))||(gameState.currentCards.push(card),gameState.player.mana+=1,self.updateManaBar(gameState.player))}function depleteToxicFrets(card){gameState.toxicFrets=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison>0&&(enemy.health-=2*enemy.poison,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver())}))}function depleteAshenEncore(card){gameState.ashenEncore=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card));const ashenEncoreDepleteText=self.add.text(550,350,"Deals 12 firedamage\n to all enemies",{fontSize:"32px",fill:"#ff0000"}).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDepleteText.destroy()})),gameState.enemies.forEach((enemy=>{enemy.health-=12,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver()}))}function depleteEdoEruption(card){gameState.edoEruption=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card))}function depleteSteelToe(card){gameState.steelToe=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let depleteSteelToeActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){depleteSteelToeActive&&(enemy.armor-=7,updateStats(enemy),gameState.attackSound.play({volume:.6}),self.cameras.main.shake(100,.012,!1),gameState.targetingCursor.setVisible(!1),depleteSteelToeActive=!1)}))}))}function updateStrengthAndArmor(character){let strengthBushido=0;gameState.endOfTurnButtonPressed?(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard+character.armorStance),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+strengthBushido)):(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+character.strengthCard+strengthBushido)),gameState.kamishimoUberAlles>0&&gameState.player.stancePoints<0&&(character.strength=Math.min(character.strengthMax,character.strength-gameState.player.stancePoints*gameState.kamishimoUberAlles)),updateStats(character)}function updateStats(character){character!=gameState.player&&(character.strength=character.strengthBase+character.strengthTurn,gameState.toxicAvenger&&character.poison>0&&(character.strength-=4)),character.armorText.setText(`${character.armor}/${character.armorMax}`),character.strengthText.setText(`${character.strength}/${character.strengthMax}`)}function removeIfDead(character){if(character.health<=0){if(character.health=0,character.sprite.removeInteractive(),character.alive=!1,character.turnComplete=!0,character!=gameState.player){const indexEnemies=gameState.enemies.indexOf(character),indexCharacters=gameState.characters.indexOf(character);-1!==indexEnemies&&gameState.enemies.splice(indexEnemies,1),-1!==indexCharacters&&gameState.characters.splice(indexCharacters,1)}[character.sprite,character.healthBarBackground,character.healthBar,character.healthBarText,character.manaBarBackground,character.manaBar,character.manaBarText,character.strengthAndArmorImage,character.strengthText,character.armorText,character.descriptionBackground,character.descriptionText,character.intentionText,character.intentionBackground].forEach((object=>{fadeOutGameObject(object,500)}))}}function addHandtoDeck(){for(;gameState.currentCards.length>0;){let card=gameState.currentCards.pop();card.slot.available||(card.slot.available=!0),gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),fadeOutGameObject(card.sprite,200)}}function drawNewCards(numCards){const numCardsLimit=Math.min(gameState.deck.length,8),numOfFreeSlots=gameState.slots.filter((slot=>slot.available)).length;numCards=numOfFreeSlots<numCards?numOfFreeSlots:numCards;for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{if(gameState.currentCards.length<numCardsLimit){0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));let card=gameState.drawPile.pop();card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),console.log(`card added: ${card.key}`),card.isBeingPlayed=!1,gameState.currentCards.push(card);let availableSlots=gameState.slots.filter((slot=>slot.available)),slot=availableSlots[Math.floor(availableSlots.length/2)];if(slot){card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot;let cardDepth=10+slot.index;card.sprite.setDepth(cardDepth),self.animateCard(card,cardDepth)}gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),gameState.ashenEncore&&gameState.enemies.forEach((enemy=>{if(enemy.health-=4,self.updateHealthBar(enemy),removeIfDead(enemy),"undefined"==typeof ashenEncoreText||!ashenEncoreText){const ashenEncoreConfig={fontSize:"32px",fill:"#ff0000"},ashenEncoreKey="Deals 4 fire damage to all enemies",ashenEncoreDrawText=self.add.text(550,350,ashenEncoreKey,ashenEncoreConfig).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDrawText.destroy()}))}})),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}else self.cameras.main.shake(70,.002,!1)}))}function fadeOutGameObject(gameObject,duration){gameObject&&self.tweens.add({targets:gameObject,alpha:0,ease:"Power1",duration:duration,onComplete:()=>{gameObject.destroy()}},self)}gameState.permanentSlots=[{available:!0,x:40,y:40,index:0},{available:!0,x:115,y:40,index:1},{available:!0,x:190,y:40,index:2},{available:!0,x:265,y:40,index:3}],"admin"===gameState.playerName&&(gameState.getManaButton=self.add.sprite(550,200,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.getManaText=self.add.text(550,200,"Get Mana",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.getManaButton.on("pointerup",(()=>{gameState.playersTurn&&(gameState.player.mana=gameState.player.manaMax,self.updateManaBar(gameState.player),console.log("mana gained"))})),gameState.drawCardButton=self.add.sprite(550,300,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.drawCardText=self.add.text(550,300,"Draw Card",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.drawCardButton.on("pointerup",(()=>{gameState.playersTurn&&(drawNewCards(1),console.log("card drawn"))})),gameState.killEnemyButton=self.add.sprite(550,400,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.killEnemyText=self.add.text(550,400,"Kill Enemy",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.killEnemyButton.on("pointerup",(()=>{if(gameState.enemies.some((enemy=>enemy.health>0&&gameState.playersTurn))){const enemy=gameState.enemies.find((enemy=>enemy.health>0));enemy.health=0,removeIfDead(enemy),checkGameOver(),console.log(`${enemy.name} killed`)}})))}update(){gameState.targetingCursor.visible&&(gameState.targetingCursor.x=this.input.mousePointer.x,gameState.targetingCursor.y=this.input.mousePointer.y)}}class Level1Fight2 extends BaseScene{self;constructor(){super("Level1Fight2")}preload(){this.load.image("bakgrunnCity2","assets/images/bakgrunnCity2.jpg"),this.load.image("police1","assets/images/sprites/police1.png"),this.load.image("police2","assets/images/sprites/police2.png")}create(){const self=this;for(this.baseCreate("bakgrunnCity2"),this.resetPlayer(gameState.player,.36),this.addButtons(),function(){gameState.drawPileImage=self.add.image(120,600,"deck"),gameState.drawPileImage.setScale(.13).setOrigin(.5,.5).setInteractive();gameState.drawPileText=self.add.text(120,600,gameState.drawPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.drawPileText.setDepth(100).setOrigin(.5,.5),gameState.drawPileImage.on("pointerover",(function(){if(gameState.drawPile.length>0){const cardsPerRow=gameState.drawPile.length<12?4:6,cardSpacing=105,startX=gameState.drawPile.length<12?400:250,startY=150;gameState.drawPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.drawPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]}))}(),gameState.discardPileText=self.add.text(980,600,gameState.discardPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.discardPileText.setDepth(100).setOrigin(.5,.5),gameState.discardPileImage=self.add.image(980,600,"deck"),gameState.discardPileImage.setScale(.13).setOrigin(.5,.5).setInteractive().setTint(16711680),gameState.discardPileImage.on("pointerover",(function(){if(gameState.discardPile.length>0){const cardsPerRow=gameState.discardPile.length<12?4:6,cardSpacing=105,startX=gameState.discardPile.length<12?400:250,startY=150;gameState.discardPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.discardPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]})),gameState.kamishimoUberAlles=0,gameState.kirisuteGomen=!1,gameState.toxicFrets=!1,gameState.ashenEncore=!1,gameState.edoEruption=!1,gameState.steelToe=!1,gameState.currentCards=[],gameState.cardImages=[];gameState.extraCards.length;)gameState.bonusCards.push(gameState.extraCards.pop());function startPlayerTurn(){let numCards=gameState.player.numCardsBase+gameState.player.numCardsStance;gameState.turn+=1,gameState.endOfTurnButtonPressed=!1,gameState.yourTurnText=self.add.text(550,300,"Your turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),gameState.player.poisonText=self.add.text(570,350,"",{fontSize:"25px",fill:"#ff0000"}).setOrigin(.5),console.log(`player's turn number ${gameState.turn} has started`),gameState.player.armorCard=0,gameState.player.strengthCard=0;const manaMax=gameState.player.manaBase+gameState.player.manaStance;gameState.player.manaMax=gameState.rebelSpirit&&gameState.turn%3==0?manaMax+1:manaMax,gameState.player.mana=gameState.player.manaMax,gameState.foreverTrue&&gameState.player.stancePoints>0?(gameState.player.manaMax+=1,gameState.player.mana+=1):gameState.player.stancePoints=0,self.updateStanceBar(gameState.player),self.updateManaBar(gameState.player),self.updateHealthBar(gameState.player),self.updatePoison(gameState.player),removeIfDead(gameState.player),updateStrengthAndArmor(gameState.player),self.time.delayedCall(2200,(()=>{gameState.player.poisonText.destroy(),fadeOutGameObject(gameState.yourTurnText,200),function(numCards){gameState.endOfTurnButton.setTexture("rectangularButton"),gameState.endOfTurnButton.setInteractive();const startSlotIndex=Math.floor((gameState.slots.length-numCards)/2);for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));const card=gameState.drawPile.pop(),cardDepth=10+i+startSlotIndex;card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),card.isBeingPlayed=!1,gameState.currentCards.push(card),card.sprite.setDepth(cardDepth);const slot=gameState.slots[startSlotIndex+i];slot&&(card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot),gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),self.animateCard(card,cardDepth),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}));gameState.playersTurn=!0}(numCards),gameState.enemies.forEach((enemy=>{updateEnemyActions(),function(enemy){!function(enemy){const totalProbability=enemy.actions.reduce(((sum,action)=>sum+action.probability),0);if(1!==totalProbability){const scalingFactor=1/totalProbability;for(let action of enemy.actions)action.probability*=scalingFactor}}(enemy);let cumProb=0;for(let i=0;i<enemy.actions.length;i++)cumProb+=enemy.actions[i].probability,enemy.actions[i].cumulativeProbability=cumProb;const rand=Math.random();enemy.chosenAction=enemy.actions.find((action=>rand<action.cumulativeProbability))}(enemy),function(enemy){const actionKey="function"==typeof enemy.chosenAction.key?enemy.chosenAction.key():enemy.chosenAction.key,textConfig={fontSize:"13px",fill:"#000000"};enemy.intentionText=self.add.text(enemy.x+10,enemy.y-enemy.height/2-40,`${actionKey}`,textConfig),enemy.intentionText.setOrigin(.5,1).setDepth(11);const originalSpriteWidth=self.textures.get("listbox1").getSourceImage().width,scale=enemy.intentionText.width/originalSpriteWidth;enemy.intentionBackground=self.add.sprite(enemy.x+10,enemy.y-enemy.height/2-33,"listbox1").setScale(1.05*scale,1),enemy.intentionBackground.setInteractive().setOrigin(.5,1).setAlpha(.85).setDepth(10)}(enemy)}))}))}gameState.enemy1=Object.create(gameState.enemy),gameState.enemy1.name="Police Officer",gameState.enemy1.sprite=this.add.sprite(700,350,"police1").setScale(.22).setFlipX(!0).setInteractive(),gameState.enemy1.health=40,gameState.enemy1.healthMax=40,gameState.enemy2=Object.create(gameState.enemy),gameState.enemy2.name="Police Officer",gameState.enemy2.sprite=this.add.sprite(870,350,"police2").setScale(.33).setFlipX(!0).setInteractive(),gameState.enemy2.health=60,gameState.enemy2.healthMax=60,gameState.enemies=[gameState.enemy1,gameState.enemy2],gameState.characters=[...gameState.enemies,gameState.player],gameState.characters.forEach((character=>{character.height=character.sprite.displayHeight,character.width=character.sprite.displayWidth,character.x=character.sprite.x,character.y=character.sprite.y,this.addHealthBar(character,character.healthBarColor),this.addStatsDisplay(character),this.describeCharacter(character,character.sprite)})),this.addManaBar(gameState.player),this.addStanceBar(gameState.player,"#a9a9a9"),gameState.permanents.forEach((permanent=>{const card=permanent.card,slot=permanent.slot;"kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?slot.available=!0:(card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,console.log(`Recreated permanent: ${card.key}\nfor slot ${slot.index}`),displayTokenCard(card),activatePermanentFromToken(card))})),function(){gameState.turn=0,gameState.musicTheme.stop(),self.shuffleDeck(gameState.drawPile);const{level:level,fight:fight}=self.extractLevelFightFromName(self.scene.key);gameState.startText=self.add.text(550,300,`Level ${level}\nFight ${fight}!`,{fontSize:"60px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setDepth(200).setOrigin(.5),self.time.delayedCall(350,(()=>{gameState.music.play({loop:!0,volume:.35})})),self.time.delayedCall(3e3,(()=>{fadeOutGameObject(gameState.startText,200),self.time.delayedCall(300,startPlayerTurn())}))}();function activateCard(card){if(gameState.costPlayed="function"==typeof card.cost?card.cost():card.cost,gameState.typePlayed="function"==typeof card.type?card.type():card.type,gameState.player.mana>=gameState.costPlayed&&!1===gameState.playingCard)if(gameState.player.mana-=gameState.costPlayed,self.updateManaBar(gameState.player),console.log(`activated card: ${card.key}\nCost: ${gameState.costPlayed}`),gameState.player.freedomBeforeCardPlayed="Freedom"===gameState.player.stance,card.isBeingPlayed=!0,gameState.currentCards=gameState.currentCards.filter((c=>c!==card)),card.slot&&(card.slot.available=!0),"targetSelected"===gameState.typePlayed)!function(card,handOfCards){gameState.targetingCursor.setVisible(!0),gameState.thisTurn=gameState.turn;for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.removeInteractive();for(let enemy of gameState.enemies)enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){card.isBeingPlayed&&gameState.playersTurn&&gameState.thisTurn===gameState.turn&&(card.isBeingPlayed=!1,gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,enemy));for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.setInteractive()}))}(card,gameState.currentCards);else if("targetAll"===gameState.typePlayed){gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length);const enemiesCopy=[...gameState.enemies];gameState.enemiesLength=enemiesCopy.length,enemiesCopy.forEach(((enemy,index)=>{const isLastEnemy=index===enemiesCopy.length-1;playCard(card,enemy,isLastEnemy)}))}else"permanent"===gameState.typePlayed?function(card){const slot=gameState.permanentSlots.find((slot=>slot.available));slot?("kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length)):gameState.deck=gameState.deck.filter((c=>c!==card)),card.slot.available=!0,card.sprite.destroy(),card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,gameState.permanents.push({card:card,slot:slot,tokenSprite:card.tokenSprite}),displayTokenCard(card),activatePermanentFromToken(card)):function(card){switch(self.cameras.main.shake(70,.002,!1),card.isBeingPlayed=!1,console.log(`No available slot for permanent card ${card.key}`),card.key){case"foreverTrue":depleteForeverTrue(card);break;case"rebelSpirit":depleteRebelSpirit(card);break;case"rebelHeart":depleteRebelHeart(card);break;case"bushido":depleteBushido(card);break;case"toxicAvenger":depleteToxicAvenger(card);break;case"kirisuteGomen":depleteKirisuteGomen(card);case"toxicFrets":depleteToxicFrets(card);break;case"ashenEncore":depleteAshenEncore(card);break;case"edoEruption":depleteEdoEruption(card);break;case"steelToe":depleteSteelToe(card);break;case"kamishimoUberAlles":case"hollidayInKamakura":gameState.currentCards.push(card),card.slot.available=!1}}(card)}(card):(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,gameState.player));else self.cameras.main.shake(70,.002,!1)}function playCard(card,target,isLastEnemy=!1){gameState.playingCard=!0,fadeOutGameObject(card.sprite,200),fadeOutGameObject(gameState.actionText,50),gameState.targetingCursor.setVisible(!1);const{damagePlayed:damagePlayed,firePlayed:firePlayed,stancePointsPlayed:stancePointsPlayed,poisonPlayed:poisonPlayed,healPlayed:healPlayed,strengthPlayed:strengthPlayed,armorPlayed:armorPlayed,reduceTargetArmorPlayed:reduceTargetArmorPlayed,reduceTargetStrengthPlayed:reduceTargetStrengthPlayed,drawCardPlayed:drawCardPlayed}=function(card,target,isLastEnemy=!1){const moshpitMassacreCondition="moshpitMassacre"===card.key&&gameState.player.stancePoints>0&&target.poison>0,scorchedSoulCondition="scorchedSoul"===card.key&&target.poison>0,bladesBlightCondition="bladesBlight"===card.key&&target.poison>0,roninsRotCondition="roninsRot"===card.key&&target.poison>0,kabutuEdoCondition="kabutu"===card.key&&gameState.edoEruption&&gameState.player.stancePoints>0,steelToeCondition="combatBoots"===card.key&&gameState.steelToe,knuckleFistEdoCondition="knuckleFist"===card.key&&gameState.edoEruption&&gameState.player.stancePoints<0,steelToeOutcome=gameState.player.stancePoints>0?2*(1+gameState.player.stancePoints):2;return{damagePlayed:moshpitMassacreCondition?11:getValueOrInvoke(card.damage),firePlayed:kabutuEdoCondition?2*gameState.player.stancePoints:scorchedSoulCondition?12:getValueOrInvoke(card.fire),stancePointsPlayed:kabutuEdoCondition&&isLastEnemy?-1:getValueOrInvoke(card.stancePoints),poisonPlayed:bladesBlightCondition?target.poison:getValueOrInvoke(card.poison),healPlayed:getValueOrInvoke(card.heal),strengthPlayed:getValueOrInvoke(card.strength),armorPlayed:knuckleFistEdoCondition?-gameState.player.stancePoints:getValueOrInvoke(card.armor),reduceTargetArmorPlayed:steelToeCondition?steelToeOutcome:getValueOrInvoke(card.reduceTargetArmor),reduceTargetStrengthPlayed:roninsRotCondition?target.poison:getValueOrInvoke(card.reduceTargetStrength),drawCardPlayed:getValueOrInvoke(card.drawCard)}}(card,target,isLastEnemy),damageModifyer=(1+.1*gameState.player.strength)*(1-target.armor/20),damageTotal=Math.round(Math.max(0,firePlayed+damagePlayed*damageModifyer));target!=gameState.player&&(gameState.score.damageDealt+=damageTotal,console.log(`${damagePlayed} Physical Damage and ${firePlayed} Fire Damage was dealt to ${target.name}`),target.strengthTurn-=reduceTargetStrengthPlayed,target.armor-=reduceTargetArmorPlayed,target.poison+=poisonPlayed,target.health-=damageTotal),"seppuku"===card.key||"boneShredder"===card.key?gameState.player.strengthBase+=strengthPlayed:gameState.player.strengthCard+=strengthPlayed,"libertySpikes"===card.key&&gameState.player.stancePoints>0&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),healPlayed&&(gameState.player.health=Math.min(gameState.player.health+healPlayed,gameState.player.healthMax),self.updateHealthBar(gameState.player)),gameState.player.armorCard+=armorPlayed,gameState.player.poison=Math.max(0,gameState.player.poison-card.poisonRemove),function(damageTotal,poisonPlayed,strengthPlayed,armorPlayed){const actionTextConfig={fontSize:"32px",fill:"#ff0000"};if("targetSelected"===gameState.typePlayed||"targetAll"===gameState.typePlayed){self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8});const actionTextTarget=`${damageTotal>0?`Deals ${damageTotal} damage`:""}\n\n${poisonPlayed>0?`Deals ${poisonPlayed} Poison`:""}`;gameState.actionText=self.add.text(550,300,actionTextTarget,actionTextConfig).setOrigin(.5),self.attackTweens(gameState.player,60)}else strengthPlayed>0?(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${strengthPlayed} Strength`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player)):armorPlayed>0&&(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${armorPlayed} Armor`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player))}(damageTotal,poisonPlayed,strengthPlayed,armorPlayed),gameState.player.stancePoints+stancePointsPlayed>=-3&&gameState.player.stancePoints+stancePointsPlayed<=3&&(gameState.player.stancePoints+=stancePointsPlayed,self.updateStanceBar(gameState.player)),gameState.player.freedomAfterCardPlayed="Freedom"===gameState.player.stance,!gameState.player.freedomBeforeCardPlayed&&gameState.player.freedomAfterCardPlayed&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),updateStats(target),self.updateHealthBar(target),updateStrengthAndArmor(gameState.player),removeIfDead(target),checkGameOver(),updateEnemyActions(),drawNewCards(drawCardPlayed),gameState.enemies.forEach((enemy=>{self.updateEnemyIntention(enemy)})),self.time.delayedCall(260,(()=>{gameState.playingCard=!1})),self.time.delayedCall(1500,(()=>{gameState.actionText&&gameState.actionText.destroy()}))}function initiateEnemiesTurn(){0!==gameState.enemies.length&&(gameState.enemies[gameState.currentEnemyIndex].alive?function(enemy){gameState.playersTurn&&(gameState.playersTurn=!1,enemy.turnText=self.add.text(550,300,"Enemy turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),self.time.delayedCall(1800,(()=>{fadeOutGameObject(enemy.turnText,200)})));enemy.turnComplete=!1,function(enemy){enemy.poisonText=self.add.text(570,350,"",{fontSize:"30px",fill:"#ff0000"}).setOrigin(.5),self.updatePoison(enemy),gameState.toxicAvenger&&enemy.poison>0&&updateStats(enemy);const delaytime=""!==enemy.poisonText._text||enemy.turnText?1800:800;self.time.delayedCall(delaytime,(()=>{enemy.poisonText.destroy();const chosenAction=enemy.chosenAction,actionTextConfig={fontSize:"32px",fill:"#ff0000"};if(gameState.player.poison+=chosenAction.poison,enemy.health=Math.min(enemy.health+chosenAction.heal,enemy.healthMax),enemy.strengthBase=Math.min(enemy.strengthBase+chosenAction.strength,enemy.strengthMax),updateStats(enemy),enemy.armor=Math.min(enemy.armor+chosenAction.armor,enemy.armorMax),chosenAction.damage>0||chosenAction.fire>0){const damageModifyer=(1+.1*enemy.strength)*(1-gameState.player.armor/20);self.cameras.main.shake(120,.005,!1),gameState.attackSound.play({volume:.8}),console.log(`enemy.damageTotal: ${enemy.damageTotal}`),enemy.damageTotal=Math.round(Math.max(0,chosenAction.fire+chosenAction.damage*damageModifyer)),gameState.player.health-=enemy.damageTotal,gameState.score.damageTaken+=enemy.damageTotal,gameState.actionText=self.add.text(550,300,`Deals ${enemy.damageTotal} damage`,actionTextConfig).setOrigin(.5),self.tweens.add({targets:enemy.sprite,x:enemy.sprite.x-60,duration:120,ease:"Cubic",yoyo:!0})}else chosenAction.heal>0?(gameState.healSound.play({volume:.5}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy)):(chosenAction.strength>0||chosenAction.armor>0||chosenAction.poison>0)&&(gameState.powerUpSound.play({volume:.2}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy));enemy.strengthTurn=0,function(enemy){[gameState.player,enemy].forEach((character=>{self.updateHealthBar(character),removeIfDead(character),updateStats(character)})),self.time.delayedCall(1500,(()=>{fadeOutGameObject(gameState.actionText,200),enemy.turnComplete=!0,checkGameOver()||!gameState.enemies[gameState.currentEnemyIndex].turnComplete&&gameState.enemies[gameState.currentEnemyIndex].alive||(gameState.currentEnemyIndex++,gameState.currentEnemyIndex<gameState.enemies.length?initiateEnemiesTurn():(gameState.currentEnemyIndex=0,startPlayerTurn()))}))}(enemy)}))}(enemy)}(gameState.enemies[gameState.currentEnemyIndex]):(gameState.currentEnemyIndex++,initiateEnemiesTurn()))}function updateEnemyActions(){1===gameState.turn?gameState.enemy1.actions=[{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:6,text:"Gains 6 armor",probability:1}]:2===gameState.turn?gameState.enemy1.actions=[{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 15 damage",probability:1}]:gameState.enemy1.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 fire damage",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 15 damage",probability:.235+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(20*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:20,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 20 damage",probability:.17+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,text:"Heals 15 HP\nGains 1 armor",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 strenght",probability:.125+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:4,text:"Gains 4 armor",probability:.15+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 poison",probability:0}],1===gameState.turn?gameState.enemy2.actions=[{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 Strength",probability:1}]:gameState.enemy2.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 fire damage",probability:.1+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(14*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:14,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 14 damage",probability:.235+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(18*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:18,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 18 damage",probability:.17+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,text:"Heals 15 HP\nGains 1 armor",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 strenght",probability:.125+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:4,text:"Gains 4 armor",probability:.15+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 poison",probability:0}]}function checkGameOver(){return gameState.player.alive?!gameState.enemies.some((enemy=>enemy.alive))&&(gameState.playersTurn=!1,function(){gameState.score.numberOfTurns+=gameState.turn,gameState.score.levelsCompleted+=1,gameState.music.stop(),self.updateManaBar(gameState.player),addHandtoDeck(),self.time.delayedCall(600,(()=>{gameState.attackSound.isPlaying&&gameState.attackSound.stop(),gameState.victorySound.play({volume:.9,rate:1}),self.clearBoard()})),gameState.actionText&&(gameState.actionText.destroy(),console.log("gameState.actionText still existed at initiateVictory and got destroyed"));const victoryTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},victoryText=self.add.text(550,300,"Victory!",victoryTextConfig).setOrigin(.5);self.time.delayedCall(2e3,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),victoryText.destroy(),function(){self.shuffleDeck(gameState.bonusCards);const gameOverTextConfig={fontSize:"40px",fill:"#000000"},rewardTextConfig={fontSize:"25px",fill:"#000000"};gameState.gameOverText=self.add.text(550,180,"Choose a reward",gameOverTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsText=self.add.text(550,400,"Add 1 card\nto your deck",rewardTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsButton=self.add.image(550,400,"rectangularButton"),gameState.rewardAddCardsButton.setScale(1.2).setInteractive().setOrigin(.5).setDepth(102),gameState.rewardAddCardsButton.on("pointerover",(function(){this.setTexture("rectangularButtonHovered")})),gameState.rewardAddCardsButton.on("pointerout",(function(){this.setTexture("rectangularButton")})),gameState.rewardAddCardsButton.on("pointerup",(function(){gameState.rewardAddCardsText.destroy(),gameState.gameOverText.destroy(),gameState.rewardAddCardsButton.destroy(),function(){console.log("rewardAddCard called"),gameState.gameOverText.destroy();const x=320,y=300,spacing=220;let bonusCards=gameState.bonusCards.slice(0,3);console.log(`bonusCards: ${bonusCards.key}`),bonusCards.forEach(((bonusCard,index)=>{bonusCard.sprite=self.add.sprite(x+index*spacing,y,bonusCard.key),bonusCard.sprite.setScale(.45).setInteractive().setDepth(102),console.log(`bonusCardsprite added for: ${bonusCard.key}`),bonusCard.sprite.on("pointerover",(()=>{gameState.cardsDealtSound.play({volume:.6}),self.cardTweens(bonusCard.sprite,.58,200)}),self),bonusCard.sprite.on("pointerout",(()=>{self.cardTweens(bonusCard.sprite,.45,400)}),self),bonusCard.sprite.on("pointerup",(()=>{let nextlevelstarting=!1;gameState.deck.push(bonusCard),"permanent"===bonusCard.type&&gameState.bonusCards.splice(gameState.bonusCards.indexOf(bonusCard),1),bonusCards.forEach((card=>{card.sprite.removeInteractive(),card!==bonusCard&&fadeOutGameObject(card.sprite,200)})),self.tweens.add({targets:bonusCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),self.add.text(550,180,"Gained 1 card",{fontSize:"40px",fill:"#000000"}).setOrigin(.5),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()}))}()}))}(),!0):(gameState.playersTurn=!1,function(){gameState.player.health=0,self.updateManaBar(gameState.player),addHandtoDeck(),gameState.music.stop(),gameState.endOfTurnButton.destroy(),gameState.actionText&&fadeOutGameObject(gameState.actionText,200);gameState.score.numberOfTurns+=gameState.turn,gameState.gameOverText=self.add.text(550,300," Defeat!",{fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setOrigin(.5),gameState.gameOverText.setInteractive();let scenetransitionstarted=!1;self.time.delayedCall(400,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),scenetransitionstarted||(gameState.gameOverText.on("pointerup",(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})),self.time.delayedCall(2500,(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})))}))}(),!0)}function startNextLevel(){self.cameras.main.fadeOut(1e3),self.time.delayedCall(1e3,(()=>{self.scene.start("Level1Fight3")}))}function activatePermanentFromToken(card){if("foreverTrue"===card.key)gameState.foreverTrue=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteForeverTrue(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelSpirit"===card.key)gameState.rebelSpirit=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelSpirit(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelHeart"===card.key)gameState.rebelHeart=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelHeart(card):self.cameras.main.shake(70,.002,!1)}));else if("bushido"===card.key)gameState.bushido=!0,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteBushido(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicAvenger"===card.key)gameState.toxicAvenger=!0,gameState.enemies.forEach((enemy=>updateStats(enemy))),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicAvenger(card):self.cameras.main.shake(70,.002,!1)}));else if("kirisuteGomen"===card.key)gameState.player.strengthMax+=5,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn&&gameState.enemies.some((enemy=>enemy.health<30))?depleteKirisuteGomen(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicFrets"===card.key)gameState.toxicFrets=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicFrets(card):self.cameras.main.shake(70,.002,!1)}));else if("ashenEncore"===card.key)gameState.ashenEncore=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteAshenEncore(card):self.cameras.main.shake(70,.002,!1)}));else if("edoEruption"===card.key)gameState.edoEruption=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteEdoEruption(card):self.cameras.main.shake(70,.002,!1)}));else if("steelToe"===card.key)gameState.steelToe=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteSteelToe(card):self.cameras.main.shake(70,.002,!1)}));else if("kamishimoUberAlles"===card.key){const tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;gameState.kamishimoUberAlles+=1,updateStrengthAndArmor(gameState.player),tokenSprite.on("pointerup",(()=>{gameState.playersTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.kamishimoUberAlles-=1,updateStrengthAndArmor(gameState.player)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}else if("hollidayInKamakura"===card.key){let tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;const turnplayed=gameState.turn,fightplayed=gameState.score.levelsCompleted;tokenSprite.on("pointerup",(()=>{const depletedDifferentTurn=turnplayed!=gameState.turn||fightplayed!=gameState.score.levelsCompleted;console.log(`depletedDifferentTurn: ${depletedDifferentTurn}\nturnplayed: ${turnplayed}\ngameState.turn: ${gameState.turn}\nfightplayed: ${fightplayed}\ngameState.score.levelsCompleted: ${gameState.score.levelsCompleted}\ngameState.playersTurn: ${gameState.playersTurn}`),gameState.playersTurn&&depletedDifferentTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.player.manaMax+=1,gameState.player.mana+=1,self.updateManaBar(gameState.player),drawNewCards(1)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}}function displayTokenCard(card){card.tokenSprite.on("pointerover",(function(){gameState.cardsDealtSound.play({volume:1.5}),card.permanentCardSprite=self.add.sprite(550,300,card.key).setScale(.55).setDepth(26)})),card.tokenSprite.on("pointerout",(function(){card.permanentCardSprite.destroy()}))}function depleteForeverTrue(card){gameState.foreverTrue=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),drawNewCards(8)}function depleteRebelSpirit(card){gameState.rebelSpirit=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.mana+=3,gameState.player.manaMax+=3,self.updateManaBar(gameState.player)}function depleteRebelHeart(card){gameState.rebelHeart=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+12),self.updateHealthBar(gameState.player)}function depleteBushido(card){gameState.bushido=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.strengthBase+=6,updateStrengthAndArmor(gameState.player)}function depleteToxicAvenger(card){gameState.toxicAvenger=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison+=4,updateStats(enemy)}))}function depleteKirisuteGomen(card){if(gameState.enemies.some((enemy=>enemy.health<30))){gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let functionActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){enemy.health<30&&functionActive?(enemy.health=0,gameState.attackSound.play({volume:1}),self.cameras.main.shake(120,.025,!1),card.tokenSlot&&(card.tokenSlot.available=!0,gameState.player.strengthMax-=5),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),removeIfDead(enemy),checkGameOver(),updateStrengthAndArmor(gameState.player)):(self.cameras.main.shake(70,.002,!1),functionActive=!1),gameState.targetingCursor.setVisible(!1)}))}))}else self.cameras.main.shake(70,.002,!1),card.slot.available=!1,gameState.currentCards.some((card=>"kirisuteGomen"===card.key))||(gameState.currentCards.push(card),gameState.player.mana+=1,self.updateManaBar(gameState.player))}function depleteToxicFrets(card){gameState.toxicFrets=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison>0&&(enemy.health-=2*enemy.poison,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver())}))}function depleteAshenEncore(card){console.log("DEBUG: depleteAshenEncore started"),gameState.ashenEncore=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card));const ashenEncoreDepleteText=self.add.text(550,350,"Deals 12 firedamage\n to all enemies",{fontSize:"32px",fill:"#ff0000"}).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDepleteText.destroy()})),gameState.enemies.forEach((enemy=>{enemy.health-=12,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver()}))}function depleteEdoEruption(card){gameState.edoEruption=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card))}function depleteSteelToe(card){gameState.steelToe=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let depleteSteelToeActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){depleteSteelToeActive&&(enemy.armor-=7,updateStats(enemy),gameState.attackSound.play({volume:.6}),self.cameras.main.shake(100,.012,!1),gameState.targetingCursor.setVisible(!1),depleteSteelToeActive=!1)}))}))}function updateStrengthAndArmor(character){let strengthBushido=0;gameState.endOfTurnButtonPressed?(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard+character.armorStance),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+strengthBushido)):(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+character.strengthCard+strengthBushido)),gameState.kamishimoUberAlles>0&&gameState.player.stancePoints<0&&(character.strength=Math.min(character.strengthMax,character.strength-gameState.player.stancePoints*gameState.kamishimoUberAlles)),updateStats(character)}function updateStats(character){character!=gameState.player&&(character.strength=character.strengthBase+character.strengthTurn,gameState.toxicAvenger&&character.poison>0&&(character.strength-=4)),character.armorText.setText(`${character.armor}/${character.armorMax}`),character.strengthText.setText(`${character.strength}/${character.strengthMax}`)}function removeIfDead(character){if(character.health<=0){if(character.health=0,character.sprite.removeInteractive(),character.alive=!1,character.turnComplete=!0,character!=gameState.player){const indexEnemies=gameState.enemies.indexOf(character),indexCharacters=gameState.characters.indexOf(character);-1!==indexEnemies&&gameState.enemies.splice(indexEnemies,1),-1!==indexCharacters&&gameState.characters.splice(indexCharacters,1)}[character.sprite,character.healthBarBackground,character.healthBar,character.healthBarText,character.manaBarBackground,character.manaBar,character.manaBarText,character.strengthAndArmorImage,character.strengthText,character.armorText,character.descriptionBackground,character.descriptionText,character.intentionText,character.intentionBackground].forEach((object=>{fadeOutGameObject(object,500)}))}}function addHandtoDeck(){for(;gameState.currentCards.length>0;){let card=gameState.currentCards.pop();card.slot.available||(card.slot.available=!0),gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),fadeOutGameObject(card.sprite,200)}}function drawNewCards(numCards){const numCardsLimit=Math.min(gameState.deck.length,8),numOfFreeSlots=gameState.slots.filter((slot=>slot.available)).length;numCards=numOfFreeSlots<numCards?numOfFreeSlots:numCards;for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{if(gameState.currentCards.length<numCardsLimit){0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));let card=gameState.drawPile.pop();card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),console.log(`card added: ${card.key}`),card.isBeingPlayed=!1,gameState.currentCards.push(card);let availableSlots=gameState.slots.filter((slot=>slot.available)),slot=availableSlots[Math.floor(availableSlots.length/2)];if(slot){card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot;let cardDepth=10+slot.index;card.sprite.setDepth(cardDepth),self.animateCard(card,cardDepth)}gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),gameState.ashenEncore&&gameState.enemies.forEach((enemy=>{if(enemy.health-=4,self.updateHealthBar(enemy),removeIfDead(enemy),"undefined"==typeof ashenEncoreText||!ashenEncoreText){const ashenEncoreConfig={fontSize:"32px",fill:"#ff0000"},ashenEncoreKey="Deals 4 fire damage to all enemies",ashenEncoreDrawText=self.add.text(550,350,ashenEncoreKey,ashenEncoreConfig).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDrawText.destroy()}))}})),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}else self.cameras.main.shake(70,.002,!1)}))}function getValueOrInvoke(cardProperty){return"function"==typeof cardProperty?cardProperty():cardProperty}function fadeOutGameObject(gameObject,duration){gameObject&&self.tweens.add({targets:gameObject,alpha:0,ease:"Power1",duration:duration,onComplete:()=>{gameObject.destroy()}},self)}gameState.slots=[{available:!0,x:230,y:640,index:0,angle:-12},{available:!0,x:320,y:610,index:1,angle:-8},{available:!0,x:410,y:590,index:2,angle:-4},{available:!0,x:500,y:580,index:3,angle:0},{available:!0,x:590,y:590,index:4,angle:4},{available:!0,x:680,y:610,index:5,angle:8},{available:!0,x:770,y:640,index:6,angle:12},{available:!0,x:860,y:670,index:7,angle:16}],gameState.endOfTurnButton.on("pointerup",(function(){gameState.currentEnemyIndex=0,gameState.targetingCursor.visible||!gameState.playersTurn?self.cameras.main.shake(70,.002,!1):(this.setTexture("rectangularButtonPressed"),this.removeInteractive(),gameState.buttonPressedSound.play(),gameState.endOfTurnButtonPressed=!0,addHandtoDeck(),updateStrengthAndArmor(gameState.player),updateEnemyActions(),gameState.rebelHeart&&(gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+Math.abs(gameState.player.stancePoints)),self.updateHealthBar(gameState.player)),gameState.enemies.forEach((enemy=>{enemy.turnComplete=!enemy.alive,fadeOutGameObject(enemy.intentionText,200),fadeOutGameObject(enemy.intentionBackground,200)})),0!=gameState.player.mana&&(gameState.player.mana=0,self.updateManaBar(gameState.player)),self.time.delayedCall(100,(()=>{gameState.actionText&&gameState.actionText.destroy(),initiateEnemiesTurn()})))})),"admin"===gameState.playerName&&(gameState.getManaButton=self.add.sprite(550,200,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.getManaText=self.add.text(550,200,"Get Mana",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.getManaButton.on("pointerup",(()=>{gameState.playersTurn&&(gameState.player.mana=gameState.player.manaMax,self.updateManaBar(gameState.player),console.log("mana gained"))})),gameState.drawCardButton=self.add.sprite(550,300,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.drawCardText=self.add.text(550,300,"Draw Card",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.drawCardButton.on("pointerup",(()=>{gameState.playersTurn&&(drawNewCards(1),console.log("card drawn"))})),gameState.killEnemyButton=self.add.sprite(550,400,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.killEnemyText=self.add.text(550,400,"Kill Enemy",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.killEnemyButton.on("pointerup",(()=>{if(gameState.enemies.some((enemy=>enemy.health>0&&gameState.playersTurn))){const enemy=gameState.enemies.find((enemy=>enemy.health>0));enemy.health=0,removeIfDead(enemy),checkGameOver(),console.log(`${enemy.name} killed`)}})))}update(){gameState.targetingCursor.visible&&(gameState.targetingCursor.x=this.input.mousePointer.x,gameState.targetingCursor.y=this.input.mousePointer.y)}}class Level1Fight3 extends BaseScene{self;constructor(){super("Level1Fight3")}preload(){this.load.image("bakgrunnCity3","assets/images/bakgrunnCity3.jpg"),this.load.image("skinhead1","assets/images/sprites/skinhead1.png"),this.load.image("skinhead2","assets/images/sprites/skinhead2.png")}create(){const self=this;this.baseCreate("bakgrunnCity3",.7),this.resetPlayer(gameState.player,.35),this.addButtons(),function(){gameState.drawPileImage=self.add.image(120,600,"deck"),gameState.drawPileImage.setScale(.13).setOrigin(.5,.5).setInteractive();gameState.drawPileText=self.add.text(120,600,gameState.drawPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.drawPileText.setDepth(100).setOrigin(.5,.5),gameState.drawPileImage.on("pointerover",(function(){if(gameState.drawPile.length>0){const cardsPerRow=gameState.drawPile.length<12?4:6,cardSpacing=105,startX=gameState.drawPile.length<12?400:250,startY=150;gameState.drawPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.drawPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]}))}(),gameState.discardPileText=self.add.text(980,600,gameState.discardPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.discardPileText.setDepth(100).setOrigin(.5,.5),gameState.discardPileImage=self.add.image(980,600,"deck"),gameState.discardPileImage.setScale(.13).setOrigin(.5,.5).setInteractive().setTint(16711680),gameState.discardPileImage.on("pointerover",(function(){if(gameState.discardPile.length>0){const cardsPerRow=gameState.discardPile.length<12?4:6,cardSpacing=105,startX=gameState.discardPile.length<12?400:250,startY=150;gameState.discardPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.discardPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]}));let turnsTillPoliceArrive=7;function startPlayerTurn(){let numCards=gameState.player.numCardsBase+gameState.player.numCardsStance;gameState.turn+=1,turnsTillPoliceArrive-=1,gameState.endOfTurnButtonPressed=!1,2===gameState.turn&&function(){const turnsTextConfig={fontSize:"60px",fontWeight:"bold",fill:"#000000"};gameState.turnsTextBox=self.add.rectangle(550,150,55,55,16777215).setAlpha(.3).setOrigin(.5),gameState.turnsText=self.add.text(550,152,`${turnsTillPoliceArrive}`,turnsTextConfig).setOrigin(.5)}(),gameState.turn>2&&gameState.turnsText.setText(`${turnsTillPoliceArrive}`),0===turnsTillPoliceArrive?(self.sound.add("gunShotSound").play({volume:1.2}),self.cameras.main.flash(700),self.cameras.main.shake(1e3,.003,!1),initiateDefeat()):(gameState.yourTurnText=self.add.text(550,300,"Your turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),gameState.player.poisonText=self.add.text(570,350,"",{fontSize:"25px",fill:"#ff0000"}).setOrigin(.5),console.log(`player's turn number ${gameState.turn} has started`),gameState.player.armorCard=0,gameState.player.strengthCard=0,gameState.player.manaMax=gameState.rebelSpirit&&gameState.turn%3==0?1+gameState.player.manaBase+gameState.player.manaStance:gameState.player.manaBase+gameState.player.manaStance,gameState.player.mana=gameState.player.manaMax,gameState.foreverTrue&&gameState.player.stancePoints>0?(gameState.player.manaMax+=1,gameState.player.mana+=1):gameState.player.stancePoints=0,self.updateStanceBar(gameState.player),self.updateManaBar(gameState.player),self.updateHealthBar(gameState.player),self.updatePoison(gameState.player),removeIfDead(gameState.player),updateStrengthAndArmor(gameState.player),self.time.delayedCall(2200,(()=>{gameState.player.poisonText.destroy(),fadeOutGameObject(gameState.yourTurnText,200),function(numCards){gameState.endOfTurnButton.setTexture("rectangularButton"),gameState.endOfTurnButton.setInteractive();const startSlotIndex=Math.floor((gameState.slots.length-numCards)/2);for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));const card=gameState.drawPile.pop(),cardDepth=10+i+startSlotIndex;card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),card.isBeingPlayed=!1,gameState.currentCards.push(card),card.sprite.setDepth(cardDepth);const slot=gameState.slots[startSlotIndex+i];slot&&(card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot),gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),self.animateCard(card,cardDepth),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}));gameState.playersTurn=!0}(numCards),gameState.enemies.forEach((enemy=>{updateEnemyActions(),function(enemy){!function(enemy){const totalProbability=enemy.actions.reduce(((sum,action)=>sum+action.probability),0);if(1!==totalProbability){const scalingFactor=1/totalProbability;for(let action of enemy.actions)action.probability*=scalingFactor}}(enemy);let cumProb=0;for(let i=0;i<enemy.actions.length;i++)cumProb+=enemy.actions[i].probability,enemy.actions[i].cumulativeProbability=cumProb;const rand=Math.random();enemy.chosenAction=enemy.actions.find((action=>rand<action.cumulativeProbability))}(enemy),function(enemy){const actionKey="function"==typeof enemy.chosenAction.key?enemy.chosenAction.key():enemy.chosenAction.key,textConfig={fontSize:"13px",fill:"#000000"};enemy.intentionText=self.add.text(enemy.x+10,enemy.y-enemy.height/2-40,`${actionKey}`,textConfig),enemy.intentionText.setOrigin(.5,1).setDepth(11);const originalSpriteWidth=self.textures.get("listbox1").getSourceImage().width,scale=enemy.intentionText.width/originalSpriteWidth;enemy.intentionBackground=self.add.sprite(enemy.x+10,enemy.y-enemy.height/2-33,"listbox1").setScale(1.05*scale,1),enemy.intentionBackground.setInteractive().setOrigin(.5,1).setAlpha(.85).setDepth(10)}(enemy)}))})))}gameState.kamishimoUberAlles=0,gameState.kirisuteGomen=!1,gameState.toxicFrets=!1,gameState.ashenEncore=!1,gameState.edoEruption=!1,gameState.steelToe=!1,gameState.currentCards=[],gameState.cardImages=[],gameState.enemy1=Object.create(gameState.enemy),gameState.enemy1.name="Police Informant",gameState.enemy1.sprite=this.add.sprite(700,340,"skinhead1").setScale(.25).setFlipX(!1).setInteractive(),gameState.enemy1.health=60,gameState.enemy1.healthMax=60,gameState.enemy2=Object.create(gameState.enemy),gameState.enemy2.name="Police Informant",gameState.enemy2.sprite=this.add.sprite(880,340,"skinhead2").setScale(.38).setFlipX(!1).setInteractive(),gameState.enemy2.health=70,gameState.enemy2.healthMax=70,gameState.enemies=[gameState.enemy1,gameState.enemy2],gameState.characters=[...gameState.enemies,gameState.player],gameState.characters.forEach((character=>{character.height=character.sprite.displayHeight,character.width=character.sprite.displayWidth,character.x=character.sprite.x,character.y=character.sprite.y,this.addHealthBar(character,character.healthBarColor),this.addStatsDisplay(character),this.describeCharacter(character,character.sprite)})),this.addManaBar(gameState.player),this.addStanceBar(gameState.player,"#a9a9a9"),gameState.permanents.forEach((permanent=>{const card=permanent.card,slot=permanent.slot;"kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?slot.available=!0:(card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,console.log(`Recreated permanent: ${card.key}\nfor slot ${slot.index}`),displayTokenCard(card),activatePermanentFromToken(card))})),function(){gameState.turn=0,gameState.musicTheme.stop(),self.shuffleDeck(gameState.drawPile);const{level:level,fight:fight}=self.extractLevelFightFromName(self.scene.key);gameState.startText=self.add.text(550,300,`Level ${level}\nFight ${fight}!`,{fontSize:"60px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setDepth(200).setOrigin(.5),self.time.delayedCall(350,(()=>{gameState.music.play({loop:!0,volume:.35})})),self.time.delayedCall(3e3,(()=>{fadeOutGameObject(gameState.startText,200),self.time.delayedCall(300,startPlayerTurn())}))}();function activateCard(card){if(gameState.costPlayed="function"==typeof card.cost?card.cost():card.cost,gameState.typePlayed="function"==typeof card.type?card.type():card.type,gameState.player.mana>=gameState.costPlayed&&!1===gameState.playingCard)if(gameState.player.mana-=gameState.costPlayed,self.updateManaBar(gameState.player),console.log(`activated card: ${card.key}\nCost: ${gameState.costPlayed}`),gameState.player.freedomBeforeCardPlayed="Freedom"===gameState.player.stance,card.isBeingPlayed=!0,gameState.currentCards=gameState.currentCards.filter((c=>c!==card)),card.slot&&(card.slot.available=!0),"targetSelected"===gameState.typePlayed)!function(card,handOfCards){gameState.targetingCursor.setVisible(!0),gameState.thisTurn=gameState.turn;for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.removeInteractive();for(let enemy of gameState.enemies)enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){card.isBeingPlayed&&gameState.playersTurn&&gameState.thisTurn===gameState.turn&&(card.isBeingPlayed=!1,gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,enemy));for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.setInteractive()}))}(card,gameState.currentCards);else if("targetAll"===gameState.typePlayed){gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length);const enemiesCopy=[...gameState.enemies];gameState.enemiesLength=enemiesCopy.length,enemiesCopy.forEach(((enemy,index)=>{const isLastEnemy=index===enemiesCopy.length-1;playCard(card,enemy,isLastEnemy)}))}else"permanent"===gameState.typePlayed?function(card){const slot=gameState.permanentSlots.find((slot=>slot.available));slot?("kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length)):gameState.deck=gameState.deck.filter((c=>c!==card)),card.slot.available=!0,card.sprite.destroy(),card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,gameState.permanents.push({card:card,slot:slot,tokenSprite:card.tokenSprite}),displayTokenCard(card),activatePermanentFromToken(card)):function(card){switch(self.cameras.main.shake(70,.002,!1),card.isBeingPlayed=!1,console.log(`No available slot for permanent card ${card.key}`),card.key){case"foreverTrue":depleteForeverTrue(card);break;case"rebelSpirit":depleteRebelSpirit(card);break;case"rebelHeart":depleteRebelHeart(card);break;case"bushido":depleteBushido(card);break;case"toxicAvenger":depleteToxicAvenger(card);break;case"kirisuteGomen":depleteKirisuteGomen(card);case"toxicFrets":depleteToxicFrets(card);break;case"ashenEncore":depleteAshenEncore(card);break;case"edoEruption":depleteEdoEruption(card);break;case"steelToe":depleteSteelToe(card);break;case"kamishimoUberAlles":case"hollidayInKamakura":gameState.currentCards.push(card),card.slot.available=!1}}(card)}(card):(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,gameState.player));else self.cameras.main.shake(70,.002,!1)}function playCard(card,target,isLastEnemy=!1){gameState.playingCard=!0,fadeOutGameObject(card.sprite,200),fadeOutGameObject(gameState.actionText,50),gameState.targetingCursor.setVisible(!1);const{damagePlayed:damagePlayed,firePlayed:firePlayed,stancePointsPlayed:stancePointsPlayed,poisonPlayed:poisonPlayed,healPlayed:healPlayed,strengthPlayed:strengthPlayed,armorPlayed:armorPlayed,reduceTargetArmorPlayed:reduceTargetArmorPlayed,reduceTargetStrengthPlayed:reduceTargetStrengthPlayed,drawCardPlayed:drawCardPlayed}=function(card,target,isLastEnemy=!1){const moshpitMassacreCondition="moshpitMassacre"===card.key&&gameState.player.stancePoints>0&&target.poison>0,scorchedSoulCondition="scorchedSoul"===card.key&&target.poison>0,bladesBlightCondition="bladesBlight"===card.key&&target.poison>0,roninsRotCondition="roninsRot"===card.key&&target.poison>0,kabutuEdoCondition="kabutu"===card.key&&gameState.edoEruption&&gameState.player.stancePoints>0,steelToeCondition="combatBoots"===card.key&&gameState.steelToe,knuckleFistEdoCondition="knuckleFist"===card.key&&gameState.edoEruption&&gameState.player.stancePoints<0,steelToeOutcome=gameState.player.stancePoints>0?2*(1+gameState.player.stancePoints):2;return{damagePlayed:moshpitMassacreCondition?11:getValueOrInvoke(card.damage),firePlayed:kabutuEdoCondition?2*gameState.player.stancePoints:scorchedSoulCondition?12:getValueOrInvoke(card.fire),stancePointsPlayed:kabutuEdoCondition&&isLastEnemy?-1:getValueOrInvoke(card.stancePoints),poisonPlayed:bladesBlightCondition?target.poison:getValueOrInvoke(card.poison),healPlayed:getValueOrInvoke(card.heal),strengthPlayed:getValueOrInvoke(card.strength),armorPlayed:knuckleFistEdoCondition?-gameState.player.stancePoints:getValueOrInvoke(card.armor),reduceTargetArmorPlayed:steelToeCondition?steelToeOutcome:getValueOrInvoke(card.reduceTargetArmor),reduceTargetStrengthPlayed:roninsRotCondition?target.poison:getValueOrInvoke(card.reduceTargetStrength),drawCardPlayed:getValueOrInvoke(card.drawCard)}}(card,target,isLastEnemy),damageModifyer=(1+.1*gameState.player.strength)*(1-target.armor/20),damageTotal=Math.round(Math.max(0,firePlayed+damagePlayed*damageModifyer));target!=gameState.player&&(gameState.score.damageDealt+=damageTotal,console.log(`${damagePlayed} Physical Damage and ${firePlayed} Fire Damage was dealt to ${target.name}`),target.strengthTurn-=reduceTargetStrengthPlayed,target.armor-=reduceTargetArmorPlayed,target.poison+=poisonPlayed,target.health-=damageTotal),"seppuku"===card.key||"boneShredder"===card.key?gameState.player.strengthBase+=strengthPlayed:gameState.player.strengthCard+=strengthPlayed,"libertySpikes"===card.key&&gameState.player.stancePoints>0&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),healPlayed&&(gameState.player.health=Math.min(gameState.player.health+healPlayed,gameState.player.healthMax),self.updateHealthBar(gameState.player)),gameState.player.armorCard+=armorPlayed,gameState.player.poison=Math.max(0,gameState.player.poison-card.poisonRemove),function(damageTotal,poisonPlayed,strengthPlayed,armorPlayed){const actionTextConfig={fontSize:"32px",fill:"#ff0000"};if("targetSelected"===gameState.typePlayed||"targetAll"===gameState.typePlayed){self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8});const actionTextTarget=`${damageTotal>0?`Deals ${damageTotal} damage`:""}\n\n${poisonPlayed>0?`Deals ${poisonPlayed} Poison`:""}`;gameState.actionText=self.add.text(550,300,actionTextTarget,actionTextConfig).setOrigin(.5),self.attackTweens(gameState.player,60)}else strengthPlayed>0?(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${strengthPlayed} Strength`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player)):armorPlayed>0&&(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${armorPlayed} Armor`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player))}(damageTotal,poisonPlayed,strengthPlayed,armorPlayed),gameState.player.stancePoints+stancePointsPlayed>=-3&&gameState.player.stancePoints+stancePointsPlayed<=3&&(gameState.player.stancePoints+=stancePointsPlayed,self.updateStanceBar(gameState.player)),gameState.player.freedomAfterCardPlayed="Freedom"===gameState.player.stance,!gameState.player.freedomBeforeCardPlayed&&gameState.player.freedomAfterCardPlayed&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),updateStats(target),self.updateHealthBar(target),updateStrengthAndArmor(gameState.player),removeIfDead(target),checkGameOver(),updateEnemyActions(),drawNewCards(drawCardPlayed),gameState.enemies.forEach((enemy=>{self.updateEnemyIntention(enemy)})),self.time.delayedCall(260,(()=>{gameState.playingCard=!1})),self.time.delayedCall(1500,(()=>{gameState.actionText&&gameState.actionText.destroy()}))}function initiateEnemiesTurn(){0!==gameState.enemies.length&&(gameState.enemies[gameState.currentEnemyIndex].alive?function(enemy){gameState.playersTurn&&(gameState.playersTurn=!1,enemy.turnText=self.add.text(550,300,"Enemy turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),self.time.delayedCall(1800,(()=>{if(fadeOutGameObject(enemy.turnText,200),1===gameState.turn){const textConfig={fontSize:"40px",fontWeight:"bold",fill:"#ff0000"},enemyText=self.add.text(550,300,"  The enemy is\nratting you out!",textConfig).setOrigin(.5).setDepth(201);let textWidth=enemyText.width,textHeight=enemyText.height,paddingX=20,paddingY=20;const enemyTextBackground=self.add.graphics();enemyTextBackground.fillStyle(16777215,.7),enemyTextBackground.fillRect(enemyText.x-textWidth/2-paddingX,enemyText.y-textHeight/2-paddingY,textWidth+2*paddingX,textHeight+2*paddingY).setDepth(200),self.time.delayedCall(3500,(()=>{enemyText.destroy(),enemyTextBackground.destroy();const policeText=self.add.text(550,300,"Police snipers\n will hit you\n  in 5 turns!",textConfig).setOrigin(.5).setDepth(201);let textWidth=policeText.width,textHeight=policeText.height,paddingX=20,paddingY=20;const policeTextBackground=self.add.graphics();policeTextBackground.fillStyle(16777215,.7),policeTextBackground.fillRect(policeText.x-textWidth/2-paddingX,policeText.y-textHeight/2-paddingY,textWidth+2*paddingX,textHeight+2*paddingY).setDepth(200),self.time.delayedCall(4500,(()=>{policeText.destroy(),policeTextBackground.destroy(),startPlayerTurn()}))}))}})));1!=gameState.turn&&(enemy.turnComplete=!1,function(enemy){enemy.poisonText=self.add.text(570,350,"",{fontSize:"30px",fill:"#ff0000"}).setOrigin(.5),self.updatePoison(enemy),gameState.toxicAvenger&&enemy.poison>0&&updateStats(enemy);const delaytime=""!==enemy.poisonText._text||enemy.turnText?1800:800;self.time.delayedCall(delaytime,(()=>{enemy.poisonText.destroy();const chosenAction=enemy.chosenAction,actionTextConfig={fontSize:"32px",fill:"#ff0000"};if(gameState.player.poison+=chosenAction.poison,enemy.health=Math.min(enemy.health+chosenAction.heal,enemy.healthMax),enemy.strengthBase=Math.min(enemy.strengthBase+chosenAction.strength,enemy.strengthMax),updateStats(enemy),enemy.armor=Math.min(enemy.armor+chosenAction.armor,enemy.armorMax),chosenAction.damage>0||chosenAction.fire>0){const damageModifyer=(1+.1*enemy.strength)*(1-gameState.player.armor/20);self.cameras.main.shake(120,.005,!1),gameState.attackSound.play({volume:.8}),console.log(`enemy.damageTotal: ${enemy.damageTotal}`),enemy.damageTotal=Math.round(Math.max(0,chosenAction.fire+chosenAction.damage*damageModifyer)),gameState.player.health-=enemy.damageTotal,gameState.score.damageTaken+=enemy.damageTotal,gameState.actionText=self.add.text(550,300,`Deals ${enemy.damageTotal} damage`,actionTextConfig).setOrigin(.5),self.tweens.add({targets:enemy.sprite,x:enemy.sprite.x-60,duration:120,ease:"Cubic",yoyo:!0})}else chosenAction.heal>0?(gameState.healSound.play({volume:.5}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy)):(chosenAction.strength>0||chosenAction.armor>0||chosenAction.poison>0)&&(gameState.powerUpSound.play({volume:.2}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy));enemy.strengthTurn=0,function(enemy){[gameState.player,enemy].forEach((character=>{self.updateHealthBar(character),removeIfDead(character),updateStats(character)})),self.time.delayedCall(1500,(()=>{fadeOutGameObject(gameState.actionText,200),enemy.turnComplete=!0,checkGameOver()||!gameState.enemies[gameState.currentEnemyIndex].turnComplete&&gameState.enemies[gameState.currentEnemyIndex].alive||(gameState.currentEnemyIndex++,gameState.currentEnemyIndex<gameState.enemies.length?initiateEnemiesTurn():(gameState.currentEnemyIndex=0,startPlayerTurn()))}))}(enemy)}))}(enemy))}(gameState.enemies[gameState.currentEnemyIndex]):(gameState.currentEnemyIndex++,initiateEnemiesTurn()))}function updateEnemyActions(){1===gameState.turn?(gameState.enemy1.actions=[{key:"Intends to\nRat you out",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Rats you out",probability:1}],gameState.enemy2.actions=[{key:"Intends to\nRat you out",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Rats you out",probability:1}]):(gameState.enemy1.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 fire damage",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(12*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:12,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 12 damage",probability:.235+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(16*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:16,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 16 damage",probability:.17+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:2,text:"Heals 15 HP\nGains 2 armor",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 strenght",probability:.125+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:5,text:"Gains 5 armor",probability:.15+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 poison",probability:0}],gameState.enemy2.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 fire damage",probability:.1+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(14*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:14,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 14 damage",probability:.235+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(18*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:18,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 18 damage",probability:.17+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:2,text:"Heals 15 HP\nGains 2 armor",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:4,armor:0,text:"Gains 4 strenght",probability:.125+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:5,text:"Gains 5 armor",probability:.15+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 poison",probability:0}])}function checkGameOver(){return gameState.player.alive?!gameState.enemies.some((enemy=>enemy.alive))&&(gameState.playersTurn=!1,function(){gameState.score.numberOfTurns+=gameState.turn,gameState.score.levelsCompleted+=1,gameState.music.stop(),self.updateManaBar(gameState.player),addHandtoDeck(),self.time.delayedCall(600,(()=>{gameState.attackSound.isPlaying&&gameState.attackSound.stop(),gameState.victorySound.play({volume:.9,rate:1}),self.clearBoard()})),gameState.actionText&&(gameState.actionText.destroy(),console.log("gameState.actionText still existed at initiateVictory and got destroyed"));const victoryTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},victoryText=self.add.text(550,300,"Victory!",victoryTextConfig).setOrigin(.5);self.time.delayedCall(2e3,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),victoryText.destroy(),function(){self.shuffleDeck(gameState.bonusCards);const gameOverTextConfig={fontSize:"40px",fill:"#000000"},rewardTextConfig={fontSize:"25px",fill:"#000000"};gameState.gameOverText=self.add.text(550,180,"Choose a reward",gameOverTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsButton=self.add.image(550,350,"rectangularButton"),gameState.rewardAddCardsButton.setScale(1.2).setInteractive().setOrigin(.5).setDepth(102),gameState.rewardAddCardsText=self.add.text(550,350,"Add 1 card\nto your deck",rewardTextConfig).setOrigin(.5).setDepth(103),gameState.rewardRemoveCardButton=self.add.image(550,500,"rectangularButton"),gameState.rewardRemoveCardButton.setScale(1.2).setInteractive().setOrigin(.5).setDepth(102),gameState.rewardRemoveCardText=self.add.text(550,500,"Remove 1 card\nfrom your deck",rewardTextConfig).setOrigin(.5).setDepth(103),gameState.rewardButtons=[gameState.rewardAddCardsButton,gameState.rewardRemoveCardButton],gameState.rewardTexts=[gameState.rewardAddCardsText,gameState.rewardRemoveCardText,gameState.gameOverText],gameState.rewardButtons.forEach((button=>{button.on("pointerover",(function(){this.setTexture("rectangularButtonHovered")})),button.on("pointerout",(function(){this.setTexture("rectangularButton")}))})),gameState.rewardAddCardsButton.on("pointerup",(function(){gameState.rewardTexts.forEach((text=>text.destroy())),gameState.rewardButtons.forEach((button=>button.destroy())),function(){console.log("rewardAddCard called"),gameState.gameOverText.destroy();const x=320,y=300,spacing=220;let bonusCards=gameState.bonusCards.slice(0,3);console.log(`bonusCards: ${bonusCards.key}`),bonusCards.forEach(((bonusCard,index)=>{bonusCard.sprite=self.add.sprite(x+index*spacing,y,bonusCard.key),bonusCard.sprite.setScale(.45).setInteractive().setDepth(102),console.log(`bonusCardsprite added for: ${bonusCard.key}`),bonusCard.sprite.on("pointerover",(()=>{gameState.cardsDealtSound.play({volume:.6}),self.cardTweens(bonusCard.sprite,.58,200)}),self),bonusCard.sprite.on("pointerout",(()=>{self.cardTweens(bonusCard.sprite,.45,400)}),self),bonusCard.sprite.on("pointerup",(()=>{let nextlevelstarting=!1;gameState.deck.push(bonusCard),"permanent"===bonusCard.type&&gameState.bonusCards.splice(gameState.bonusCards.indexOf(bonusCard),1),bonusCards.forEach((card=>{card.sprite.removeInteractive(),card!==bonusCard&&fadeOutGameObject(card.sprite,200)})),self.tweens.add({targets:bonusCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),self.add.text(550,180,"Gained 1 card",{fontSize:"40px",fill:"#000000"}).setOrigin(.5),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()})),gameState.rewardRemoveCardButton.on("pointerup",(function(){gameState.rewardTexts.forEach((text=>text.destroy())),gameState.rewardButtons.forEach((button=>button.destroy())),gameState.rewardAddCardsButton.destroy(),function(){console.log("button pressed"),gameState.rewardButtons.forEach((button=>button.destroy())),gameState.rewardTexts.forEach((text=>text.destroy()));const cardsPerRow=4,x=300,y=250,spacing=120,deck=gameState.deck;deck.forEach((card=>console.log(card.key))),deck.forEach(((deckCard,index)=>{let xPos=x+index%cardsPerRow*spacing,yPos=y+Math.floor(index/cardsPerRow)*spacing,cardDepth=110+index;deckCard.sprite=self.add.sprite(xPos,yPos,deckCard.key).setScale(.27).setInteractive().setDepth(cardDepth),deckCard.sprite.on("pointerover",(function(){gameState.cardsDealtSound.play({volume:.6}),self.cardTweens(deckCard.sprite,.4,200),deckCard.sprite.setDepth(200)}),this),deckCard.sprite.on("pointerout",(function(){self.cardTweens(deckCard.sprite,.27,400),deckCard.sprite.setDepth(cardDepth)}),this),deckCard.sprite.on("pointerup",(function(){let nextlevelstarting=!1;console.log(`Deck length before removal: ${gameState.deck.length}`),deck.splice(deck.indexOf(deckCard),1),deck.forEach((card=>{card.sprite.removeInteractive(),card!==deckCard&&fadeOutGameObject(deckCard.sprite,200)})),self.tweens.add({targets:deckCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),self.add.text(550,180,"Removed 1 card",{fontSize:"40px",fill:"#000000"}).setOrigin(.5),console.log(`Deck length after removal: ${gameState.deck.length}`),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()}))}()}))}(),!0):(gameState.playersTurn=!1,initiateDefeat(),!0)}function initiateDefeat(){gameState.player.health=0,self.updateManaBar(gameState.player),addHandtoDeck(),gameState.music.stop(),self.clearBoard(),gameState.actionText&&fadeOutGameObject(gameState.actionText,200),gameState.score.numberOfTurns+=gameState.turn,gameState.gameOverText=self.add.text(550,300," Defeat!",{fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setOrigin(.5),gameState.gameOverText.setInteractive();let scenetransitionstarted=!1;self.time.delayedCall(400,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),scenetransitionstarted||(gameState.gameOverText.on("pointerup",(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})),self.time.delayedCall(2500,(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})))}))}function startNextLevel(){self.cameras.main.fadeOut(1e3),self.time.delayedCall(1e3,(()=>{self.scene.start("Level2Fight1")}))}function activatePermanentFromToken(card){if("foreverTrue"===card.key)gameState.foreverTrue=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteForeverTrue(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelSpirit"===card.key)gameState.rebelSpirit=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelSpirit(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelHeart"===card.key)gameState.rebelHeart=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelHeart(card):self.cameras.main.shake(70,.002,!1)}));else if("bushido"===card.key)gameState.bushido=!0,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteBushido(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicAvenger"===card.key)gameState.toxicAvenger=!0,gameState.enemies.forEach((enemy=>updateStats(enemy))),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicAvenger(card):self.cameras.main.shake(70,.002,!1)}));else if("kirisuteGomen"===card.key)gameState.player.strengthMax+=5,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn&&gameState.enemies.some((enemy=>enemy.health<30))?depleteKirisuteGomen(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicFrets"===card.key)gameState.toxicFrets=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicFrets(card):self.cameras.main.shake(70,.002,!1)}));else if("ashenEncore"===card.key)gameState.ashenEncore=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteAshenEncore(card):self.cameras.main.shake(70,.002,!1)}));else if("edoEruption"===card.key)gameState.edoEruption=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteEdoEruption(card):self.cameras.main.shake(70,.002,!1)}));else if("steelToe"===card.key)gameState.steelToe=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteSteelToe(card):self.cameras.main.shake(70,.002,!1)}));else if("kamishimoUberAlles"===card.key){const tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;gameState.kamishimoUberAlles+=1,updateStrengthAndArmor(gameState.player),tokenSprite.on("pointerup",(()=>{gameState.playersTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.kamishimoUberAlles-=1,updateStrengthAndArmor(gameState.player)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}else if("hollidayInKamakura"===card.key){let tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;const turnplayed=gameState.turn,fightplayed=gameState.score.levelsCompleted;tokenSprite.on("pointerup",(()=>{const depletedDifferentTurn=turnplayed!=gameState.turn||fightplayed!=gameState.score.levelsCompleted;console.log(`depletedDifferentTurn: ${depletedDifferentTurn}\nturnplayed: ${turnplayed}\ngameState.turn: ${gameState.turn}\nfightplayed: ${fightplayed}\ngameState.score.levelsCompleted: ${gameState.score.levelsCompleted}\ngameState.playersTurn: ${gameState.playersTurn}`),gameState.playersTurn&&depletedDifferentTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.player.manaMax+=1,gameState.player.mana+=1,self.updateManaBar(gameState.player),drawNewCards(1)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}}function displayTokenCard(card){card.tokenSprite.on("pointerover",(function(){gameState.cardsDealtSound.play({volume:1.5}),card.permanentCardSprite=self.add.sprite(550,300,card.key).setScale(.55).setDepth(26)})),card.tokenSprite.on("pointerout",(function(){card.permanentCardSprite.destroy()}))}function depleteForeverTrue(card){gameState.foreverTrue=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),drawNewCards(8)}function depleteRebelSpirit(card){gameState.rebelSpirit=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.mana+=3,gameState.player.manaMax+=3,self.updateManaBar(gameState.player)}function depleteRebelHeart(card){gameState.rebelHeart=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+12),self.updateHealthBar(gameState.player)}function depleteBushido(card){gameState.bushido=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.strengthBase+=6,updateStrengthAndArmor(gameState.player)}function depleteToxicAvenger(card){gameState.toxicAvenger=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison+=4,updateStats(enemy)}))}function depleteKirisuteGomen(card){if(gameState.enemies.some((enemy=>enemy.health<30))){gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let functionActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){enemy.health<30&&functionActive?(enemy.health=0,gameState.attackSound.play({volume:1}),self.cameras.main.shake(120,.025,!1),card.tokenSlot&&(card.tokenSlot.available=!0,gameState.player.strengthMax-=5),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),removeIfDead(enemy),checkGameOver(),updateStrengthAndArmor(gameState.player)):(self.cameras.main.shake(70,.002,!1),functionActive=!1),gameState.targetingCursor.setVisible(!1)}))}))}else self.cameras.main.shake(70,.002,!1),card.slot.available=!1,gameState.currentCards.some((card=>"kirisuteGomen"===card.key))||(gameState.currentCards.push(card),gameState.player.mana+=1,self.updateManaBar(gameState.player))}function depleteToxicFrets(card){gameState.toxicFrets=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison>0&&(enemy.health-=2*enemy.poison,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver())}))}function depleteAshenEncore(card){gameState.ashenEncore=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card));const ashenEncoreDepleteText=self.add.text(550,350,"Deals 12 firedamage\n to all enemies",{fontSize:"32px",fill:"#ff0000"}).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDepleteText.destroy()})),gameState.enemies.forEach((enemy=>{enemy.health-=12,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver()}))}function depleteEdoEruption(card){gameState.edoEruption=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card))}function depleteSteelToe(card){gameState.steelToe=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let depleteSteelToeActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){depleteSteelToeActive&&(enemy.armor-=7,updateStats(enemy),gameState.attackSound.play({volume:.6}),self.cameras.main.shake(100,.012,!1),gameState.targetingCursor.setVisible(!1),depleteSteelToeActive=!1)}))}))}function updateStrengthAndArmor(character){let strengthBushido=0;gameState.endOfTurnButtonPressed?(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard+character.armorStance),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+strengthBushido)):(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+character.strengthCard+strengthBushido)),gameState.kamishimoUberAlles>0&&gameState.player.stancePoints<0&&(character.strength=Math.min(character.strengthMax,character.strength-gameState.player.stancePoints*gameState.kamishimoUberAlles)),updateStats(character)}function updateStats(character){character!=gameState.player&&(character.strength=character.strengthBase+character.strengthTurn,gameState.toxicAvenger&&character.poison>0&&(character.strength-=4)),character.armorText.setText(`${character.armor}/${character.armorMax}`),character.strengthText.setText(`${character.strength}/${character.strengthMax}`)}function removeIfDead(character){if(character.health<=0){if(character.health=0,character.sprite.removeInteractive(),character.alive=!1,character.turnComplete=!0,character!=gameState.player){const indexEnemies=gameState.enemies.indexOf(character),indexCharacters=gameState.characters.indexOf(character);-1!==indexEnemies&&gameState.enemies.splice(indexEnemies,1),-1!==indexCharacters&&gameState.characters.splice(indexCharacters,1)}[character.sprite,character.healthBarBackground,character.healthBar,character.healthBarText,character.manaBarBackground,character.manaBar,character.manaBarText,character.strengthAndArmorImage,character.strengthText,character.armorText,character.descriptionBackground,character.descriptionText,character.intentionText,character.intentionBackground].forEach((object=>{fadeOutGameObject(object,500)}))}}function addHandtoDeck(){for(;gameState.currentCards.length>0;){let card=gameState.currentCards.pop();card.slot.available||(card.slot.available=!0),gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),fadeOutGameObject(card.sprite,200)}}function drawNewCards(numCards){const numCardsLimit=Math.min(gameState.deck.length,8),numOfFreeSlots=gameState.slots.filter((slot=>slot.available)).length;numCards=numOfFreeSlots<numCards?numOfFreeSlots:numCards;for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{if(gameState.currentCards.length<numCardsLimit){0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));let card=gameState.drawPile.pop();card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),console.log(`card added: ${card.key}`),card.isBeingPlayed=!1,gameState.currentCards.push(card);let availableSlots=gameState.slots.filter((slot=>slot.available)),slot=availableSlots[Math.floor(availableSlots.length/2)];if(slot){card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot;let cardDepth=10+slot.index;card.sprite.setDepth(cardDepth),self.animateCard(card,cardDepth)}gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),gameState.ashenEncore&&gameState.enemies.forEach((enemy=>{if(enemy.health-=4,self.updateHealthBar(enemy),removeIfDead(enemy),"undefined"==typeof ashenEncoreText||!ashenEncoreText){const ashenEncoreConfig={fontSize:"32px",fill:"#ff0000"},ashenEncoreKey="Deals 4 fire damage to all enemies",ashenEncoreDrawText=self.add.text(550,350,ashenEncoreKey,ashenEncoreConfig).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDrawText.destroy()}))}})),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}else self.cameras.main.shake(70,.002,!1)}))}function getValueOrInvoke(cardProperty){return"function"==typeof cardProperty?cardProperty():cardProperty}function fadeOutGameObject(gameObject,duration){gameObject&&self.tweens.add({targets:gameObject,alpha:0,ease:"Power1",duration:duration,onComplete:()=>{gameObject.destroy()}},self)}gameState.slots=[{available:!0,x:230,y:640,index:0,angle:-12},{available:!0,x:320,y:610,index:1,angle:-8},{available:!0,x:410,y:590,index:2,angle:-4},{available:!0,x:500,y:580,index:3,angle:0},{available:!0,x:590,y:590,index:4,angle:4},{available:!0,x:680,y:610,index:5,angle:8},{available:!0,x:770,y:640,index:6,angle:12},{available:!0,x:860,y:670,index:7,angle:16}],gameState.endOfTurnButton.on("pointerup",(function(){gameState.currentEnemyIndex=0,gameState.targetingCursor.visible||!gameState.playersTurn?self.cameras.main.shake(70,.002,!1):(this.setTexture("rectangularButtonPressed"),this.removeInteractive(),gameState.buttonPressedSound.play(),gameState.endOfTurnButtonPressed=!0,addHandtoDeck(),updateStrengthAndArmor(gameState.player),updateEnemyActions(),gameState.rebelHeart&&(gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+Math.abs(gameState.player.stancePoints)),self.updateHealthBar(gameState.player)),gameState.enemies.forEach((enemy=>{enemy.turnComplete=!enemy.alive,fadeOutGameObject(enemy.intentionText,200),fadeOutGameObject(enemy.intentionBackground,200)})),0!=gameState.player.mana&&(gameState.player.mana=0,self.updateManaBar(gameState.player)),self.time.delayedCall(100,(()=>{gameState.actionText&&gameState.actionText.destroy(),initiateEnemiesTurn()})))})),"admin"===gameState.playerName&&(gameState.getManaButton=self.add.sprite(550,200,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.getManaText=self.add.text(550,200,"Get Mana",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.getManaButton.on("pointerup",(()=>{gameState.playersTurn&&(gameState.player.mana=gameState.player.manaMax,self.updateManaBar(gameState.player),console.log("mana gained"))})),gameState.drawCardButton=self.add.sprite(550,300,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.drawCardText=self.add.text(550,300,"Draw Card",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.drawCardButton.on("pointerup",(()=>{gameState.playersTurn&&(drawNewCards(1),console.log("card drawn"))})),gameState.killEnemyButton=self.add.sprite(550,400,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.killEnemyText=self.add.text(550,400,"Kill Enemy",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.killEnemyButton.on("pointerup",(()=>{if(gameState.enemies.some((enemy=>enemy.health>0&&gameState.playersTurn))){const enemy=gameState.enemies.find((enemy=>enemy.health>0));enemy.health=0,removeIfDead(enemy),checkGameOver(),console.log(`${enemy.name} killed`)}})))}update(){gameState.targetingCursor.visible&&(gameState.targetingCursor.x=this.input.mousePointer.x,gameState.targetingCursor.y=this.input.mousePointer.y)}}class Level2Fight1 extends BaseScene{self;constructor(){super("Level2Fight1")}preload(){this.load.image("theForest","assets/images/theForest.jpg"),this.load.image("bakgrunnForest1","assets/images/bakgrunnForest1.jpg"),this.load.image("tree1","assets/images/sprites/tree1.png"),this.load.image("tree2","assets/images/sprites/tree2.png")}create(){const self=this;this.baseCreate("bakgrunnForest1"),this.resetPlayer(gameState.player,.37),gameState.player.health=gameState.player.healthMax,this.addButtons(),function(){gameState.drawPileImage=self.add.image(120,600,"deck"),gameState.drawPileImage.setScale(.13).setOrigin(.5,.5).setInteractive();gameState.drawPileText=self.add.text(120,600,gameState.drawPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.drawPileText.setDepth(100).setOrigin(.5,.5),gameState.drawPileImage.on("pointerover",(function(){if(gameState.drawPile.length>0){const cardsPerRow=gameState.drawPile.length<12?4:6,cardSpacing=105,startX=gameState.drawPile.length<12?400:250,startY=150;gameState.drawPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.drawPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]}))}(),gameState.discardPileText=self.add.text(980,600,gameState.discardPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.discardPileText.setDepth(100).setOrigin(.5,.5),gameState.discardPileImage=self.add.image(980,600,"deck"),gameState.discardPileImage.setScale(.13).setOrigin(.5,.5).setInteractive().setTint(16711680),gameState.discardPileImage.on("pointerover",(function(){if(gameState.discardPile.length>0){const cardsPerRow=gameState.discardPile.length<12?4:6,cardSpacing=105,startX=gameState.discardPile.length<12?400:250,startY=150;gameState.discardPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.discardPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]})),gameState.kamishimoUberAlles=0,gameState.kirisuteGomen=!1,gameState.toxicFrets=!1,gameState.ashenEncore=!1,gameState.edoEruption=!1,gameState.steelToe=!1,gameState.currentCards=[],gameState.cardImages=[],gameState.enemy1=Object.create(gameState.enemy),gameState.enemy1.name="Timbermaw\nLoses Armor when attacked\nTakes +50% damage from Fire",gameState.enemy1.sprite=this.add.sprite(690,330,"tree1").setScale(.29).setFlipX(!1).setInteractive(),gameState.enemy1.health=60,gameState.enemy1.healthMax=60,gameState.enemy.armor=15,gameState.enemy2=Object.create(gameState.enemy),gameState.enemy2.name="Mossbite\nLoses Armor when attacked\nTakes +50% damage from Fire",gameState.enemy2.sprite=this.add.sprite(920,330,"tree2").setScale(.29).setFlipX(!1).setInteractive(),gameState.enemy2.health=60,gameState.enemy2.healthMax=60,gameState.enemy2.armor=15,gameState.enemies=[gameState.enemy1,gameState.enemy2],gameState.characters=[...gameState.enemies,gameState.player],gameState.characters.forEach((character=>{character.height=character.sprite.displayHeight,character.width=character.sprite.displayWidth,character.x=character.sprite.x,character.y=character.sprite.y,this.addHealthBar(character,character.healthBarColor),this.addStatsDisplay(character),this.describeCharacter(character,character.sprite)})),this.addManaBar(gameState.player),this.addStanceBar(gameState.player,"#a9a9a9"),gameState.permanents.forEach((permanent=>{const card=permanent.card,slot=permanent.slot;"kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?slot.available=!0:(card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,console.log(`Recreated permanent: ${card.key}\nfor slot ${slot.index}`),displayTokenCard(card),activatePermanentFromToken(card))}));const levelTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},levelimage=this.add.image(0,0,"theForest").setScale(.87).setOrigin(.02,0).setDepth(300),leveltextTop=this.add.text(550,270,"Level 2:",levelTextConfig).setDepth(301).setOrigin(.5),leveltextBottom=this.add.text(550,430,"The Forest",levelTextConfig).setDepth(301).setOrigin(.5);let levelStarting=!1;function startFight(){gameState.turn=0,gameState.musicTheme.stop(),self.shuffleDeck(gameState.drawPile);const{level:level,fight:fight}=self.extractLevelFightFromName(self.scene.key);gameState.startText=self.add.text(550,300,`Level ${level}\nFight ${fight}!`,{fontSize:"60px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setDepth(200).setOrigin(.5),self.time.delayedCall(350,(()=>{gameState.music.play({loop:!0,volume:.35})})),self.time.delayedCall(3e3,(()=>{fadeOutGameObject(gameState.startText,200),self.time.delayedCall(300,startPlayerTurn())}))}function startPlayerTurn(){let numCards=gameState.player.numCardsBase+gameState.player.numCardsStance;gameState.turn+=1,gameState.endOfTurnButtonPressed=!1,gameState.yourTurnText=self.add.text(550,300,"Your turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),gameState.player.poisonText=self.add.text(570,350,"",{fontSize:"25px",fill:"#ff0000"}).setOrigin(.5),console.log(`player's turn number ${gameState.turn} has started`),gameState.player.armorCard=0,gameState.player.strengthCard=0;const manaMax=gameState.player.manaBase+gameState.player.manaStance;gameState.player.manaMax=gameState.rebelSpirit&&gameState.turn%3==0?manaMax+1:manaMax,gameState.player.mana=gameState.player.manaMax,gameState.foreverTrue&&gameState.player.stancePoints>0?(gameState.player.manaMax+=1,gameState.player.mana+=1):gameState.player.stancePoints=0,self.updateStanceBar(gameState.player),self.updateManaBar(gameState.player),self.updateHealthBar(gameState.player),self.updatePoison(gameState.player),removeIfDead(gameState.player),updateStrengthAndArmor(gameState.player),self.time.delayedCall(2200,(()=>{if(fadeOutGameObject(gameState.yourTurnText,200),gameState.player.poisonText.destroy(),1===gameState.turn){let textConfig={fontSize:"38px",fill:"#ff0000",fontWeight:"bold"},treesInfoText=self.add.text(550,300,"Trees start with full\nArmor, and lose 1 Armor\n    when attacked",textConfig).setOrigin(.5).setDepth(201),textWidth=treesInfoText.width,textHeight=treesInfoText.height,paddingX=20,paddingY=20;const treesInfoTextBackground=self.add.graphics();treesInfoTextBackground.fillStyle(16777215,.7),treesInfoTextBackground.fillRect(treesInfoText.x-textWidth/2-paddingX,treesInfoText.y-textHeight/2-paddingY,textWidth+2*paddingX,textHeight+2*paddingY).setDepth(200),self.time.delayedCall(4500,(()=>{fadeOutGameObject(treesInfoText,200),fadeOutGameObject(treesInfoTextBackground,200),drawCards(numCards),gameState.enemies.forEach((enemy=>{updateEnemyActions(),selectEnemyAction(enemy),displayEnemyIntention(enemy)}))}))}else drawCards(numCards),gameState.enemies.forEach((enemy=>{updateEnemyActions(),selectEnemyAction(enemy),displayEnemyIntention(enemy)}))}))}self.time.delayedCall(4e3,(()=>{levelStarting||(levelStarting=!0,fadeOutGameObject(levelimage,2e3),fadeOutGameObject(leveltextTop,2e3),fadeOutGameObject(leveltextBottom,2e3),self.time.delayedCall(2200,startFight()))})),self.input.on("pointerup",(()=>{levelStarting||(levelStarting=!0,fadeOutGameObject(levelimage,2e3),fadeOutGameObject(leveltextTop,2e3),fadeOutGameObject(leveltextBottom,2e3),self.time.delayedCall(2200,startFight()))}));function drawCards(numCards){gameState.endOfTurnButton.setTexture("rectangularButton"),gameState.endOfTurnButton.setInteractive();const startSlotIndex=Math.floor((gameState.slots.length-numCards)/2);for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));const card=gameState.drawPile.pop(),cardDepth=10+i+startSlotIndex;card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),card.isBeingPlayed=!1,gameState.currentCards.push(card),card.sprite.setDepth(cardDepth);const slot=gameState.slots[startSlotIndex+i];slot&&(card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot),gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),self.animateCard(card,cardDepth),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}));gameState.playersTurn=!0}function activateCard(card){if(gameState.costPlayed="function"==typeof card.cost?card.cost():card.cost,gameState.typePlayed="function"==typeof card.type?card.type():card.type,gameState.player.mana>=gameState.costPlayed&&!1===gameState.playingCard)if(gameState.player.mana-=gameState.costPlayed,self.updateManaBar(gameState.player),console.log(`activated card: ${card.key}\nCost: ${gameState.costPlayed}`),gameState.player.freedomBeforeCardPlayed="Freedom"===gameState.player.stance,card.isBeingPlayed=!0,gameState.currentCards=gameState.currentCards.filter((c=>c!==card)),card.slot&&(card.slot.available=!0),"targetSelected"===gameState.typePlayed)!function(card,handOfCards){gameState.targetingCursor.setVisible(!0),gameState.thisTurn=gameState.turn;for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.removeInteractive();for(let enemy of gameState.enemies)enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){card.isBeingPlayed&&gameState.playersTurn&&gameState.thisTurn===gameState.turn&&(card.isBeingPlayed=!1,gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,enemy));for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.setInteractive()}))}(card,gameState.currentCards);else if("targetAll"===gameState.typePlayed){gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length);const enemiesCopy=[...gameState.enemies];gameState.enemiesLength=enemiesCopy.length,enemiesCopy.forEach(((enemy,index)=>{const isLastEnemy=index===enemiesCopy.length-1;playCard(card,enemy,isLastEnemy)}))}else"permanent"===gameState.typePlayed?function(card){const slot=gameState.permanentSlots.find((slot=>slot.available));"kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length)):gameState.deck=gameState.deck.filter((c=>c!==card));slot?(card.slot.available=!0,card.sprite.destroy(),card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,gameState.permanents.push({card:card,slot:slot,tokenSprite:card.tokenSprite}),displayTokenCard(card),activatePermanentFromToken(card)):function(card){switch(self.cameras.main.shake(70,.002,!1),card.isBeingPlayed=!1,console.log(`No available slot for permanent card ${card.key}`),card.key){case"foreverTrue":depleteForeverTrue(card);break;case"rebelSpirit":depleteRebelSpirit(card);break;case"rebelHeart":depleteRebelHeart(card);break;case"bushido":depleteBushido(card);break;case"toxicAvenger":depleteToxicAvenger(card);break;case"kirisuteGomen":depleteKirisuteGomen(card);case"toxicFrets":depleteToxicFrets(card);break;case"ashenEncore":depleteAshenEncore(card);break;case"edoEruption":depleteEdoEruption(card);break;case"steelToe":depleteSteelToe(card);break;case"kamishimoUberAlles":case"hollidayInKamakura":gameState.currentCards.push(card),card.slot.available=!1}}(card)}(card):(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,gameState.player));else self.cameras.main.shake(70,.002,!1)}function playCard(card,target,isLastEnemy=!1){gameState.playingCard=!0,fadeOutGameObject(card.sprite,200),fadeOutGameObject(gameState.actionText,50),gameState.targetingCursor.setVisible(!1);const{damagePlayed:damagePlayed,firePlayed:firePlayed,stancePointsPlayed:stancePointsPlayed,poisonPlayed:poisonPlayed,healPlayed:healPlayed,strengthPlayed:strengthPlayed,armorPlayed:armorPlayed,reduceTargetArmorPlayed:reduceTargetArmorPlayed,reduceTargetStrengthPlayed:reduceTargetStrengthPlayed,drawCardPlayed:drawCardPlayed}=function(card,target,isLastEnemy=!1){const moshpitMassacreCondition="moshpitMassacre"===card.key&&gameState.player.stancePoints>0&&target.poison>0,scorchedSoulCondition="scorchedSoul"===card.key&&target.poison>0,bladesBlightCondition="bladesBlight"===card.key&&target.poison>0,roninsRotCondition="roninsRot"===card.key&&target.poison>0,kabutuEdoCondition="kabutu"===card.key&&gameState.edoEruption&&gameState.player.stancePoints>0,steelToeCondition="combatBoots"===card.key&&gameState.steelToe,knuckleFistEdoCondition="knuckleFist"===card.key&&gameState.edoEruption&&gameState.player.stancePoints<0,steelToeOutcome=gameState.player.stancePoints>0?2*(1+gameState.player.stancePoints):2;return{damagePlayed:moshpitMassacreCondition?11:getValueOrInvoke(card.damage),firePlayed:1.5*(kabutuEdoCondition?2*gameState.player.stancePoints:scorchedSoulCondition?12:getValueOrInvoke(card.fire)),stancePointsPlayed:kabutuEdoCondition&&isLastEnemy?-1:getValueOrInvoke(card.stancePoints),poisonPlayed:bladesBlightCondition?target.poison:getValueOrInvoke(card.poison),healPlayed:getValueOrInvoke(card.heal),strengthPlayed:getValueOrInvoke(card.strength),armorPlayed:knuckleFistEdoCondition?-gameState.player.stancePoints:getValueOrInvoke(card.armor),reduceTargetArmorPlayed:steelToeCondition?steelToeOutcome:getValueOrInvoke(card.reduceTargetArmor),reduceTargetStrengthPlayed:roninsRotCondition?target.poison:getValueOrInvoke(card.reduceTargetStrength),drawCardPlayed:getValueOrInvoke(card.drawCard)}}(card,target,isLastEnemy),damageModifyer=(1+.1*gameState.player.strength)*(1-target.armor/20),damageTotal=Math.round(Math.max(0,firePlayed+damagePlayed*damageModifyer));target!=gameState.player&&(gameState.score.damageDealt+=damageTotal,console.log(`${damagePlayed} Physical Damage and ${firePlayed} Fire Damage was dealt to ${target.name}`),target.strengthTurn-=reduceTargetStrengthPlayed,target.armor-=reduceTargetArmorPlayed,target.poison+=poisonPlayed,target.health-=damageTotal,target.armor>0&&damageTotal>0&&(target.armor-=1)),"seppuku"===card.key||"boneShredder"===card.key?gameState.player.strengthBase+=strengthPlayed:gameState.player.strengthCard+=strengthPlayed,"libertySpikes"===card.key&&gameState.player.stancePoints>0&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),healPlayed&&(gameState.player.health=Math.min(gameState.player.health+healPlayed,gameState.player.healthMax),self.updateHealthBar(gameState.player)),gameState.player.armorCard+=armorPlayed,gameState.player.poison=Math.max(0,gameState.player.poison-card.poisonRemove),function(damageTotal,poisonPlayed,strengthPlayed,armorPlayed){const actionTextConfig={fontSize:"32px",fill:"#ff0000"};if("targetSelected"===gameState.typePlayed||"targetAll"===gameState.typePlayed){self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8});const actionTextTarget=`${damageTotal>0?`Deals ${damageTotal} damage`:""}\n\n${poisonPlayed>0?`Deals ${poisonPlayed} Poison`:""}`;gameState.actionText=self.add.text(550,300,actionTextTarget,actionTextConfig).setOrigin(.5),self.attackTweens(gameState.player,60)}else strengthPlayed>0?(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${strengthPlayed} Strength`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player)):armorPlayed>0&&(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${armorPlayed} Armor`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player))}(damageTotal,poisonPlayed,strengthPlayed,armorPlayed),gameState.player.stancePoints+stancePointsPlayed>=-3&&gameState.player.stancePoints+stancePointsPlayed<=3&&(gameState.player.stancePoints+=stancePointsPlayed,self.updateStanceBar(gameState.player)),gameState.player.freedomAfterCardPlayed="Freedom"===gameState.player.stance,!gameState.player.freedomBeforeCardPlayed&&gameState.player.freedomAfterCardPlayed&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),updateStats(target),self.updateHealthBar(target),updateStrengthAndArmor(gameState.player),removeIfDead(target),checkGameOver(),updateEnemyActions(),drawNewCards(drawCardPlayed),gameState.enemies.forEach((enemy=>{self.updateEnemyIntention(enemy)})),self.time.delayedCall(260,(()=>{gameState.playingCard=!1})),self.time.delayedCall(1500,(()=>{gameState.actionText&&gameState.actionText.destroy()}))}function getValueOrInvoke(cardProperty){return"function"==typeof cardProperty?cardProperty():cardProperty}function initiateEnemiesTurn(){0!==gameState.enemies.length&&(gameState.enemies[gameState.currentEnemyIndex].alive?function(enemy){gameState.playersTurn&&(gameState.playersTurn=!1,enemy.turnText=self.add.text(550,300,"Enemy turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),self.time.delayedCall(1800,(()=>{fadeOutGameObject(enemy.turnText,200)})));enemy.turnComplete=!1,function(enemy){enemy.poisonText=self.add.text(570,350,"",{fontSize:"30px",fill:"#ff0000"}).setOrigin(.5),self.updatePoison(enemy),gameState.toxicAvenger&&enemy.poison>0&&updateStats(enemy);const delaytime=""!==enemy.poisonText._text||enemy.turnText?1800:800;self.time.delayedCall(delaytime,(()=>{enemy.poisonText.destroy();const chosenAction=enemy.chosenAction,actionTextConfig={fontSize:"32px",fill:"#ff0000"};if(gameState.player.poison+=chosenAction.poison,enemy.health=Math.min(enemy.health+chosenAction.heal,enemy.healthMax),enemy.strengthBase=Math.min(enemy.strengthBase+chosenAction.strength,enemy.strengthMax),updateStats(enemy),enemy.armor=Math.min(enemy.armor+chosenAction.armor,enemy.armorMax),chosenAction.damage>0||chosenAction.fire>0){const damageModifyer=(1+.1*enemy.strength)*(1-gameState.player.armor/20);self.cameras.main.shake(120,.005,!1),gameState.attackSound.play({volume:.8}),console.log(`enemy.damageTotal: ${enemy.damageTotal}`),enemy.damageTotal=Math.round(Math.max(0,chosenAction.fire+chosenAction.damage*damageModifyer)),gameState.player.health-=enemy.damageTotal,gameState.score.damageTaken+=enemy.damageTotal,gameState.actionText=self.add.text(550,300,`Deals ${enemy.damageTotal} damage`,actionTextConfig).setOrigin(.5),self.tweens.add({targets:enemy.sprite,x:enemy.sprite.x-60,duration:120,ease:"Cubic",yoyo:!0})}else chosenAction.heal>0?(gameState.healSound.play({volume:.5}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy)):(chosenAction.strength>0||chosenAction.armor>0||chosenAction.poison>0)&&(gameState.powerUpSound.play({volume:.2}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy));enemy.strengthTurn=0,function(enemy){[gameState.player,enemy].forEach((character=>{self.updateHealthBar(character),removeIfDead(character),updateStats(character)})),self.time.delayedCall(1500,(()=>{fadeOutGameObject(gameState.actionText,200),enemy.turnComplete=!0,checkGameOver()||!gameState.enemies[gameState.currentEnemyIndex].turnComplete&&gameState.enemies[gameState.currentEnemyIndex].alive||(gameState.currentEnemyIndex++,gameState.currentEnemyIndex<gameState.enemies.length?initiateEnemiesTurn():(gameState.currentEnemyIndex=0,startPlayerTurn()))}))}(enemy)}))}(enemy)}(gameState.enemies[gameState.currentEnemyIndex]):(gameState.currentEnemyIndex++,initiateEnemiesTurn()))}function updateEnemyActions(){1===gameState.turn?(gameState.enemy1.actions=[{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 Strength",probability:1}],gameState.enemy2.actions=[{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 Strength",probability:1}]):2===gameState.turn?(gameState.enemy1.actions=[{key:"Intends to\nRest",damage:0,fire:0,poison:0,heal:10,poisonRemove:0,strength:0,armor:0,text:"Heals 10 HP",probability:1}],gameState.enemy2.actions=[{key:"Intends to\nRest",damage:0,fire:0,poison:0,heal:10,poisonRemove:0,strength:0,armor:0,text:"Heals 10 HP",probability:1}]):3===gameState.turn?(gameState.enemy1.actions=[{key:()=>`Intends to\nDeal ${Math.round(13*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:13,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 13 damage",probability:1}],gameState.enemy2.actions=[{key:()=>`Intends to\nDeal ${Math.round(13*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:13,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 13 damage",probability:1}]):4===gameState.turn?(gameState.enemy1.actions=[{key:"Intends to\nRest",damage:0,fire:0,poison:0,heal:5,poisonRemove:0,strength:0,armor:0,text:"Heals 10 HP",probability:1}],gameState.enemy2.actions=[{key:"Intends to\nRest",damage:0,fire:0,poison:0,heal:5,poisonRemove:0,strength:0,armor:0,text:"Heals 10 HP",probability:1}]):(gameState.enemy1.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 fire damage",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(12*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:12,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 12 damage",probability:.235+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(16*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:16,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 16 damage",probability:.17+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,text:"Heals 15 HP\nGains 1 armor",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:2,armor:0,text:"Gains 2 strenght",probability:.125+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:3,text:"Gains 3 armor",probability:.15+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 poison",probability:0}],gameState.enemy2.actions=[{key:"Intends to\nDeal 10 fire damage",damage:0,fire:10,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 10 fire damage",probability:.1+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 15 damage",probability:.23+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(18*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:18,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 18 damage",probability:.15+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,text:"Heals 15 HP\nGains 1 armor",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 strenght",probability:.13+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:3,text:"Gains 3 armor",probability:.17+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 poison",probability:0}])}function selectEnemyAction(enemy){!function(enemy){const totalProbability=enemy.actions.reduce(((sum,action)=>sum+action.probability),0);if(1!==totalProbability){const scalingFactor=1/totalProbability;for(let action of enemy.actions)action.probability*=scalingFactor}}(enemy);let cumProb=0;for(let i=0;i<enemy.actions.length;i++)cumProb+=enemy.actions[i].probability,enemy.actions[i].cumulativeProbability=cumProb;const rand=Math.random();enemy.chosenAction=enemy.actions.find((action=>rand<action.cumulativeProbability))}function checkGameOver(){return gameState.player.alive?!gameState.enemies.some((enemy=>enemy.alive))&&(gameState.playersTurn=!1,function(){gameState.score.numberOfTurns+=gameState.turn,gameState.score.levelsCompleted+=1,gameState.music.stop(),self.updateManaBar(gameState.player),addHandtoDeck(),self.time.delayedCall(600,(()=>{gameState.attackSound.isPlaying&&gameState.attackSound.stop(),gameState.victorySound.play({volume:.9,rate:1}),self.clearBoard()})),gameState.actionText&&(gameState.actionText.destroy(),console.log("gameState.actionText still existed at initiateVictory and got destroyed"));const victoryTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},victoryText=self.add.text(550,300,"Victory!",victoryTextConfig).setOrigin(.5);self.time.delayedCall(2e3,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),victoryText.destroy(),function(){self.shuffleDeck(gameState.bonusCards);const gameOverTextConfig={fontSize:"40px",fill:"#000000"},rewardTextConfig={fontSize:"25px",fill:"#000000"};gameState.gameOverText=self.add.text(550,180,"Choose a reward",gameOverTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsText=self.add.text(550,400,"Add 1 card\nto your deck",rewardTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsButton=self.add.image(550,400,"rectangularButton"),gameState.rewardAddCardsButton.setScale(1.2).setInteractive().setOrigin(.5).setDepth(102),gameState.rewardAddCardsButton.on("pointerover",(function(){this.setTexture("rectangularButtonHovered")})),gameState.rewardAddCardsButton.on("pointerout",(function(){this.setTexture("rectangularButton")})),gameState.rewardAddCardsButton.on("pointerup",(function(){gameState.rewardAddCardsText.destroy(),gameState.gameOverText.destroy(),gameState.rewardAddCardsButton.destroy(),function(){console.log("rewardAddCard called"),gameState.gameOverText.destroy();const x=320,y=300,spacing=220;let bonusCards=gameState.bonusCards.slice(0,3);console.log(`bonusCards: ${bonusCards.key}`),bonusCards.forEach(((bonusCard,index)=>{bonusCard.sprite=self.add.sprite(x+index*spacing,y,bonusCard.key),bonusCard.sprite.setScale(.45).setInteractive().setDepth(102),console.log(`bonusCardsprite added for: ${bonusCard.key}`),bonusCard.sprite.on("pointerover",(()=>{gameState.cardsDealtSound.play({volume:.6}),self.cardTweens(bonusCard.sprite,.58,200)}),self),bonusCard.sprite.on("pointerout",(()=>{self.cardTweens(bonusCard.sprite,.45,400)}),self),bonusCard.sprite.on("pointerup",(()=>{let nextlevelstarting=!1;gameState.deck.push(bonusCard),"permanent"===bonusCard.type&&gameState.bonusCards.splice(gameState.bonusCards.indexOf(bonusCard),1),bonusCards.forEach((card=>{card.sprite.removeInteractive(),card!==bonusCard&&fadeOutGameObject(card.sprite,200)})),self.tweens.add({targets:bonusCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),self.add.text(550,180,"Gained 1 card",{fontSize:"40px",fill:"#000000"}).setOrigin(.5),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()}))}()}))}(),!0):(gameState.playersTurn=!1,function(){gameState.player.health=0,self.updateManaBar(gameState.player),addHandtoDeck(),gameState.music.stop(),gameState.endOfTurnButton.destroy(),gameState.actionText&&fadeOutGameObject(gameState.actionText,200);gameState.score.numberOfTurns+=gameState.turn,gameState.gameOverText=self.add.text(550,300," Defeat!",{fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setOrigin(.5),gameState.gameOverText.setInteractive();let scenetransitionstarted=!1;self.time.delayedCall(400,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),scenetransitionstarted||(gameState.gameOverText.on("pointerup",(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})),self.time.delayedCall(2500,(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})))}))}(),!0)}function startNextLevel(){self.cameras.main.fadeOut(1e3),self.time.delayedCall(1e3,(()=>{self.scene.start("Level2Fight2")}))}function activatePermanentFromToken(card){if("foreverTrue"===card.key)gameState.foreverTrue=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteForeverTrue(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelSpirit"===card.key)gameState.rebelSpirit=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelSpirit(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelHeart"===card.key)gameState.rebelHeart=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelHeart(card):self.cameras.main.shake(70,.002,!1)}));else if("bushido"===card.key)gameState.bushido=!0,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteBushido(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicAvenger"===card.key)gameState.toxicAvenger=!0,gameState.enemies.forEach((enemy=>updateStats(enemy))),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicAvenger(card):self.cameras.main.shake(70,.002,!1)}));else if("kirisuteGomen"===card.key)gameState.player.strengthMax+=5,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn&&gameState.enemies.some((enemy=>enemy.health<30))?depleteKirisuteGomen(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicFrets"===card.key)gameState.toxicFrets=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicFrets(card):self.cameras.main.shake(70,.002,!1)}));else if("ashenEncore"===card.key)gameState.ashenEncore=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteAshenEncore(card):self.cameras.main.shake(70,.002,!1)}));else if("edoEruption"===card.key)gameState.edoEruption=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteEdoEruption(card):self.cameras.main.shake(70,.002,!1)}));else if("steelToe"===card.key)gameState.steelToe=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteSteelToe(card):self.cameras.main.shake(70,.002,!1)}));else if("kamishimoUberAlles"===card.key){const tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;gameState.kamishimoUberAlles+=1,updateStrengthAndArmor(gameState.player),tokenSprite.on("pointerup",(()=>{gameState.playersTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.kamishimoUberAlles-=1,updateStrengthAndArmor(gameState.player)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}else if("hollidayInKamakura"===card.key){let tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;const turnplayed=gameState.turn,fightplayed=gameState.score.levelsCompleted;tokenSprite.on("pointerup",(()=>{const depletedDifferentTurn=turnplayed!=gameState.turn||fightplayed!=gameState.score.levelsCompleted;console.log(`depletedDifferentTurn: ${depletedDifferentTurn}\nturnplayed: ${turnplayed}\ngameState.turn: ${gameState.turn}\nfightplayed: ${fightplayed}\ngameState.score.levelsCompleted: ${gameState.score.levelsCompleted}\ngameState.playersTurn: ${gameState.playersTurn}`),gameState.playersTurn&&depletedDifferentTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.player.manaMax+=1,gameState.player.mana+=1,self.updateManaBar(gameState.player),drawNewCards(1)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}}function displayTokenCard(card){card.tokenSprite.on("pointerover",(function(){gameState.cardsDealtSound.play({volume:1.5}),card.permanentCardSprite=self.add.sprite(550,300,card.key).setScale(.55).setDepth(26)})),card.tokenSprite.on("pointerout",(function(){card.permanentCardSprite.destroy()}))}function depleteForeverTrue(card){gameState.foreverTrue=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),drawNewCards(8)}function depleteRebelSpirit(card){gameState.rebelSpirit=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.mana+=3,gameState.player.manaMax+=3,self.updateManaBar(gameState.player)}function depleteRebelHeart(card){gameState.rebelHeart=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+12),self.updateHealthBar(gameState.player)}function depleteBushido(card){gameState.bushido=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.strengthBase+=6,updateStrengthAndArmor(gameState.player)}function depleteToxicAvenger(card){gameState.toxicAvenger=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison+=4,updateStats(enemy)}))}function depleteKirisuteGomen(card){if(gameState.enemies.some((enemy=>enemy.health<30))){gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let functionActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){enemy.health<30&&functionActive?(enemy.health=0,gameState.attackSound.play({volume:1}),self.cameras.main.shake(120,.025,!1),card.tokenSlot&&(card.tokenSlot.available=!0,gameState.player.strengthMax-=5),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),removeIfDead(enemy),checkGameOver(),updateStrengthAndArmor(gameState.player)):(self.cameras.main.shake(70,.002,!1),functionActive=!1),gameState.targetingCursor.setVisible(!1)}))}))}else self.cameras.main.shake(70,.002,!1),card.slot.available=!1,gameState.currentCards.some((card=>"kirisuteGomen"===card.key))||(gameState.currentCards.push(card),gameState.player.mana+=1,self.updateManaBar(gameState.player))}function depleteToxicFrets(card){gameState.toxicFrets=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison>0&&(enemy.health-=2*enemy.poison,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver())}))}function depleteAshenEncore(card){gameState.ashenEncore=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card));const ashenEncoreDepleteText=self.add.text(550,350,"Deals 12 firedamage\n to all enemies",{fontSize:"32px",fill:"#ff0000"}).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDepleteText.destroy()})),gameState.enemies.forEach((enemy=>{enemy.health-=12,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver()}))}function depleteEdoEruption(card){gameState.edoEruption=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card))}function depleteSteelToe(card){gameState.steelToe=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let depleteSteelToeActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){depleteSteelToeActive&&(enemy.armor-=7,updateStats(enemy),gameState.attackSound.play({volume:.6}),self.cameras.main.shake(100,.012,!1),gameState.targetingCursor.setVisible(!1),depleteSteelToeActive=!1)}))}))}function updateStrengthAndArmor(character){let strengthBushido=0;gameState.endOfTurnButtonPressed?(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard+character.armorStance),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+strengthBushido)):(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+character.strengthCard+strengthBushido)),gameState.kamishimoUberAlles>0&&gameState.player.stancePoints<0&&(character.strength=Math.min(character.strengthMax,character.strength-gameState.player.stancePoints*gameState.kamishimoUberAlles)),updateStats(character)}function updateStats(character){character!=gameState.player&&(character.strength=character.strengthBase+character.strengthTurn,gameState.toxicAvenger&&character.poison>0&&(character.strength-=4)),character.armorText.setText(`${character.armor}/${character.armorMax}`),character.strengthText.setText(`${character.strength}/${character.strengthMax}`)}function removeIfDead(character){if(character.health<=0){if(character.health=0,character.sprite.removeInteractive(),character.alive=!1,character.turnComplete=!0,character!=gameState.player){const indexEnemies=gameState.enemies.indexOf(character),indexCharacters=gameState.characters.indexOf(character);-1!==indexEnemies&&gameState.enemies.splice(indexEnemies,1),-1!==indexCharacters&&gameState.characters.splice(indexCharacters,1)}[character.sprite,character.healthBarBackground,character.healthBar,character.healthBarText,character.manaBarBackground,character.manaBar,character.manaBarText,character.strengthAndArmorImage,character.strengthText,character.armorText,character.descriptionBackground,character.descriptionText,character.intentionText,character.intentionBackground].forEach((object=>{fadeOutGameObject(object,500)}))}}function addHandtoDeck(){for(;gameState.currentCards.length>0;){let card=gameState.currentCards.pop();card.slot.available||(card.slot.available=!0),gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),fadeOutGameObject(card.sprite,200)}}function drawNewCards(numCards){const numCardsLimit=Math.min(gameState.deck.length,8),numOfFreeSlots=gameState.slots.filter((slot=>slot.available)).length;numCards=numOfFreeSlots<numCards?numOfFreeSlots:numCards;for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{if(gameState.currentCards.length<numCardsLimit){0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));let card=gameState.drawPile.pop();card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),console.log(`card added: ${card.key}`),card.isBeingPlayed=!1,gameState.currentCards.push(card);let availableSlots=gameState.slots.filter((slot=>slot.available)),slot=availableSlots[Math.floor(availableSlots.length/2)];if(slot){card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot;let cardDepth=10+slot.index;card.sprite.setDepth(cardDepth),self.animateCard(card,cardDepth)}gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),gameState.ashenEncore&&gameState.enemies.forEach((enemy=>{if(enemy.health-=4,self.updateHealthBar(enemy),removeIfDead(enemy),"undefined"==typeof ashenEncoreText||!ashenEncoreText){const ashenEncoreConfig={fontSize:"32px",fill:"#ff0000"},ashenEncoreKey="Deals 4 fire damage to all enemies",ashenEncoreDrawText=self.add.text(550,350,ashenEncoreKey,ashenEncoreConfig).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDrawText.destroy()}))}})),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}else self.cameras.main.shake(70,.002,!1)}))}function displayEnemyIntention(enemy){const actionKey="function"==typeof enemy.chosenAction.key?enemy.chosenAction.key():enemy.chosenAction.key;enemy.intentionText=self.add.text(enemy.x+10,enemy.y-enemy.height/2-40,`${actionKey}`,{fontSize:"13px",fill:"#000000"}),enemy.intentionText.setOrigin(.5,1).setDepth(11);const originalSpriteWidth=self.textures.get("listbox1").getSourceImage().width,scale=enemy.intentionText.width/originalSpriteWidth;enemy.intentionBackground=self.add.sprite(enemy.x+10,enemy.y-enemy.height/2-33,"listbox1").setScale(1.05*scale,1),enemy.intentionBackground.setInteractive().setOrigin(.5,1).setAlpha(.85).setDepth(10)}function fadeOutGameObject(gameObject,duration){gameObject&&self.tweens.add({targets:gameObject,alpha:0,ease:"Power1",duration:duration,onComplete:()=>{gameObject.destroy()}},self)}gameState.slots=[{available:!0,x:230,y:640,index:0,angle:-12},{available:!0,x:320,y:610,index:1,angle:-8},{available:!0,x:410,y:590,index:2,angle:-4},{available:!0,x:500,y:580,index:3,angle:0},{available:!0,x:590,y:590,index:4,angle:4},{available:!0,x:680,y:610,index:5,angle:8},{available:!0,x:770,y:640,index:6,angle:12},{available:!0,x:860,y:670,index:7,angle:16}],gameState.endOfTurnButton.on("pointerup",(function(){gameState.currentEnemyIndex=0,gameState.targetingCursor.visible||!gameState.playersTurn?self.cameras.main.shake(70,.002,!1):(this.setTexture("rectangularButtonPressed"),this.removeInteractive(),gameState.buttonPressedSound.play(),gameState.endOfTurnButtonPressed=!0,addHandtoDeck(),updateStrengthAndArmor(gameState.player),updateEnemyActions(),gameState.rebelHeart&&(gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+Math.abs(gameState.player.stancePoints)),self.updateHealthBar(gameState.player)),gameState.enemies.forEach((enemy=>{enemy.turnComplete=!enemy.alive,fadeOutGameObject(enemy.intentionText,200),fadeOutGameObject(enemy.intentionBackground,200)})),0!=gameState.player.mana&&(gameState.player.mana=0,self.updateManaBar(gameState.player)),self.time.delayedCall(100,(()=>{gameState.actionText&&gameState.actionText.destroy(),initiateEnemiesTurn()})))})),"admin"===gameState.playerName&&(gameState.getManaButton=self.add.sprite(550,200,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.getManaText=self.add.text(550,200,"Get Mana",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.getManaButton.on("pointerup",(()=>{gameState.playersTurn&&(gameState.player.mana=gameState.player.manaMax,self.updateManaBar(gameState.player),console.log("mana gained"))})),gameState.drawCardButton=self.add.sprite(550,300,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.drawCardText=self.add.text(550,300,"Draw Card",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.drawCardButton.on("pointerup",(()=>{gameState.playersTurn&&(drawNewCards(1),console.log("card drawn"))})),gameState.killEnemyButton=self.add.sprite(550,400,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.killEnemyText=self.add.text(550,400,"Kill Enemy",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.killEnemyButton.on("pointerup",(()=>{if(gameState.enemies.some((enemy=>enemy.health>0&&gameState.playersTurn))){const enemy=gameState.enemies.find((enemy=>enemy.health>0));enemy.health=0,removeIfDead(enemy),checkGameOver(),console.log(`${enemy.name} killed`)}})))}update(){gameState.targetingCursor.visible&&(gameState.targetingCursor.x=this.input.mousePointer.x,gameState.targetingCursor.y=this.input.mousePointer.y)}}class Level2Fight2 extends BaseScene{self;constructor(){super("Level2Fight2")}preload(){this.load.image("bakgrunnForest2","assets/images/bakgrunnForest2.jpg"),this.load.image("goblin1","assets/images/sprites/goblin1.png"),this.load.image("goblin2","assets/images/sprites/goblin2.png"),this.load.image("goblin3","assets/images/sprites/goblin3.png")}create(){const self=this;for(this.baseCreate("bakgrunnForest2"),this.resetPlayer(gameState.player,.35),this.addButtons(),function(){gameState.drawPileImage=self.add.image(120,600,"deck"),gameState.drawPileImage.setScale(.13).setOrigin(.5,.5).setInteractive();gameState.drawPileText=self.add.text(120,600,gameState.drawPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.drawPileText.setDepth(100).setOrigin(.5,.5),gameState.drawPileImage.on("pointerover",(function(){if(gameState.drawPile.length>0){const cardsPerRow=gameState.drawPile.length<12?4:6,cardSpacing=105,startX=gameState.drawPile.length<12?400:250,startY=150;gameState.drawPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.drawPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]}))}(),gameState.discardPileText=self.add.text(980,600,gameState.discardPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.discardPileText.setDepth(100).setOrigin(.5,.5),gameState.discardPileImage=self.add.image(980,600,"deck"),gameState.discardPileImage.setScale(.13).setOrigin(.5,.5).setInteractive().setTint(16711680),gameState.discardPileImage.on("pointerover",(function(){if(gameState.discardPile.length>0){const cardsPerRow=gameState.discardPile.length<12?4:6,cardSpacing=105,startX=gameState.discardPile.length<12?400:250,startY=150;gameState.discardPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.discardPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]})),gameState.kamishimoUberAlles=0,gameState.kirisuteGomen=!1,gameState.toxicFrets=!1,gameState.ashenEncore=!1,gameState.edoEruption=!1,gameState.steelToe=!1,gameState.currentCards=[],gameState.cardImages=[];gameState.extraCards.length;)gameState.bonusCards.push(gameState.extraCards.pop());function startPlayerTurn(){let numCards=gameState.player.numCardsBase+gameState.player.numCardsStance;gameState.turn+=1,gameState.endOfTurnButtonPressed=!1,gameState.yourTurnText=self.add.text(550,300,"Your turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),gameState.player.poisonText=self.add.text(570,350,"",{fontSize:"25px",fill:"#ff0000"}).setOrigin(.5),console.log(`player's turn number ${gameState.turn} has started`),gameState.player.armorCard=0,gameState.player.strengthCard=0;const manaMax=gameState.player.manaBase+gameState.player.manaStance;gameState.player.manaMax=gameState.rebelSpirit&&gameState.turn%3==0?manaMax+1:manaMax,gameState.player.mana=gameState.player.manaMax,gameState.foreverTrue&&gameState.player.stancePoints>0?(gameState.player.manaMax+=1,gameState.player.mana+=1):gameState.player.stancePoints=0,self.updateStanceBar(gameState.player),self.updateManaBar(gameState.player),self.updateHealthBar(gameState.player),self.updatePoison(gameState.player),removeIfDead(gameState.player),updateStrengthAndArmor(gameState.player),self.time.delayedCall(2200,(()=>{gameState.player.poisonText.destroy(),fadeOutGameObject(gameState.yourTurnText,200),function(numCards){gameState.endOfTurnButton.setTexture("rectangularButton"),gameState.endOfTurnButton.setInteractive();const startSlotIndex=Math.floor((gameState.slots.length-numCards)/2);for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));const card=gameState.drawPile.pop(),cardDepth=10+i+startSlotIndex;card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),card.isBeingPlayed=!1,gameState.currentCards.push(card),card.sprite.setDepth(cardDepth);const slot=gameState.slots[startSlotIndex+i];slot&&(card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot),gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),self.animateCard(card,cardDepth),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}));gameState.playersTurn=!0}(numCards),gameState.enemies.forEach((enemy=>{updateEnemyActions(),function(enemy){!function(enemy){const totalProbability=enemy.actions.reduce(((sum,action)=>sum+action.probability),0);if(1!==totalProbability){const scalingFactor=1/totalProbability;for(let action of enemy.actions)action.probability*=scalingFactor}}(enemy);let cumProb=0;for(let i=0;i<enemy.actions.length;i++)cumProb+=enemy.actions[i].probability,enemy.actions[i].cumulativeProbability=cumProb;const rand=Math.random();enemy.chosenAction=enemy.actions.find((action=>rand<action.cumulativeProbability))}(enemy),function(enemy){const actionKey="function"==typeof enemy.chosenAction.key?enemy.chosenAction.key():enemy.chosenAction.key,textConfig={fontSize:"13px",fill:"#000000"};enemy.intentionText=self.add.text(enemy.x+10,enemy.y-enemy.height/2-40,`${actionKey}`,textConfig),enemy.intentionText.setOrigin(.5,1).setDepth(11);const originalSpriteWidth=self.textures.get("listbox1").getSourceImage().width,scale=enemy.intentionText.width/originalSpriteWidth;enemy.intentionBackground=self.add.sprite(enemy.x+10,enemy.y-enemy.height/2-33,"listbox1").setScale(1.05*scale,1),enemy.intentionBackground.setInteractive().setOrigin(.5,1).setAlpha(.85).setDepth(10)}(enemy)}))}))}gameState.enemy1=Object.create(gameState.enemy),gameState.enemy1.name="Junior Goblin\nApprentice of poison",gameState.enemy1.sprite=this.add.sprite(670,370,"goblin1").setScale(.19).setFlipX(!0).setInteractive(),gameState.enemy1.health=30,gameState.enemy1.healthMax=30,gameState.enemy1.armor=0,gameState.enemy2=Object.create(gameState.enemy),gameState.enemy2.name="Junior Goblin\nApprentice of poison",gameState.enemy2.sprite=this.add.sprite(800,370,"goblin3").setScale(.17).setFlipX(!1).setInteractive(),gameState.enemy2.health=30,gameState.enemy2.healthMax=30,gameState.enemy2.armor=0,gameState.enemy3=Object.create(gameState.enemy),gameState.enemy3.name="Senior Goblin\nMaster of poison",gameState.enemy3.sprite=this.add.sprite(930,370,"goblin2").setScale(.23).setFlipX(!1).setInteractive(),gameState.enemy3.health=45,gameState.enemy3.healthMax=45,gameState.enemy3.armor=0,gameState.enemies=[gameState.enemy1,gameState.enemy2,gameState.enemy3],gameState.characters=[...gameState.enemies,gameState.player],gameState.characters.forEach((character=>{character.height=character.sprite.displayHeight,character.width=character.sprite.displayWidth,character.x=character.sprite.x,character.y=character.sprite.y,this.addHealthBar(character,character.healthBarColor),this.addStatsDisplay(character),this.describeCharacter(character,character.sprite)})),this.addManaBar(gameState.player),this.addStanceBar(gameState.player,"#a9a9a9"),gameState.permanents.forEach((permanent=>{const card=permanent.card,slot=permanent.slot;"kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?slot.available=!0:(card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,console.log(`Recreated permanent: ${card.key}\nfor slot ${slot.index}`),displayTokenCard(card),activatePermanentFromToken(card))})),function(){gameState.turn=0,gameState.musicTheme.stop(),self.shuffleDeck(gameState.drawPile);const{level:level,fight:fight}=self.extractLevelFightFromName(self.scene.key);gameState.startText=self.add.text(550,300,`Level ${level}\nFight ${fight}!`,{fontSize:"60px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setDepth(200).setOrigin(.5),self.time.delayedCall(350,(()=>{gameState.music.play({loop:!0,volume:.35})})),self.time.delayedCall(3e3,(()=>{fadeOutGameObject(gameState.startText,200),self.time.delayedCall(300,startPlayerTurn())}))}();function activateCard(card){if(gameState.costPlayed="function"==typeof card.cost?card.cost():card.cost,gameState.typePlayed="function"==typeof card.type?card.type():card.type,gameState.player.mana>=gameState.costPlayed&&!1===gameState.playingCard)if(gameState.player.mana-=gameState.costPlayed,self.updateManaBar(gameState.player),console.log(`activated card: ${card.key}\nCost: ${gameState.costPlayed}`),gameState.player.freedomBeforeCardPlayed="Freedom"===gameState.player.stance,card.isBeingPlayed=!0,gameState.currentCards=gameState.currentCards.filter((c=>c!==card)),card.slot&&(card.slot.available=!0),"targetSelected"===gameState.typePlayed)!function(card,handOfCards){gameState.targetingCursor.setVisible(!0),gameState.thisTurn=gameState.turn;for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.removeInteractive();for(let enemy of gameState.enemies)enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){card.isBeingPlayed&&gameState.playersTurn&&gameState.thisTurn===gameState.turn&&(card.isBeingPlayed=!1,gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,enemy));for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.setInteractive()}))}(card,gameState.currentCards);else if("targetAll"===gameState.typePlayed){gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length);const enemiesCopy=[...gameState.enemies];gameState.enemiesLength=enemiesCopy.length,enemiesCopy.forEach(((enemy,index)=>{const isLastEnemy=index===enemiesCopy.length-1;playCard(card,enemy,isLastEnemy)}))}else"permanent"===gameState.typePlayed?function(card){const slot=gameState.permanentSlots.find((slot=>slot.available));slot?("kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length)):gameState.deck=gameState.deck.filter((c=>c!==card)),card.slot.available=!0,card.sprite.destroy(),card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,gameState.permanents.push({card:card,slot:slot,tokenSprite:card.tokenSprite}),displayTokenCard(card),activatePermanentFromToken(card)):function(card){switch(self.cameras.main.shake(70,.002,!1),card.isBeingPlayed=!1,console.log(`No available slot for permanent card ${card.key}`),card.key){case"foreverTrue":depleteForeverTrue(card);break;case"rebelSpirit":depleteRebelSpirit(card);break;case"rebelHeart":depleteRebelHeart(card);break;case"bushido":depleteBushido(card);break;case"toxicAvenger":depleteToxicAvenger(card);break;case"kirisuteGomen":depleteKirisuteGomen(card);case"toxicFrets":depleteToxicFrets(card);break;case"ashenEncore":depleteAshenEncore(card);break;case"edoEruption":depleteEdoEruption(card);break;case"steelToe":depleteSteelToe(card);break;case"kamishimoUberAlles":case"hollidayInKamakura":gameState.currentCards.push(card),card.slot.available=!1}}(card)}(card):(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,gameState.player));else self.cameras.main.shake(70,.002,!1)}function playCard(card,target,isLastEnemy=!1){gameState.playingCard=!0,fadeOutGameObject(card.sprite,200),fadeOutGameObject(gameState.actionText,50),gameState.targetingCursor.setVisible(!1);const{damagePlayed:damagePlayed,firePlayed:firePlayed,stancePointsPlayed:stancePointsPlayed,poisonPlayed:poisonPlayed,healPlayed:healPlayed,strengthPlayed:strengthPlayed,armorPlayed:armorPlayed,reduceTargetArmorPlayed:reduceTargetArmorPlayed,reduceTargetStrengthPlayed:reduceTargetStrengthPlayed,drawCardPlayed:drawCardPlayed}=function(card,target,isLastEnemy=!1){const moshpitMassacreCondition="moshpitMassacre"===card.key&&gameState.player.stancePoints>0&&target.poison>0,scorchedSoulCondition="scorchedSoul"===card.key&&target.poison>0,bladesBlightCondition="bladesBlight"===card.key&&target.poison>0,roninsRotCondition="roninsRot"===card.key&&target.poison>0,kabutuEdoCondition="kabutu"===card.key&&gameState.edoEruption&&gameState.player.stancePoints>0,steelToeCondition="combatBoots"===card.key&&gameState.steelToe,knuckleFistEdoCondition="knuckleFist"===card.key&&gameState.edoEruption&&gameState.player.stancePoints<0,steelToeOutcome=gameState.player.stancePoints>0?2*(1+gameState.player.stancePoints):2;return{damagePlayed:moshpitMassacreCondition?11:getValueOrInvoke(card.damage),firePlayed:kabutuEdoCondition?2*gameState.player.stancePoints:scorchedSoulCondition?12:getValueOrInvoke(card.fire),stancePointsPlayed:kabutuEdoCondition&&isLastEnemy?-1:getValueOrInvoke(card.stancePoints),poisonPlayed:bladesBlightCondition?target.poison:getValueOrInvoke(card.poison),healPlayed:getValueOrInvoke(card.heal),strengthPlayed:getValueOrInvoke(card.strength),armorPlayed:knuckleFistEdoCondition?-gameState.player.stancePoints:getValueOrInvoke(card.armor),reduceTargetArmorPlayed:steelToeCondition?steelToeOutcome:getValueOrInvoke(card.reduceTargetArmor),reduceTargetStrengthPlayed:roninsRotCondition?target.poison:getValueOrInvoke(card.reduceTargetStrength),drawCardPlayed:getValueOrInvoke(card.drawCard)}}(card,target,isLastEnemy),damageModifyer=(1+.1*gameState.player.strength)*(1-target.armor/20),damageTotal=Math.round(Math.max(0,firePlayed+damagePlayed*damageModifyer));target!=gameState.player&&(gameState.score.damageDealt+=damageTotal,console.log(`${damagePlayed} Physical Damage and ${firePlayed} Fire Damage was dealt to ${target.name}`),target.strengthTurn-=reduceTargetStrengthPlayed,target.armor-=reduceTargetArmorPlayed,target.poison+=poisonPlayed,target.health-=damageTotal),"seppuku"===card.key||"boneShredder"===card.key?gameState.player.strengthBase+=strengthPlayed:gameState.player.strengthCard+=strengthPlayed,"libertySpikes"===card.key&&gameState.player.stancePoints>0&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),healPlayed&&(gameState.player.health=Math.min(gameState.player.health+healPlayed,gameState.player.healthMax),self.updateHealthBar(gameState.player)),gameState.player.armorCard+=armorPlayed,gameState.player.poison=Math.max(0,gameState.player.poison-card.poisonRemove),function(damageTotal,poisonPlayed,strengthPlayed,armorPlayed){const actionTextConfig={fontSize:"32px",fill:"#ff0000"};if("targetSelected"===gameState.typePlayed||"targetAll"===gameState.typePlayed){self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8});const actionTextTarget=`${damageTotal>0?`Deals ${damageTotal} damage`:""}\n\n${poisonPlayed>0?`Deals ${poisonPlayed} Poison`:""}`;gameState.actionText=self.add.text(550,300,actionTextTarget,actionTextConfig).setOrigin(.5),self.attackTweens(gameState.player,60)}else strengthPlayed>0?(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${strengthPlayed} Strength`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player)):armorPlayed>0&&(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${armorPlayed} Armor`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player))}(damageTotal,poisonPlayed,strengthPlayed,armorPlayed),gameState.player.stancePoints+stancePointsPlayed>=-3&&gameState.player.stancePoints+stancePointsPlayed<=3&&(gameState.player.stancePoints+=stancePointsPlayed,self.updateStanceBar(gameState.player)),gameState.player.freedomAfterCardPlayed="Freedom"===gameState.player.stance,!gameState.player.freedomBeforeCardPlayed&&gameState.player.freedomAfterCardPlayed&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),updateStats(target),self.updateHealthBar(target),updateStrengthAndArmor(gameState.player),removeIfDead(target),checkGameOver(),updateEnemyActions(),drawNewCards(drawCardPlayed),gameState.enemies.forEach((enemy=>{self.updateEnemyIntention(enemy)})),self.time.delayedCall(260,(()=>{gameState.playingCard=!1})),self.time.delayedCall(1500,(()=>{gameState.actionText&&gameState.actionText.destroy()}))}function initiateEnemiesTurn(){0!==gameState.enemies.length&&(gameState.enemies[gameState.currentEnemyIndex].alive?function(enemy){gameState.playersTurn&&(gameState.playersTurn=!1,enemy.turnText=self.add.text(550,300,"Enemy turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),self.time.delayedCall(1800,(()=>{fadeOutGameObject(enemy.turnText,200)})));enemy.turnComplete=!1,function(enemy){enemy.poisonText=self.add.text(570,350,"",{fontSize:"30px",fill:"#ff0000"}).setOrigin(.5),self.updatePoison(enemy),gameState.toxicAvenger&&enemy.poison>0&&updateStats(enemy);const delaytime=""!==enemy.poisonText._text||enemy.turnText?1800:800;self.time.delayedCall(delaytime,(()=>{enemy.poisonText.destroy();const chosenAction=enemy.chosenAction,actionTextConfig={fontSize:"32px",fill:"#ff0000"};if(gameState.player.poison+=chosenAction.poison,enemy.health=Math.min(enemy.health+chosenAction.heal,enemy.healthMax),enemy.strengthBase=Math.min(enemy.strengthBase+chosenAction.strength,enemy.strengthMax),updateStats(enemy),enemy.armor=Math.min(enemy.armor+chosenAction.armor,enemy.armorMax),chosenAction.damage>0||chosenAction.fire>0){const damageModifyer=(1+.1*enemy.strength)*(1-gameState.player.armor/20);self.cameras.main.shake(120,.005,!1),gameState.attackSound.play({volume:.8}),console.log(`enemy.damageTotal: ${enemy.damageTotal}`),enemy.damageTotal=Math.round(Math.max(0,chosenAction.fire+chosenAction.damage*damageModifyer)),gameState.player.health-=enemy.damageTotal,gameState.score.damageTaken+=enemy.damageTotal,gameState.actionText=self.add.text(550,300,`Deals ${enemy.damageTotal} damage`,actionTextConfig).setOrigin(.5),self.tweens.add({targets:enemy.sprite,x:enemy.sprite.x-60,duration:120,ease:"Cubic",yoyo:!0})}else chosenAction.heal>0?(gameState.healSound.play({volume:.5}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy)):(chosenAction.strength>0||chosenAction.armor>0||chosenAction.poison>0)&&(gameState.powerUpSound.play({volume:.2}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy));enemy.strengthTurn=0,function(enemy){[gameState.player,enemy].forEach((character=>{self.updateHealthBar(character),removeIfDead(character),updateStats(character)})),self.time.delayedCall(1500,(()=>{fadeOutGameObject(gameState.actionText,200),enemy.turnComplete=!0,checkGameOver()||!gameState.enemies[gameState.currentEnemyIndex].turnComplete&&gameState.enemies[gameState.currentEnemyIndex].alive||(gameState.currentEnemyIndex++,gameState.currentEnemyIndex<gameState.enemies.length?initiateEnemiesTurn():(gameState.currentEnemyIndex=0,startPlayerTurn()))}))}(enemy)}))}(enemy)}(gameState.enemies[gameState.currentEnemyIndex]):(gameState.currentEnemyIndex++,initiateEnemiesTurn()))}function updateEnemyActions(){gameState.enemy1.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:1,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 fire damage",probability:0+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/6},{key:()=>`Intends to\nDeal ${Math.round(8*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:8,fire:0,poison:1,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 8 damage\nAnd 1 Poison",probability:.23+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/6},{key:()=>`Intends to\nDeal ${Math.round(12*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:12,fire:0,poison:1,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 12 damage\nAnd 1 Poison",probability:.11+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/6},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:2,text:"Heals 15 HP\nGains 2 armor",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:4,armor:0,text:"Gains 4 strenght",probability:.12+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/6},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:5,text:"Gains 5 armor",probability:.14+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/6},{key:"Intends to\nPoison you",damage:0,fire:0,poison:2,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 2 poison",probability:.18+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/6}],gameState.enemy2.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:1,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 fire damage",probability:0+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/6},{key:()=>`Intends to\nDeal ${Math.round(8*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:8,fire:0,poison:1,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 8 damage\nAnd 1 Poison",probability:.23+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/6},{key:()=>`Intends to\nDeal ${Math.round(12*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:12,fire:0,poison:1,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 12 damage\nAnd 1 Poison",probability:.11+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/6},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:2,text:"Heals 15 HP\nGains 2 armor",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:4,armor:0,text:"Gains 4 strenght",probability:.12+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/6},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:5,text:"Gains 5 armor",probability:.14+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/6},{key:"Intends to\nPoison you",damage:0,fire:0,poison:2,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 2 poison",probability:.18+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/6}],gameState.enemy3.actions=[{key:"Intends to\nDeal 7 fire damage",damage:0,fire:7,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 7 fire damage",probability:0+(gameState.enemy3.health>=gameState.enemy3.healthMax?.22:0)/6},{key:()=>`Intends to\nDeal ${Math.round(11*(1+.1*gameState.enemy3.strength)*(1-gameState.player.armor/20))} damage`,damage:11,fire:0,poison:1,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 10 damage\nAnd 1 Poison",probability:.17+(gameState.enemy3.health>=gameState.enemy3.healthMax?.22:0)/6},{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy3.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:1,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 15 damage\nAnd 1 Poison",probability:.11+(gameState.enemy3.health>=gameState.enemy3.healthMax?.22:0)/6},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,text:"Heals 15 HP\nGains 1 armor",probability:gameState.enemy3.health>=gameState.enemy3.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy3.health>=gameState.enemy3.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 strenght",probability:.13+(gameState.enemy3.health>=gameState.enemy3.healthMax?.22:0)/6},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:4,text:"Gains 4 armor",probability:.18+(gameState.enemy3.health>=gameState.enemy3.healthMax?.22:0)/6},{key:"Intends to\nPoison you",damage:0,fire:0,poison:3,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 3 poison",probability:.19+(gameState.enemy3.health>=gameState.enemy3.healthMax?.22:0)/6}]}function checkGameOver(){return gameState.player.alive?!gameState.enemies.some((enemy=>enemy.alive))&&(gameState.playersTurn=!1,function(){gameState.score.numberOfTurns+=gameState.turn,gameState.score.levelsCompleted+=1,gameState.music.stop(),self.updateManaBar(gameState.player),addHandtoDeck(),self.time.delayedCall(600,(()=>{gameState.attackSound.isPlaying&&gameState.attackSound.stop(),gameState.victorySound.play({volume:.9,rate:1}),self.clearBoard()})),gameState.actionText&&(gameState.actionText.destroy(),console.log("gameState.actionText still existed at initiateVictory and got destroyed"));const victoryTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},victoryText=self.add.text(550,300,"Victory!",victoryTextConfig).setOrigin(.5);self.time.delayedCall(2e3,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),victoryText.destroy(),function(){self.shuffleDeck(gameState.bonusCards);const gameOverTextConfig={fontSize:"40px",fill:"#000000"},rewardTextConfig={fontSize:"25px",fill:"#000000"};gameState.gameOverText=self.add.text(550,180,"Choose a reward",gameOverTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsText=self.add.text(550,400,"Add 1 card\nto your deck",rewardTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsButton=self.add.image(550,400,"rectangularButton"),gameState.rewardAddCardsButton.setScale(1.2).setInteractive().setOrigin(.5).setDepth(102),gameState.rewardAddCardsButton.on("pointerover",(function(){this.setTexture("rectangularButtonHovered")})),gameState.rewardAddCardsButton.on("pointerout",(function(){this.setTexture("rectangularButton")})),gameState.rewardAddCardsButton.on("pointerup",(function(){gameState.rewardAddCardsText.destroy(),gameState.gameOverText.destroy(),gameState.rewardAddCardsButton.destroy(),function(){console.log("rewardAddCard called"),gameState.gameOverText.destroy();const x=320,y=300,spacing=220;let bonusCards=gameState.bonusCards.slice(0,3);console.log(`bonusCards: ${bonusCards.key}`),bonusCards.forEach(((bonusCard,index)=>{bonusCard.sprite=self.add.sprite(x+index*spacing,y,bonusCard.key),bonusCard.sprite.setScale(.45).setInteractive().setDepth(102),console.log(`bonusCardsprite added for: ${bonusCard.key}`),bonusCard.sprite.on("pointerover",(()=>{gameState.cardsDealtSound.play({volume:.6}),self.cardTweens(bonusCard.sprite,.58,200)}),self),bonusCard.sprite.on("pointerout",(()=>{self.cardTweens(bonusCard.sprite,.45,400)}),self),bonusCard.sprite.on("pointerup",(()=>{let nextlevelstarting=!1;gameState.deck.push(bonusCard),"permanent"===bonusCard.type&&gameState.bonusCards.splice(gameState.bonusCards.indexOf(bonusCard),1),bonusCards.forEach((card=>{card.sprite.removeInteractive(),card!==bonusCard&&fadeOutGameObject(card.sprite,200)})),self.tweens.add({targets:bonusCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),self.add.text(550,180,"Gained 1 card",{fontSize:"40px",fill:"#000000"}).setOrigin(.5),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()}))}()}))}(),!0):(gameState.playersTurn=!1,function(){gameState.player.health=0,self.updateManaBar(gameState.player),addHandtoDeck(),gameState.music.stop(),gameState.endOfTurnButton.destroy(),gameState.actionText&&fadeOutGameObject(gameState.actionText,200);gameState.score.numberOfTurns+=gameState.turn;const gameOverTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"};gameState.gameOverText=self.add.text(550,300," Defeat!",gameOverTextConfig).setOrigin(.5),gameState.gameOverText.setInteractive();let scenetransitionstarted=!1;self.time.delayedCall(400,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),scenetransitionstarted||(gameState.gameOverText.on("pointerup",(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})),self.time.delayedCall(2500,(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})))}))}(),!0)}function startNextLevel(){self.cameras.main.fadeOut(1e3),self.time.delayedCall(1e3,(()=>{self.scene.start("Level2Fight3")}))}function activatePermanentFromToken(card){if("foreverTrue"===card.key)gameState.foreverTrue=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteForeverTrue(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelSpirit"===card.key)gameState.rebelSpirit=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelSpirit(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelHeart"===card.key)gameState.rebelHeart=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelHeart(card):self.cameras.main.shake(70,.002,!1)}));else if("bushido"===card.key)gameState.bushido=!0,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteBushido(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicAvenger"===card.key)gameState.toxicAvenger=!0,gameState.enemies.forEach((enemy=>updateStats(enemy))),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicAvenger(card):self.cameras.main.shake(70,.002,!1)}));else if("kirisuteGomen"===card.key)gameState.player.strengthMax+=5,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn&&gameState.enemies.some((enemy=>enemy.health<30))?depleteKirisuteGomen(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicFrets"===card.key)gameState.toxicFrets=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicFrets(card):self.cameras.main.shake(70,.002,!1)}));else if("ashenEncore"===card.key)gameState.ashenEncore=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteAshenEncore(card):self.cameras.main.shake(70,.002,!1)}));else if("edoEruption"===card.key)gameState.edoEruption=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteEdoEruption(card):self.cameras.main.shake(70,.002,!1)}));else if("steelToe"===card.key)gameState.steelToe=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteSteelToe(card):self.cameras.main.shake(70,.002,!1)}));else if("kamishimoUberAlles"===card.key){const tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;gameState.kamishimoUberAlles+=1,updateStrengthAndArmor(gameState.player),tokenSprite.on("pointerup",(()=>{gameState.playersTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.kamishimoUberAlles-=1,updateStrengthAndArmor(gameState.player)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}else if("hollidayInKamakura"===card.key){let tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;const turnplayed=gameState.turn,fightplayed=gameState.score.levelsCompleted;tokenSprite.on("pointerup",(()=>{const depletedDifferentTurn=turnplayed!=gameState.turn||fightplayed!=gameState.score.levelsCompleted;console.log(`depletedDifferentTurn: ${depletedDifferentTurn}\nturnplayed: ${turnplayed}\ngameState.turn: ${gameState.turn}\nfightplayed: ${fightplayed}\ngameState.score.levelsCompleted: ${gameState.score.levelsCompleted}\ngameState.playersTurn: ${gameState.playersTurn}`),gameState.playersTurn&&depletedDifferentTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.player.manaMax+=1,gameState.player.mana+=1,self.updateManaBar(gameState.player),drawNewCards(1)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}}function displayTokenCard(card){card.tokenSprite.on("pointerover",(function(){gameState.cardsDealtSound.play({volume:1.5}),card.permanentCardSprite=self.add.sprite(550,300,card.key).setScale(.55).setDepth(26)})),card.tokenSprite.on("pointerout",(function(){card.permanentCardSprite.destroy()}))}function depleteForeverTrue(card){gameState.foreverTrue=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),drawNewCards(8)}function depleteRebelSpirit(card){gameState.rebelSpirit=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.mana+=3,gameState.player.manaMax+=3,self.updateManaBar(gameState.player)}function depleteRebelHeart(card){gameState.rebelHeart=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+12),self.updateHealthBar(gameState.player)}function depleteBushido(card){gameState.bushido=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.strengthBase+=6,updateStrengthAndArmor(gameState.player)}function depleteToxicAvenger(card){gameState.toxicAvenger=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison+=4,updateStats(enemy)}))}function depleteKirisuteGomen(card){if(gameState.enemies.some((enemy=>enemy.health<30))){gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let functionActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){enemy.health<30&&functionActive?(enemy.health=0,gameState.attackSound.play({volume:1}),self.cameras.main.shake(120,.025,!1),card.tokenSlot&&(card.tokenSlot.available=!0,gameState.player.strengthMax-=5),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),removeIfDead(enemy),checkGameOver(),updateStrengthAndArmor(gameState.player)):(self.cameras.main.shake(70,.002,!1),functionActive=!1),gameState.targetingCursor.setVisible(!1)}))}))}else self.cameras.main.shake(70,.002,!1),card.slot.available=!1,gameState.currentCards.some((card=>"kirisuteGomen"===card.key))||(gameState.currentCards.push(card),gameState.player.mana+=1,self.updateManaBar(gameState.player))}function depleteToxicFrets(card){gameState.toxicFrets=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison>0&&(enemy.health-=2*enemy.poison,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver())}))}function depleteAshenEncore(card){console.log("DEBUG: depleteAshenEncore started"),gameState.ashenEncore=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card));const ashenEncoreDepleteText=self.add.text(550,350,"Deals 12 firedamage\n to all enemies",{fontSize:"32px",fill:"#ff0000"}).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDepleteText.destroy()})),gameState.enemies.forEach((enemy=>{enemy.health-=12,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver()}))}function depleteEdoEruption(card){gameState.edoEruption=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card))}function depleteSteelToe(card){gameState.steelToe=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let depleteSteelToeActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){depleteSteelToeActive&&(enemy.armor-=7,updateStats(enemy),gameState.attackSound.play({volume:.6}),self.cameras.main.shake(100,.012,!1),gameState.targetingCursor.setVisible(!1),depleteSteelToeActive=!1)}))}))}function updateStrengthAndArmor(character){let strengthBushido=0;gameState.endOfTurnButtonPressed?(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard+character.armorStance),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+strengthBushido)):(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+character.strengthCard+strengthBushido)),gameState.kamishimoUberAlles>0&&gameState.player.stancePoints<0&&(character.strength=Math.min(character.strengthMax,character.strength-gameState.player.stancePoints*gameState.kamishimoUberAlles)),updateStats(character)}function updateStats(character){character!=gameState.player&&(character.strength=character.strengthBase+character.strengthTurn,gameState.toxicAvenger&&character.poison>0&&(character.strength-=4)),character.armorText.setText(`${character.armor}/${character.armorMax}`),character.strengthText.setText(`${character.strength}/${character.strengthMax}`)}function removeIfDead(character){if(character.health<=0){if(character.health=0,character.sprite.removeInteractive(),character.alive=!1,character.turnComplete=!0,character!=gameState.player){const indexEnemies=gameState.enemies.indexOf(character),indexCharacters=gameState.characters.indexOf(character);-1!==indexEnemies&&gameState.enemies.splice(indexEnemies,1),-1!==indexCharacters&&gameState.characters.splice(indexCharacters,1)}[character.sprite,character.healthBarBackground,character.healthBar,character.healthBarText,character.manaBarBackground,character.manaBar,character.manaBarText,character.strengthAndArmorImage,character.strengthText,character.armorText,character.descriptionBackground,character.descriptionText,character.intentionText,character.intentionBackground].forEach((object=>{fadeOutGameObject(object,500)}))}}function addHandtoDeck(){for(;gameState.currentCards.length>0;){let card=gameState.currentCards.pop();card.slot.available||(card.slot.available=!0),gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),fadeOutGameObject(card.sprite,200)}}function drawNewCards(numCards){const numCardsLimit=Math.min(gameState.deck.length,8),numOfFreeSlots=gameState.slots.filter((slot=>slot.available)).length;numCards=numOfFreeSlots<numCards?numOfFreeSlots:numCards;for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{if(gameState.currentCards.length<numCardsLimit){0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));let card=gameState.drawPile.pop();card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),console.log(`card added: ${card.key}`),card.isBeingPlayed=!1,gameState.currentCards.push(card);let availableSlots=gameState.slots.filter((slot=>slot.available)),slot=availableSlots[Math.floor(availableSlots.length/2)];if(slot){card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot;let cardDepth=10+slot.index;card.sprite.setDepth(cardDepth),self.animateCard(card,cardDepth)}gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),gameState.ashenEncore&&gameState.enemies.forEach((enemy=>{if(enemy.health-=4,self.updateHealthBar(enemy),removeIfDead(enemy),"undefined"==typeof ashenEncoreText||!ashenEncoreText){const ashenEncoreConfig={fontSize:"32px",fill:"#ff0000"},ashenEncoreKey="Deals 4 fire damage to all enemies",ashenEncoreDrawText=self.add.text(550,350,ashenEncoreKey,ashenEncoreConfig).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDrawText.destroy()}))}})),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}else self.cameras.main.shake(70,.002,!1)}))}function getValueOrInvoke(cardProperty){return"function"==typeof cardProperty?cardProperty():cardProperty}function fadeOutGameObject(gameObject,duration){gameObject&&self.tweens.add({targets:gameObject,alpha:0,ease:"Power1",duration:duration,onComplete:()=>{gameObject.destroy()}},self)}gameState.slots=[{available:!0,x:230,y:640,index:0,angle:-12},{available:!0,x:320,y:610,index:1,angle:-8},{available:!0,x:410,y:590,index:2,angle:-4},{available:!0,x:500,y:580,index:3,angle:0},{available:!0,x:590,y:590,index:4,angle:4},{available:!0,x:680,y:610,index:5,angle:8},{available:!0,x:770,y:640,index:6,angle:12},{available:!0,x:860,y:670,index:7,angle:16}],gameState.endOfTurnButton.on("pointerup",(function(){gameState.currentEnemyIndex=0,gameState.targetingCursor.visible||!gameState.playersTurn?self.cameras.main.shake(70,.002,!1):(this.setTexture("rectangularButtonPressed"),this.removeInteractive(),gameState.buttonPressedSound.play(),gameState.endOfTurnButtonPressed=!0,addHandtoDeck(),updateStrengthAndArmor(gameState.player),updateEnemyActions(),gameState.rebelHeart&&(gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+Math.abs(gameState.player.stancePoints)),self.updateHealthBar(gameState.player)),gameState.enemies.forEach((enemy=>{enemy.turnComplete=!enemy.alive,fadeOutGameObject(enemy.intentionText,200),fadeOutGameObject(enemy.intentionBackground,200)})),0!=gameState.player.mana&&(gameState.player.mana=0,self.updateManaBar(gameState.player)),self.time.delayedCall(100,(()=>{gameState.actionText&&gameState.actionText.destroy(),initiateEnemiesTurn()})))})),"admin"===gameState.playerName&&(gameState.getManaButton=self.add.sprite(550,200,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.getManaText=self.add.text(550,200,"Get Mana",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.getManaButton.on("pointerup",(()=>{gameState.playersTurn&&(gameState.player.mana=gameState.player.manaMax,self.updateManaBar(gameState.player),console.log("mana gained"))})),gameState.drawCardButton=self.add.sprite(550,300,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.drawCardText=self.add.text(550,300,"Draw Card",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.drawCardButton.on("pointerup",(()=>{gameState.playersTurn&&(drawNewCards(1),console.log("card drawn"))})),gameState.killEnemyButton=self.add.sprite(550,400,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.killEnemyText=self.add.text(550,400,"Kill Enemy",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.killEnemyButton.on("pointerup",(()=>{if(gameState.enemies.some((enemy=>enemy.health>0&&gameState.playersTurn))){const enemy=gameState.enemies.find((enemy=>enemy.health>0));enemy.health=0,removeIfDead(enemy),checkGameOver(),console.log(`${enemy.name} killed`)}})))}update(){gameState.targetingCursor.visible&&(gameState.targetingCursor.x=this.input.mousePointer.x,gameState.targetingCursor.y=this.input.mousePointer.y)}}class Level2Fight3 extends BaseScene{self;constructor(){super("Level2Fight3")}preload(){this.load.image("bakgrunnForest3","assets/images/bakgrunnForest3.jpg"),this.load.image("tree3","assets/images/sprites/tree3.png")}create(){const self=this;function startPlayerTurn(){let numCards=gameState.player.numCardsBase+gameState.player.numCardsStance;gameState.turn+=1,gameState.endOfTurnButtonPressed=!1,gameState.yourTurnText=self.add.text(550,300,"Your turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),gameState.player.poisonText=self.add.text(570,350,"",{fontSize:"25px",fill:"#ff0000"}).setOrigin(.5),console.log(`player's turn number ${gameState.turn} has started`),gameState.player.armorCard=0,gameState.player.strengthCard=0;const manaMax=gameState.player.manaBase+gameState.player.manaStance;gameState.player.manaMax=gameState.rebelSpirit&&gameState.turn%3==0?manaMax+1:manaMax,gameState.player.mana=gameState.player.manaMax,gameState.foreverTrue&&gameState.player.stancePoints>0?(gameState.player.manaMax+=1,gameState.player.mana+=1):gameState.player.stancePoints=0,self.updateStanceBar(gameState.player),self.updateManaBar(gameState.player),self.updateHealthBar(gameState.player),self.updatePoison(gameState.player),removeIfDead(gameState.player),updateStrengthAndArmor(gameState.player),self.time.delayedCall(2200,(()=>{gameState.player.poisonText.destroy(),fadeOutGameObject(gameState.yourTurnText,200),function(numCards){gameState.endOfTurnButton.setTexture("rectangularButton"),gameState.endOfTurnButton.setInteractive();const startSlotIndex=Math.floor((gameState.slots.length-numCards)/2);for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));const card=gameState.drawPile.pop(),cardDepth=10+i+startSlotIndex;card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),card.isBeingPlayed=!1,gameState.currentCards.push(card),card.sprite.setDepth(cardDepth);const slot=gameState.slots[startSlotIndex+i];slot&&(card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot),gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),self.animateCard(card,cardDepth),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}));gameState.playersTurn=!0}(numCards),gameState.enemies.forEach((enemy=>{updateEnemyActions(),function(enemy){!function(enemy){const totalProbability=enemy.actions.reduce(((sum,action)=>sum+action.probability),0);if(1!==totalProbability){const scalingFactor=1/totalProbability;for(let action of enemy.actions)action.probability*=scalingFactor}}(enemy);let cumProb=0;for(let i=0;i<enemy.actions.length;i++)cumProb+=enemy.actions[i].probability,enemy.actions[i].cumulativeProbability=cumProb;const rand=Math.random();enemy.chosenAction=enemy.actions.find((action=>rand<action.cumulativeProbability))}(enemy),function(enemy){const actionKey="function"==typeof enemy.chosenAction.key?enemy.chosenAction.key():enemy.chosenAction.key,textConfig={fontSize:"13px",fill:"#000000"};enemy.intentionText=self.add.text(enemy.x+10,enemy.y-enemy.height/2-40,`${actionKey}`,textConfig),enemy.intentionText.setOrigin(.5,1).setDepth(11);const originalSpriteWidth=self.textures.get("listbox1").getSourceImage().width,scale=enemy.intentionText.width/originalSpriteWidth;enemy.intentionBackground=self.add.sprite(enemy.x+10,enemy.y-enemy.height/2-33,"listbox1").setScale(1.05*scale,1),enemy.intentionBackground.setInteractive().setOrigin(.5,1).setAlpha(.85).setDepth(10)}(enemy)}))}))}this.baseCreate("bakgrunnForest3",.7),this.resetPlayer(gameState.player,.35),this.addButtons(),function(){gameState.drawPileImage=self.add.image(120,600,"deck"),gameState.drawPileImage.setScale(.13).setOrigin(.5,.5).setInteractive();gameState.drawPileText=self.add.text(120,600,gameState.drawPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.drawPileText.setDepth(100).setOrigin(.5,.5),gameState.drawPileImage.on("pointerover",(function(){if(gameState.drawPile.length>0){const cardsPerRow=gameState.drawPile.length<12?4:6,cardSpacing=105,startX=gameState.drawPile.length<12?400:250,startY=150;gameState.drawPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.drawPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]}))}(),gameState.discardPileText=self.add.text(980,600,gameState.discardPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.discardPileText.setDepth(100).setOrigin(.5,.5),gameState.discardPileImage=self.add.image(980,600,"deck"),gameState.discardPileImage.setScale(.13).setOrigin(.5,.5).setInteractive().setTint(16711680),gameState.discardPileImage.on("pointerover",(function(){if(gameState.discardPile.length>0){const cardsPerRow=gameState.discardPile.length<12?4:6,cardSpacing=105,startX=gameState.discardPile.length<12?400:250,startY=150;gameState.discardPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.discardPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]})),gameState.kamishimoUberAlles=0,gameState.kirisuteGomen=!1,gameState.toxicFrets=!1,gameState.ashenEncore=!1,gameState.edoEruption=!1,gameState.steelToe=!1,gameState.currentCards=[],gameState.cardImages=[],gameState.enemy1=Object.create(gameState.enemy),gameState.enemy1.name="Lord of the Trees\nLose Armor when attacked\nTakes +50% damage from Fire",gameState.enemy1.sprite=this.add.sprite(750,300,"tree3").setScale(.36).setFlipX(!1).setInteractive(),gameState.enemy1.health=110,gameState.enemy1.healthMax=110,gameState.enemy1.armor=15,gameState.enemies=[gameState.enemy1],gameState.characters=[...gameState.enemies,gameState.player],gameState.characters.forEach((character=>{character.height=character.sprite.displayHeight,character.width=character.sprite.displayWidth,character.x=character.sprite.x,character.y=character.sprite.y,this.addHealthBar(character,character.healthBarColor),this.addStatsDisplay(character),this.describeCharacter(character,character.sprite)})),this.addManaBar(gameState.player),this.addStanceBar(gameState.player,"#a9a9a9"),gameState.permanents.forEach((permanent=>{const card=permanent.card,slot=permanent.slot;"kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?slot.available=!0:(card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,console.log(`Recreated permanent: ${card.key}\nfor slot ${slot.index}`),displayTokenCard(card),activatePermanentFromToken(card))})),function(){gameState.turn=0,gameState.musicTheme.stop(),self.shuffleDeck(gameState.drawPile);const{level:level,fight:fight}=self.extractLevelFightFromName(self.scene.key);gameState.startText=self.add.text(550,300,`Level ${level}\nFight ${fight}!`,{fontSize:"60px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setDepth(200).setOrigin(.5),self.time.delayedCall(350,(()=>{gameState.music.play({loop:!0,volume:.35})})),self.time.delayedCall(3e3,(()=>{fadeOutGameObject(gameState.startText,200),self.time.delayedCall(300,startPlayerTurn())}))}();function activateCard(card){if(gameState.costPlayed="function"==typeof card.cost?card.cost():card.cost,gameState.typePlayed="function"==typeof card.type?card.type():card.type,gameState.player.mana>=gameState.costPlayed&&!1===gameState.playingCard)if(gameState.player.mana-=gameState.costPlayed,self.updateManaBar(gameState.player),console.log(`activated card: ${card.key}\nCost: ${gameState.costPlayed}`),gameState.player.freedomBeforeCardPlayed="Freedom"===gameState.player.stance,card.isBeingPlayed=!0,gameState.currentCards=gameState.currentCards.filter((c=>c!==card)),card.slot&&(card.slot.available=!0),"targetSelected"===gameState.typePlayed)!function(card,handOfCards){gameState.targetingCursor.setVisible(!0),gameState.thisTurn=gameState.turn;for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.removeInteractive();for(let enemy of gameState.enemies)enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){card.isBeingPlayed&&gameState.playersTurn&&gameState.thisTurn===gameState.turn&&(card.isBeingPlayed=!1,gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,enemy));for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.setInteractive()}))}(card,gameState.currentCards);else if("targetAll"===gameState.typePlayed){gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length);const enemiesCopy=[...gameState.enemies];gameState.enemiesLength=enemiesCopy.length,enemiesCopy.forEach(((enemy,index)=>{const isLastEnemy=index===enemiesCopy.length-1;playCard(card,enemy,isLastEnemy)}))}else"permanent"===gameState.typePlayed?function(card){const slot=gameState.permanentSlots.find((slot=>slot.available));slot?("kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length)):gameState.deck=gameState.deck.filter((c=>c!==card)),card.slot.available=!0,card.sprite.destroy(),card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,gameState.permanents.push({card:card,slot:slot,tokenSprite:card.tokenSprite}),displayTokenCard(card),activatePermanentFromToken(card)):function(card){switch(self.cameras.main.shake(70,.002,!1),card.isBeingPlayed=!1,console.log(`No available slot for permanent card ${card.key}`),card.key){case"foreverTrue":depleteForeverTrue(card);break;case"rebelSpirit":depleteRebelSpirit(card);break;case"rebelHeart":depleteRebelHeart(card);break;case"bushido":depleteBushido(card);break;case"toxicAvenger":depleteToxicAvenger(card);break;case"kirisuteGomen":depleteKirisuteGomen(card);case"toxicFrets":depleteToxicFrets(card);break;case"ashenEncore":depleteAshenEncore(card);break;case"edoEruption":depleteEdoEruption(card);break;case"steelToe":depleteSteelToe(card);break;case"kamishimoUberAlles":case"hollidayInKamakura":gameState.currentCards.push(card),card.slot.available=!1}}(card)}(card):(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,gameState.player));else self.cameras.main.shake(70,.002,!1)}function playCard(card,target,isLastEnemy=!1){gameState.playingCard=!0,fadeOutGameObject(card.sprite,200),fadeOutGameObject(gameState.actionText,50),gameState.targetingCursor.setVisible(!1);const{damagePlayed:damagePlayed,firePlayed:firePlayed,stancePointsPlayed:stancePointsPlayed,poisonPlayed:poisonPlayed,healPlayed:healPlayed,strengthPlayed:strengthPlayed,armorPlayed:armorPlayed,reduceTargetArmorPlayed:reduceTargetArmorPlayed,reduceTargetStrengthPlayed:reduceTargetStrengthPlayed,drawCardPlayed:drawCardPlayed}=function(card,target,isLastEnemy=!1){const moshpitMassacreCondition="moshpitMassacre"===card.key&&gameState.player.stancePoints>0&&target.poison>0,scorchedSoulCondition="scorchedSoul"===card.key&&target.poison>0,bladesBlightCondition="bladesBlight"===card.key&&target.poison>0,roninsRotCondition="roninsRot"===card.key&&target.poison>0,kabutuEdoCondition="kabutu"===card.key&&gameState.edoEruption&&gameState.player.stancePoints>0,steelToeCondition="combatBoots"===card.key&&gameState.steelToe,knuckleFistEdoCondition="knuckleFist"===card.key&&gameState.edoEruption&&gameState.player.stancePoints<0,steelToeOutcome=gameState.player.stancePoints>0?2*(1+gameState.player.stancePoints):2;return{damagePlayed:moshpitMassacreCondition?11:getValueOrInvoke(card.damage),firePlayed:1.5*(kabutuEdoCondition?2*gameState.player.stancePoints:scorchedSoulCondition?12:getValueOrInvoke(card.fire)),stancePointsPlayed:kabutuEdoCondition&&isLastEnemy?-1:getValueOrInvoke(card.stancePoints),poisonPlayed:bladesBlightCondition?target.poison:getValueOrInvoke(card.poison),healPlayed:getValueOrInvoke(card.heal),strengthPlayed:getValueOrInvoke(card.strength),armorPlayed:knuckleFistEdoCondition?-gameState.player.stancePoints:getValueOrInvoke(card.armor),reduceTargetArmorPlayed:steelToeCondition?steelToeOutcome:getValueOrInvoke(card.reduceTargetArmor),reduceTargetStrengthPlayed:roninsRotCondition?target.poison:getValueOrInvoke(card.reduceTargetStrength),drawCardPlayed:getValueOrInvoke(card.drawCard)}}(card,target,isLastEnemy),damageModifyer=(1+.1*gameState.player.strength)*(1-target.armor/20),damageTotal=Math.round(Math.max(0,firePlayed+damagePlayed*damageModifyer));target!=gameState.player&&(gameState.score.damageDealt+=damageTotal,console.log(`${damagePlayed} Physical Damage and ${firePlayed} Fire Damage was dealt to ${target.name}`),target.strengthTurn-=reduceTargetStrengthPlayed,target.armor-=reduceTargetArmorPlayed,target.poison+=poisonPlayed,target.health-=damageTotal,target.armor>0&&damageTotal>0&&(target.armor-=1)),"seppuku"===card.key||"boneShredder"===card.key?gameState.player.strengthBase+=strengthPlayed:gameState.player.strengthCard+=strengthPlayed,"libertySpikes"===card.key&&gameState.player.stancePoints>0&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),healPlayed&&(gameState.player.health=Math.min(gameState.player.health+healPlayed,gameState.player.healthMax),self.updateHealthBar(gameState.player)),gameState.player.armorCard+=armorPlayed,gameState.player.poison=Math.max(0,gameState.player.poison-card.poisonRemove),function(damageTotal,poisonPlayed,strengthPlayed,armorPlayed){const actionTextConfig={fontSize:"32px",fill:"#ff0000"};if("targetSelected"===gameState.typePlayed||"targetAll"===gameState.typePlayed){self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8});const actionTextTarget=`${damageTotal>0?`Deals ${damageTotal} damage`:""}\n\n${poisonPlayed>0?`Deals ${poisonPlayed} Poison`:""}`;gameState.actionText=self.add.text(550,300,actionTextTarget,actionTextConfig).setOrigin(.5),self.attackTweens(gameState.player,60)}else strengthPlayed>0?(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${strengthPlayed} Strength`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player)):armorPlayed>0&&(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${armorPlayed} Armor`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player))}(damageTotal,poisonPlayed,strengthPlayed,armorPlayed),gameState.player.stancePoints+stancePointsPlayed>=-3&&gameState.player.stancePoints+stancePointsPlayed<=3&&(gameState.player.stancePoints+=stancePointsPlayed,self.updateStanceBar(gameState.player)),gameState.player.freedomAfterCardPlayed="Freedom"===gameState.player.stance,!gameState.player.freedomBeforeCardPlayed&&gameState.player.freedomAfterCardPlayed&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),updateStats(target),self.updateHealthBar(target),updateStrengthAndArmor(gameState.player),removeIfDead(target),checkGameOver(),updateEnemyActions(),drawNewCards(drawCardPlayed),gameState.enemies.forEach((enemy=>{self.updateEnemyIntention(enemy)})),self.time.delayedCall(260,(()=>{gameState.playingCard=!1})),self.time.delayedCall(1500,(()=>{gameState.actionText&&gameState.actionText.destroy()}))}function initiateEnemiesTurn(){0!==gameState.enemies.length&&(gameState.enemies[gameState.currentEnemyIndex].alive?function(enemy){gameState.playersTurn&&(gameState.playersTurn=!1,enemy.turnText=self.add.text(550,300,"Enemy turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),self.time.delayedCall(1800,(()=>{fadeOutGameObject(enemy.turnText,200)})));enemy.turnComplete=!1,function(enemy){enemy.poisonText=self.add.text(570,350,"",{fontSize:"30px",fill:"#ff0000"}).setOrigin(.5),self.updatePoison(enemy),gameState.toxicAvenger&&enemy.poison>0&&updateStats(enemy);const delaytime=""!==enemy.poisonText._text||enemy.turnText?1800:800;self.time.delayedCall(delaytime,(()=>{enemy.poisonText.destroy();const chosenAction=enemy.chosenAction,actionTextConfig={fontSize:"32px",fill:"#ff0000"};if(gameState.player.poison+=chosenAction.poison,enemy.health=Math.min(enemy.health+chosenAction.heal,enemy.healthMax),enemy.strengthBase=Math.min(enemy.strengthBase+chosenAction.strength,enemy.strengthMax),updateStats(enemy),enemy.armor=Math.min(enemy.armor+chosenAction.armor,enemy.armorMax),chosenAction.damage>0||chosenAction.fire>0){const damageModifyer=(1+.1*enemy.strength)*(1-gameState.player.armor/20);if(self.cameras.main.shake(120,.005,!1),gameState.attackSound.play({volume:.8}),console.log(`enemy.damageTotal: ${enemy.damageTotal}`),enemy.damageTotal=Math.round(Math.max(0,chosenAction.fire+chosenAction.damage*damageModifyer)),gameState.player.health-=enemy.damageTotal,gameState.score.damageTaken+=enemy.damageTotal,enemy===gameState.enemy1||enemy===gameState.enemy2){const stealText=chosenAction.armor>0?`Steals ${chosenAction.armor} Armor`:`Steals ${chosenAction.strength} Strength`;gameState.actionText=self.add.text(550,300,`Deals ${enemy.damageTotal} damage\n${stealText}`,actionTextConfig).setOrigin(.5)}else gameState.actionText=self.add.text(550,300,`Deals ${enemy.damageTotal} damage`,actionTextConfig).setOrigin(.5);self.tweens.add({targets:enemy.sprite,x:enemy.sprite.x-60,duration:120,ease:"Cubic",yoyo:!0})}else chosenAction.heal>0?(gameState.healSound.play({volume:.5}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy)):(chosenAction.strength>0||chosenAction.armor>0||chosenAction.poison>0)&&(gameState.powerUpSound.play({volume:.2}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy));enemy.strengthTurn=0,function(enemy){[gameState.player,enemy].forEach((character=>{self.updateHealthBar(character),removeIfDead(character),updateStats(character)})),self.time.delayedCall(1500,(()=>{fadeOutGameObject(gameState.actionText,200),enemy.turnComplete=!0,checkGameOver()||!gameState.enemies[gameState.currentEnemyIndex].turnComplete&&gameState.enemies[gameState.currentEnemyIndex].alive||(gameState.currentEnemyIndex++,gameState.currentEnemyIndex<gameState.enemies.length?initiateEnemiesTurn():(gameState.currentEnemyIndex=0,startPlayerTurn()))}))}(enemy)}))}(enemy)}(gameState.enemies[gameState.currentEnemyIndex]):(gameState.currentEnemyIndex++,initiateEnemiesTurn()))}function updateEnemyActions(){1===gameState.turn?gameState.enemy1.actions=[{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:4,armor:0,text:"Gains 4 Strength",probability:1}]:2===gameState.turn?gameState.enemy1.actions=[{key:"Intends to\nRest",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 Strength",probability:1}]:3===gameState.turn?gameState.enemy1.actions=[{key:()=>`Intends to\nDeal ${Math.round(20*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 15 damage",probability:1}]:4===gameState.turn?gameState.enemy1.actions=[{key:"Intends to\nRest",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Rests",probability:1}]:gameState.enemy1.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 fire damage",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(10*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:10,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 10 damage",probability:.235+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 15 damage",probability:.17+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,text:"Heals 15 HP\nGains 1 armor",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 strenght",probability:.125+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:4,text:"Gains 4 armor",probability:.15+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 poison",probability:0}]}function checkGameOver(){return gameState.player.alive?!gameState.enemies.some((enemy=>enemy.alive))&&(gameState.playersTurn=!1,function(){gameState.score.numberOfTurns+=gameState.turn,gameState.score.levelsCompleted+=1,gameState.music.stop(),self.updateManaBar(gameState.player),addHandtoDeck(),self.time.delayedCall(600,(()=>{gameState.attackSound.isPlaying&&gameState.attackSound.stop(),gameState.victorySound.play({volume:.9,rate:1}),self.clearBoard()})),gameState.actionText&&(gameState.actionText.destroy(),console.log("gameState.actionText still existed at initiateVictory and got destroyed"));const victoryTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},victoryText=self.add.text(550,300,"Victory!",victoryTextConfig).setOrigin(.5);self.time.delayedCall(2e3,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),victoryText.destroy(),function(){self.shuffleDeck(gameState.bonusCards);const gameOverTextConfig={fontSize:"40px",fill:"#000000"},rewardTextConfig={fontSize:"25px",fill:"#000000"};gameState.gameOverText=self.add.text(550,180,"Choose a reward",gameOverTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsButton=self.add.image(550,350,"rectangularButton"),gameState.rewardAddCardsButton.setScale(1.2).setInteractive().setOrigin(.5).setDepth(102),gameState.rewardAddCardsText=self.add.text(550,350,"Add 1 card\nto your deck",rewardTextConfig).setOrigin(.5).setDepth(103),gameState.rewardRemoveCardButton=self.add.image(550,500,"rectangularButton"),gameState.rewardRemoveCardButton.setScale(1.2).setInteractive().setOrigin(.5).setDepth(102),gameState.rewardRemoveCardText=self.add.text(550,500,"Remove 1 card\nfrom your deck",rewardTextConfig).setOrigin(.5).setDepth(103),gameState.rewardButtons=[gameState.rewardAddCardsButton,gameState.rewardRemoveCardButton],gameState.rewardTexts=[gameState.rewardAddCardsText,gameState.rewardRemoveCardText,gameState.gameOverText],gameState.rewardButtons.forEach((button=>{button.on("pointerover",(function(){this.setTexture("rectangularButtonHovered")})),button.on("pointerout",(function(){this.setTexture("rectangularButton")}))})),gameState.rewardAddCardsButton.on("pointerup",(function(){gameState.rewardTexts.forEach((text=>text.destroy())),gameState.rewardButtons.forEach((button=>button.destroy())),function(){console.log("rewardAddCard called"),gameState.gameOverText.destroy();const x=320,y=300,spacing=220;let bonusCards=gameState.bonusCards.slice(0,3);console.log(`bonusCards: ${bonusCards.key}`),bonusCards.forEach(((bonusCard,index)=>{bonusCard.sprite=self.add.sprite(x+index*spacing,y,bonusCard.key),bonusCard.sprite.setScale(.45).setInteractive().setDepth(102),console.log(`bonusCardsprite added for: ${bonusCard.key}`),bonusCard.sprite.on("pointerover",(()=>{gameState.cardsDealtSound.play({volume:.6}),self.cardTweens(bonusCard.sprite,.58,200)}),self),bonusCard.sprite.on("pointerout",(()=>{self.cardTweens(bonusCard.sprite,.45,400)}),self),bonusCard.sprite.on("pointerup",(()=>{let nextlevelstarting=!1;gameState.deck.push(bonusCard),"permanent"===bonusCard.type&&gameState.bonusCards.splice(gameState.bonusCards.indexOf(bonusCard),1),bonusCards.forEach((card=>{card.sprite.removeInteractive(),card!==bonusCard&&fadeOutGameObject(card.sprite,200)})),self.tweens.add({targets:bonusCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),self.add.text(550,180,"Gained 1 card",{fontSize:"40px",fill:"#000000"}).setOrigin(.5),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()})),gameState.rewardRemoveCardButton.on("pointerup",(function(){gameState.rewardTexts.forEach((text=>text.destroy())),gameState.rewardButtons.forEach((button=>button.destroy())),gameState.rewardAddCardsButton.destroy(),function(){console.log("button pressed"),gameState.rewardButtons.forEach((button=>button.destroy())),gameState.rewardTexts.forEach((text=>text.destroy()));const cardsPerRow=4,x=300,y=250,spacing=120,deck=gameState.deck;deck.forEach((card=>console.log(card.key))),deck.forEach(((deckCard,index)=>{let xPos=x+index%cardsPerRow*spacing,yPos=y+Math.floor(index/cardsPerRow)*spacing,cardDepth=110+index;deckCard.sprite=self.add.sprite(xPos,yPos,deckCard.key).setScale(.27).setInteractive().setDepth(cardDepth),deckCard.sprite.on("pointerover",(function(){gameState.cardsDealtSound.play({volume:.6}),self.cardTweens(deckCard.sprite,.4,200),deckCard.sprite.setDepth(200)}),this),deckCard.sprite.on("pointerout",(function(){self.cardTweens(deckCard.sprite,.27,400),deckCard.sprite.setDepth(cardDepth)}),this),deckCard.sprite.on("pointerup",(function(){let nextlevelstarting=!1;console.log(`Deck length before removal: ${gameState.deck.length}`),deck.splice(deck.indexOf(deckCard),1),deck.forEach((card=>{card.sprite.removeInteractive(),card!==deckCard&&fadeOutGameObject(deckCard.sprite,200)})),self.tweens.add({targets:deckCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),self.add.text(550,180,"Removed 1 card",{fontSize:"40px",fill:"#000000"}).setOrigin(.5),console.log(`Deck length after removal: ${gameState.deck.length}`),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()}))}()}))}(),!0):(gameState.playersTurn=!1,function(){gameState.player.health=0,self.updateManaBar(gameState.player),addHandtoDeck(),gameState.music.stop(),gameState.endOfTurnButton.destroy(),gameState.actionText&&fadeOutGameObject(gameState.actionText,200);gameState.score.numberOfTurns+=gameState.turn,gameState.gameOverText=self.add.text(550,300," Defeat!",{fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setOrigin(.5),gameState.gameOverText.setInteractive();let scenetransitionstarted=!1;self.time.delayedCall(400,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),scenetransitionstarted||(gameState.gameOverText.on("pointerup",(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})),self.time.delayedCall(2500,(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})))}))}(),!0)}function startNextLevel(){self.cameras.main.fadeOut(1e3),self.time.delayedCall(1e3,(()=>{self.scene.start("Level3Fight1")}))}function activatePermanentFromToken(card){if("foreverTrue"===card.key)gameState.foreverTrue=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteForeverTrue(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelSpirit"===card.key)gameState.rebelSpirit=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelSpirit(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelHeart"===card.key)gameState.rebelHeart=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelHeart(card):self.cameras.main.shake(70,.002,!1)}));else if("bushido"===card.key)gameState.bushido=!0,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteBushido(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicAvenger"===card.key)gameState.toxicAvenger=!0,gameState.enemies.forEach((enemy=>updateStats(enemy))),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicAvenger(card):self.cameras.main.shake(70,.002,!1)}));else if("kirisuteGomen"===card.key)gameState.player.strengthMax+=5,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn&&gameState.enemies.some((enemy=>enemy.health<30))?depleteKirisuteGomen(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicFrets"===card.key)gameState.toxicFrets=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicFrets(card):self.cameras.main.shake(70,.002,!1)}));else if("ashenEncore"===card.key)gameState.ashenEncore=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteAshenEncore(card):self.cameras.main.shake(70,.002,!1)}));else if("edoEruption"===card.key)gameState.edoEruption=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteEdoEruption(card):self.cameras.main.shake(70,.002,!1)}));else if("steelToe"===card.key)gameState.steelToe=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteSteelToe(card):self.cameras.main.shake(70,.002,!1)}));else if("kamishimoUberAlles"===card.key){const tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;gameState.kamishimoUberAlles+=1,updateStrengthAndArmor(gameState.player),tokenSprite.on("pointerup",(()=>{gameState.playersTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.kamishimoUberAlles-=1,updateStrengthAndArmor(gameState.player)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}else if("hollidayInKamakura"===card.key){let tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;const turnplayed=gameState.turn,fightplayed=gameState.score.levelsCompleted;tokenSprite.on("pointerup",(()=>{const depletedDifferentTurn=turnplayed!=gameState.turn||fightplayed!=gameState.score.levelsCompleted;console.log(`depletedDifferentTurn: ${depletedDifferentTurn}\nturnplayed: ${turnplayed}\ngameState.turn: ${gameState.turn}\nfightplayed: ${fightplayed}\ngameState.score.levelsCompleted: ${gameState.score.levelsCompleted}\ngameState.playersTurn: ${gameState.playersTurn}`),gameState.playersTurn&&depletedDifferentTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.player.manaMax+=1,gameState.player.mana+=1,self.updateManaBar(gameState.player),drawNewCards(1)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}}function displayTokenCard(card){card.tokenSprite.on("pointerover",(function(){gameState.cardsDealtSound.play({volume:1.5}),card.permanentCardSprite=self.add.sprite(550,300,card.key).setScale(.55).setDepth(26)})),card.tokenSprite.on("pointerout",(function(){card.permanentCardSprite.destroy()}))}function depleteForeverTrue(card){gameState.foreverTrue=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),drawNewCards(8)}function depleteRebelSpirit(card){gameState.rebelSpirit=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.mana+=3,gameState.player.manaMax+=3,self.updateManaBar(gameState.player)}function depleteRebelHeart(card){gameState.rebelHeart=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+12),self.updateHealthBar(gameState.player)}function depleteBushido(card){gameState.bushido=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.strengthBase+=6,updateStrengthAndArmor(gameState.player)}function depleteToxicAvenger(card){gameState.toxicAvenger=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison+=4,updateStats(enemy)}))}function depleteKirisuteGomen(card){if(gameState.enemies.some((enemy=>enemy.health<30))){gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let functionActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){enemy.health<30&&functionActive?(enemy.health=0,gameState.attackSound.play({volume:1}),self.cameras.main.shake(120,.025,!1),card.tokenSlot&&(card.tokenSlot.available=!0,gameState.player.strengthMax-=5),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),removeIfDead(enemy),checkGameOver(),updateStrengthAndArmor(gameState.player)):(self.cameras.main.shake(70,.002,!1),functionActive=!1),gameState.targetingCursor.setVisible(!1)}))}))}else self.cameras.main.shake(70,.002,!1),card.slot.available=!1,gameState.currentCards.some((card=>"kirisuteGomen"===card.key))||(gameState.currentCards.push(card),gameState.player.mana+=1,self.updateManaBar(gameState.player))}function depleteToxicFrets(card){gameState.toxicFrets=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison>0&&(enemy.health-=2*enemy.poison,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver())}))}function depleteAshenEncore(card){gameState.ashenEncore=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card));const ashenEncoreDepleteText=self.add.text(550,350,"Deals 12 firedamage\n to all enemies",{fontSize:"32px",fill:"#ff0000"}).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDepleteText.destroy()})),gameState.enemies.forEach((enemy=>{enemy.health-=12,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver()}))}function depleteEdoEruption(card){gameState.edoEruption=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card))}function depleteSteelToe(card){gameState.steelToe=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let depleteSteelToeActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){depleteSteelToeActive&&(enemy.armor-=7,updateStats(enemy),gameState.attackSound.play({volume:.6}),self.cameras.main.shake(100,.012,!1),gameState.targetingCursor.setVisible(!1),depleteSteelToeActive=!1)}))}))}function updateStrengthAndArmor(character){let strengthBushido=0;gameState.endOfTurnButtonPressed?(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard+character.armorStance),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+strengthBushido)):(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+character.strengthCard+strengthBushido)),gameState.kamishimoUberAlles>0&&gameState.player.stancePoints<0&&(character.strength=Math.min(character.strengthMax,character.strength-gameState.player.stancePoints*gameState.kamishimoUberAlles)),updateStats(character)}function updateStats(character){character!=gameState.player&&(character.strength=character.strengthBase+character.strengthTurn,gameState.toxicAvenger&&character.poison>0&&(character.strength-=4)),character.armorText.setText(`${character.armor}/${character.armorMax}`),character.strengthText.setText(`${character.strength}/${character.strengthMax}`)}function removeIfDead(character){if(character.health<=0){if(character.health=0,character.sprite.removeInteractive(),character.alive=!1,character.turnComplete=!0,character!=gameState.player){const indexEnemies=gameState.enemies.indexOf(character),indexCharacters=gameState.characters.indexOf(character);-1!==indexEnemies&&gameState.enemies.splice(indexEnemies,1),-1!==indexCharacters&&gameState.characters.splice(indexCharacters,1)}[character.sprite,character.healthBarBackground,character.healthBar,character.healthBarText,character.manaBarBackground,character.manaBar,character.manaBarText,character.strengthAndArmorImage,character.strengthText,character.armorText,character.descriptionBackground,character.descriptionText,character.intentionText,character.intentionBackground].forEach((object=>{fadeOutGameObject(object,500)}))}}function addHandtoDeck(){for(;gameState.currentCards.length>0;){let card=gameState.currentCards.pop();card.slot.available||(card.slot.available=!0),gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),fadeOutGameObject(card.sprite,200)}}function drawNewCards(numCards){const numCardsLimit=Math.min(gameState.deck.length,8),numOfFreeSlots=gameState.slots.filter((slot=>slot.available)).length;numCards=numOfFreeSlots<numCards?numOfFreeSlots:numCards;for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{if(gameState.currentCards.length<numCardsLimit){0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));let card=gameState.drawPile.pop();card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),console.log(`card added: ${card.key}`),card.isBeingPlayed=!1,gameState.currentCards.push(card);let availableSlots=gameState.slots.filter((slot=>slot.available)),slot=availableSlots[Math.floor(availableSlots.length/2)];if(slot){card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot;let cardDepth=10+slot.index;card.sprite.setDepth(cardDepth),self.animateCard(card,cardDepth)}gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),gameState.ashenEncore&&gameState.enemies.forEach((enemy=>{if(enemy.health-=4,self.updateHealthBar(enemy),removeIfDead(enemy),"undefined"==typeof ashenEncoreText||!ashenEncoreText){const ashenEncoreConfig={fontSize:"32px",fill:"#ff0000"},ashenEncoreKey="Deals 4 fire damage to all enemies",ashenEncoreDrawText=self.add.text(550,350,ashenEncoreKey,ashenEncoreConfig).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDrawText.destroy()}))}})),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}else self.cameras.main.shake(70,.002,!1)}))}function getValueOrInvoke(cardProperty){return"function"==typeof cardProperty?cardProperty():cardProperty}function fadeOutGameObject(gameObject,duration){gameObject&&self.tweens.add({targets:gameObject,alpha:0,ease:"Power1",duration:duration,onComplete:()=>{gameObject.destroy()}},self)}gameState.slots=[{available:!0,x:230,y:640,index:0,angle:-12},{available:!0,x:320,y:610,index:1,angle:-8},{available:!0,x:410,y:590,index:2,angle:-4},{available:!0,x:500,y:580,index:3,angle:0},{available:!0,x:590,y:590,index:4,angle:4},{available:!0,x:680,y:610,index:5,angle:8},{available:!0,x:770,y:640,index:6,angle:12},{available:!0,x:860,y:670,index:7,angle:16}],gameState.endOfTurnButton.on("pointerup",(function(){gameState.currentEnemyIndex=0,gameState.targetingCursor.visible||!gameState.playersTurn?self.cameras.main.shake(70,.002,!1):(this.setTexture("rectangularButtonPressed"),this.removeInteractive(),gameState.buttonPressedSound.play(),gameState.endOfTurnButtonPressed=!0,addHandtoDeck(),updateStrengthAndArmor(gameState.player),updateEnemyActions(),gameState.rebelHeart&&(gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+Math.abs(gameState.player.stancePoints)),self.updateHealthBar(gameState.player)),gameState.enemies.forEach((enemy=>{enemy.turnComplete=!enemy.alive,fadeOutGameObject(enemy.intentionText,200),fadeOutGameObject(enemy.intentionBackground,200)})),0!=gameState.player.mana&&(gameState.player.mana=0,self.updateManaBar(gameState.player)),self.time.delayedCall(100,(()=>{gameState.actionText&&gameState.actionText.destroy(),initiateEnemiesTurn()})))})),"admin"===gameState.playerName&&(gameState.getManaButton=self.add.sprite(550,200,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.getManaText=self.add.text(550,200,"Get Mana",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.getManaButton.on("pointerup",(()=>{gameState.playersTurn&&(gameState.player.mana=gameState.player.manaMax,self.updateManaBar(gameState.player),console.log("mana gained"))})),gameState.drawCardButton=self.add.sprite(550,300,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.drawCardText=self.add.text(550,300,"Draw Card",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.drawCardButton.on("pointerup",(()=>{gameState.playersTurn&&(drawNewCards(1),console.log("card drawn"))})),gameState.killEnemyButton=self.add.sprite(550,400,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.killEnemyText=self.add.text(550,400,"Kill Enemy",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.killEnemyButton.on("pointerup",(()=>{if(gameState.enemies.some((enemy=>enemy.health>0&&gameState.playersTurn))){const enemy=gameState.enemies.find((enemy=>enemy.health>0));enemy.health=0,removeIfDead(enemy),checkGameOver(),console.log(`${enemy.name} killed`)}})))}update(){gameState.targetingCursor.visible&&(gameState.targetingCursor.x=this.input.mousePointer.x,gameState.targetingCursor.y=this.input.mousePointer.y)}}class Level3Fight1 extends BaseScene{self;constructor(){super("Level3Fight1")}preload(){this.load.image("theDemonLair","assets/images/theDemonLair.jpg"),this.load.image("bakgrunnLair1","assets/images/bakgrunnLair1.jpg"),this.load.image("demon1","assets/images/sprites/demon1.png"),this.load.image("demon2","assets/images/sprites/demon2.png")}create(){const self=this;this.baseCreate("bakgrunnLair1"),this.resetPlayer(gameState.player,.37),gameState.player.health=gameState.player.healthMax,this.addButtons(),function(){gameState.drawPileImage=self.add.image(120,600,"deck"),gameState.drawPileImage.setScale(.13).setOrigin(.5,.5).setInteractive();gameState.drawPileText=self.add.text(120,600,gameState.drawPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.drawPileText.setDepth(100).setOrigin(.5,.5),gameState.drawPileImage.on("pointerover",(function(){if(gameState.drawPile.length>0){const cardsPerRow=gameState.drawPile.length<12?4:6,cardSpacing=105,startX=gameState.drawPile.length<12?400:250,startY=150;gameState.drawPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.drawPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]}))}(),gameState.discardPileText=self.add.text(980,600,gameState.discardPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.discardPileText.setDepth(100).setOrigin(.5,.5),gameState.discardPileImage=self.add.image(980,600,"deck"),gameState.discardPileImage.setScale(.13).setOrigin(.5,.5).setInteractive().setTint(16711680),gameState.discardPileImage.on("pointerover",(function(){if(gameState.discardPile.length>0){const cardsPerRow=gameState.discardPile.length<12?4:6,cardSpacing=105,startX=gameState.discardPile.length<12?400:250,startY=150;gameState.discardPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.discardPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]})),gameState.kamishimoUberAlles=0,gameState.kirisuteGomen=!1,gameState.toxicFrets=!1,gameState.ashenEncore=!1,gameState.edoEruption=!1,gameState.steelToe=!1,gameState.currentCards=[],gameState.cardImages=[],gameState.enemy1=Object.create(gameState.enemy),gameState.enemy1.name="Voidling",gameState.enemy1.sprite=this.add.sprite(680,350,"demon1").setScale(.32).setFlipX(!1).setInteractive(),gameState.enemy1.health=45,gameState.enemy1.healthMax=45,gameState.enemy1.armor=0,gameState.enemy2=Object.create(gameState.enemy),gameState.enemy2.name="Infernus",gameState.enemy2.sprite=this.add.sprite(890,330,"demon2").setScale(.26).setFlipX(!1).setInteractive(),gameState.enemy2.health=65,gameState.enemy2.healthMax=65,gameState.enemy2.armor=0,gameState.enemies=[gameState.enemy1,gameState.enemy2],gameState.characters=[...gameState.enemies,gameState.player],gameState.characters.forEach((character=>{character.height=character.sprite.displayHeight,character.width=character.sprite.displayWidth,character.x=character.sprite.x,character.y=character.sprite.y,this.addHealthBar(character,character.healthBarColor),this.addStatsDisplay(character),this.describeCharacter(character,character.sprite)})),this.addManaBar(gameState.player),this.addStanceBar(gameState.player,"#a9a9a9"),gameState.permanents.forEach((permanent=>{const card=permanent.card,slot=permanent.slot;"kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?slot.available=!0:(card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,console.log(`Recreated permanent: ${card.key}\nfor slot ${slot.index}`),displayTokenCard(card),activatePermanentFromToken(card))}));const levelTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},levelimage=this.add.image(0,0,"theDemonLair").setScale(.87).setOrigin(.02,0).setDepth(300),leveltextTop=this.add.text(550,270,"Level 3:",levelTextConfig).setDepth(301).setOrigin(.5),leveltextBottom=this.add.text(550,430,"The Lair",levelTextConfig).setDepth(301).setOrigin(.5);let levelStarting=!1;function startFight(){gameState.turn=0,gameState.musicTheme.stop(),self.shuffleDeck(gameState.drawPile);const{level:level,fight:fight}=self.extractLevelFightFromName(self.scene.key);gameState.startText=self.add.text(550,300,`Level ${level}\nFight ${fight}!`,{fontSize:"60px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setDepth(200).setOrigin(.5),self.time.delayedCall(350,(()=>{gameState.music.play({loop:!0,volume:.35})})),self.time.delayedCall(3e3,(()=>{fadeOutGameObject(gameState.startText,200),self.time.delayedCall(300,startPlayerTurn())}))}function startPlayerTurn(){let numCards=gameState.player.numCardsBase+gameState.player.numCardsStance;gameState.turn+=1,gameState.endOfTurnButtonPressed=!1,gameState.yourTurnText=self.add.text(550,300,"Your turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),gameState.player.poisonText=self.add.text(570,350,"",{fontSize:"25px",fill:"#ff0000"}).setOrigin(.5),console.log(`player's turn number ${gameState.turn} has started`),gameState.player.armorCard=0,gameState.player.strengthCard=0;const manaMax=gameState.player.manaBase+gameState.player.manaStance;gameState.player.manaMax=gameState.rebelSpirit&&gameState.turn%3==0?manaMax+1:manaMax,gameState.player.mana=gameState.player.manaMax,gameState.foreverTrue&&gameState.player.stancePoints>0?(gameState.player.manaMax+=1,gameState.player.mana+=1):gameState.player.stancePoints=0,self.updateStanceBar(gameState.player),self.updateManaBar(gameState.player),self.updateHealthBar(gameState.player),self.updatePoison(gameState.player),removeIfDead(gameState.player),updateStrengthAndArmor(gameState.player),self.time.delayedCall(2200,(()=>{gameState.player.poisonText.destroy(),fadeOutGameObject(gameState.yourTurnText,200),function(numCards){gameState.endOfTurnButton.setTexture("rectangularButton"),gameState.endOfTurnButton.setInteractive();const startSlotIndex=Math.floor((gameState.slots.length-numCards)/2);for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));const card=gameState.drawPile.pop(),cardDepth=10+i+startSlotIndex;card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),card.isBeingPlayed=!1,gameState.currentCards.push(card),card.sprite.setDepth(cardDepth);const slot=gameState.slots[startSlotIndex+i];slot&&(card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot),gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),self.animateCard(card,cardDepth),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}));gameState.playersTurn=!0}(numCards),gameState.enemies.forEach((enemy=>{updateEnemyActions(),function(enemy){!function(enemy){const totalProbability=enemy.actions.reduce(((sum,action)=>sum+action.probability),0);if(1!==totalProbability){const scalingFactor=1/totalProbability;for(let action of enemy.actions)action.probability*=scalingFactor}}(enemy);let cumProb=0;for(let i=0;i<enemy.actions.length;i++)cumProb+=enemy.actions[i].probability,enemy.actions[i].cumulativeProbability=cumProb;const rand=Math.random();enemy.chosenAction=enemy.actions.find((action=>rand<action.cumulativeProbability))}(enemy),function(enemy){const actionKey="function"==typeof enemy.chosenAction.key?enemy.chosenAction.key():enemy.chosenAction.key,textConfig={fontSize:"13px",fill:"#000000"};enemy.intentionText=self.add.text(enemy.x+10,enemy.y-enemy.height/2-40,`${actionKey}`,textConfig),enemy.intentionText.setOrigin(.5,1).setDepth(11);const originalSpriteWidth=self.textures.get("listbox1").getSourceImage().width,scale=enemy.intentionText.width/originalSpriteWidth;enemy.intentionBackground=self.add.sprite(enemy.x+10,enemy.y-enemy.height/2-33,"listbox1").setScale(1.05*scale,1),enemy.intentionBackground.setInteractive().setOrigin(.5,1).setAlpha(.85).setDepth(10)}(enemy)}))}))}self.time.delayedCall(4e3,(()=>{levelStarting||(levelStarting=!0,fadeOutGameObject(levelimage,2e3),fadeOutGameObject(leveltextTop,2e3),fadeOutGameObject(leveltextBottom,2e3),self.time.delayedCall(2200,startFight()))})),self.input.on("pointerup",(()=>{levelStarting||(levelStarting=!0,fadeOutGameObject(levelimage,2e3),fadeOutGameObject(leveltextTop,2e3),fadeOutGameObject(leveltextBottom,2e3),self.time.delayedCall(2200,startFight()))}));function activateCard(card){if(gameState.costPlayed="function"==typeof card.cost?card.cost():card.cost,gameState.typePlayed="function"==typeof card.type?card.type():card.type,gameState.player.mana>=gameState.costPlayed&&!1===gameState.playingCard)if(gameState.player.mana-=gameState.costPlayed,self.updateManaBar(gameState.player),console.log(`activated card: ${card.key}\nCost: ${gameState.costPlayed}`),gameState.player.freedomBeforeCardPlayed="Freedom"===gameState.player.stance,card.isBeingPlayed=!0,gameState.currentCards=gameState.currentCards.filter((c=>c!==card)),card.slot&&(card.slot.available=!0),"targetSelected"===gameState.typePlayed)!function(card,handOfCards){gameState.targetingCursor.setVisible(!0),gameState.thisTurn=gameState.turn;for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.removeInteractive();for(let enemy of gameState.enemies)enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){card.isBeingPlayed&&gameState.playersTurn&&gameState.thisTurn===gameState.turn&&(card.isBeingPlayed=!1,gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,enemy));for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.setInteractive()}))}(card,gameState.currentCards);else if("targetAll"===gameState.typePlayed){gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length);const enemiesCopy=[...gameState.enemies];gameState.enemiesLength=enemiesCopy.length,enemiesCopy.forEach(((enemy,index)=>{const isLastEnemy=index===enemiesCopy.length-1;playCard(card,enemy,isLastEnemy)}))}else"permanent"===gameState.typePlayed?function(card){const slot=gameState.permanentSlots.find((slot=>slot.available));"kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length)):gameState.deck=gameState.deck.filter((c=>c!==card));slot?(card.slot.available=!0,card.sprite.destroy(),card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,gameState.permanents.push({card:card,slot:slot,tokenSprite:card.tokenSprite}),displayTokenCard(card),activatePermanentFromToken(card)):function(card){switch(self.cameras.main.shake(70,.002,!1),card.isBeingPlayed=!1,console.log(`No available slot for permanent card ${card.key}`),card.key){case"foreverTrue":depleteForeverTrue(card);break;case"rebelSpirit":depleteRebelSpirit(card);break;case"rebelHeart":depleteRebelHeart(card);break;case"bushido":depleteBushido(card);break;case"toxicAvenger":depleteToxicAvenger(card);break;case"kirisuteGomen":depleteKirisuteGomen(card);case"toxicFrets":depleteToxicFrets(card);break;case"ashenEncore":depleteAshenEncore(card);break;case"edoEruption":depleteEdoEruption(card);break;case"steelToe":depleteSteelToe(card);break;case"kamishimoUberAlles":case"hollidayInKamakura":gameState.currentCards.push(card),card.slot.available=!1}}(card)}(card):(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,gameState.player));else self.cameras.main.shake(70,.002,!1)}function playCard(card,target,isLastEnemy=!1){gameState.playingCard=!0,fadeOutGameObject(card.sprite,200),fadeOutGameObject(gameState.actionText,50),gameState.targetingCursor.setVisible(!1);const{damagePlayed:damagePlayed,firePlayed:firePlayed,stancePointsPlayed:stancePointsPlayed,poisonPlayed:poisonPlayed,healPlayed:healPlayed,strengthPlayed:strengthPlayed,armorPlayed:armorPlayed,reduceTargetArmorPlayed:reduceTargetArmorPlayed,reduceTargetStrengthPlayed:reduceTargetStrengthPlayed,drawCardPlayed:drawCardPlayed}=function(card,target,isLastEnemy=!1){const moshpitMassacreCondition="moshpitMassacre"===card.key&&gameState.player.stancePoints>0&&target.poison>0,scorchedSoulCondition="scorchedSoul"===card.key&&target.poison>0,bladesBlightCondition="bladesBlight"===card.key&&target.poison>0,roninsRotCondition="roninsRot"===card.key&&target.poison>0,kabutuEdoCondition="kabutu"===card.key&&gameState.edoEruption&&gameState.player.stancePoints>0,steelToeCondition="combatBoots"===card.key&&gameState.steelToe,knuckleFistEdoCondition="knuckleFist"===card.key&&gameState.edoEruption&&gameState.player.stancePoints<0,steelToeOutcome=gameState.player.stancePoints>0?2*(1+gameState.player.stancePoints):2;return{damagePlayed:moshpitMassacreCondition?11:getValueOrInvoke(card.damage),firePlayed:1.5*(kabutuEdoCondition?2*gameState.player.stancePoints:scorchedSoulCondition?12:getValueOrInvoke(card.fire)),stancePointsPlayed:kabutuEdoCondition&&isLastEnemy?-1:getValueOrInvoke(card.stancePoints),poisonPlayed:bladesBlightCondition?target.poison:getValueOrInvoke(card.poison),healPlayed:getValueOrInvoke(card.heal),strengthPlayed:getValueOrInvoke(card.strength),armorPlayed:knuckleFistEdoCondition?-gameState.player.stancePoints:getValueOrInvoke(card.armor),reduceTargetArmorPlayed:steelToeCondition?steelToeOutcome:getValueOrInvoke(card.reduceTargetArmor),reduceTargetStrengthPlayed:roninsRotCondition?target.poison:getValueOrInvoke(card.reduceTargetStrength),drawCardPlayed:getValueOrInvoke(card.drawCard)}}(card,target,isLastEnemy),damageModifyer=(1+.1*gameState.player.strength)*(1-target.armor/20),damageTotal=Math.round(Math.max(0,firePlayed+damagePlayed*damageModifyer));target!=gameState.player&&(gameState.score.damageDealt+=damageTotal,console.log(`${damagePlayed} Physical Damage and ${firePlayed} Fire Damage was dealt to ${target.name}`),target.strengthTurn-=reduceTargetStrengthPlayed,target.armor-=reduceTargetArmorPlayed,target.poison+=poisonPlayed,target.health-=damageTotal),"seppuku"===card.key||"boneShredder"===card.key?gameState.player.strengthBase+=strengthPlayed:gameState.player.strengthCard+=strengthPlayed,"libertySpikes"===card.key&&gameState.player.stancePoints>0&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),healPlayed&&(gameState.player.health=Math.min(gameState.player.health+healPlayed,gameState.player.healthMax),self.updateHealthBar(gameState.player)),gameState.player.armorCard+=armorPlayed,gameState.player.poison=Math.max(0,gameState.player.poison-card.poisonRemove),function(damageTotal,poisonPlayed,strengthPlayed,armorPlayed){const actionTextConfig={fontSize:"32px",fill:"#ff0000"};if("targetSelected"===gameState.typePlayed||"targetAll"===gameState.typePlayed){self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8});const actionTextTarget=`${damageTotal>0?`Deals ${damageTotal} damage`:""}\n\n${poisonPlayed>0?`Deals ${poisonPlayed} Poison`:""}`;gameState.actionText=self.add.text(550,300,actionTextTarget,actionTextConfig).setOrigin(.5),self.attackTweens(gameState.player,60)}else strengthPlayed>0?(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${strengthPlayed} Strength`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player)):armorPlayed>0&&(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${armorPlayed} Armor`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player))}(damageTotal,poisonPlayed,strengthPlayed,armorPlayed),gameState.player.stancePoints+stancePointsPlayed>=-3&&gameState.player.stancePoints+stancePointsPlayed<=3&&(gameState.player.stancePoints+=stancePointsPlayed,self.updateStanceBar(gameState.player)),gameState.player.freedomAfterCardPlayed="Freedom"===gameState.player.stance,!gameState.player.freedomBeforeCardPlayed&&gameState.player.freedomAfterCardPlayed&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),updateStats(target),self.updateHealthBar(target),updateStrengthAndArmor(gameState.player),removeIfDead(target),checkGameOver(),updateEnemyActions(),drawNewCards(drawCardPlayed),gameState.enemies.forEach((enemy=>{self.updateEnemyIntention(enemy)})),self.time.delayedCall(260,(()=>{gameState.playingCard=!1})),self.time.delayedCall(1500,(()=>{gameState.actionText&&gameState.actionText.destroy()}))}function getValueOrInvoke(cardProperty){return"function"==typeof cardProperty?cardProperty():cardProperty}function initiateEnemiesTurn(){0!==gameState.enemies.length&&(gameState.enemies[gameState.currentEnemyIndex].alive?function(enemy){gameState.playersTurn&&(gameState.playersTurn=!1,enemy.turnText=self.add.text(550,300,"Enemy turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),self.time.delayedCall(1800,(()=>{fadeOutGameObject(enemy.turnText,200)})));enemy.turnComplete=!1,function(enemy){enemy.poisonText=self.add.text(570,350,"",{fontSize:"30px",fill:"#ff0000"}).setOrigin(.5),self.updatePoison(enemy),gameState.toxicAvenger&&enemy.poison>0&&updateStats(enemy);const delaytime=""!==enemy.poisonText._text||enemy.turnText?1800:800;self.time.delayedCall(delaytime,(()=>{enemy.poisonText.destroy();const chosenAction=enemy.chosenAction,actionTextConfig={fontSize:"32px",fill:"#ff0000"};if(gameState.player.poison+=chosenAction.poison,enemy.health=Math.min(enemy.health+chosenAction.heal,enemy.healthMax),enemy.strengthBase=Math.min(enemy.strengthBase+chosenAction.strength,enemy.strengthMax),updateStats(enemy),enemy.armor=Math.min(enemy.armor+chosenAction.armor,enemy.armorMax),chosenAction.damage>0||chosenAction.fire>0){const damageModifyer=(1+.1*enemy.strength)*(1-gameState.player.armor/20);self.cameras.main.shake(120,.005,!1),gameState.attackSound.play({volume:.8}),console.log(`enemy.damageTotal: ${enemy.damageTotal}`),enemy.damageTotal=Math.round(Math.max(0,chosenAction.fire+chosenAction.damage*damageModifyer)),gameState.player.health-=enemy.damageTotal,gameState.score.damageTaken+=enemy.damageTotal,gameState.actionText=self.add.text(550,300,`Deals ${enemy.damageTotal} damage`,actionTextConfig).setOrigin(.5),self.tweens.add({targets:enemy.sprite,x:enemy.sprite.x-60,duration:120,ease:"Cubic",yoyo:!0})}else chosenAction.heal>0?(gameState.healSound.play({volume:.5}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy)):(chosenAction.strength>0||chosenAction.armor>0||chosenAction.poison>0)&&(gameState.powerUpSound.play({volume:.2}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy));enemy.strengthTurn=0,function(enemy){[gameState.player,enemy].forEach((character=>{self.updateHealthBar(character),removeIfDead(character),updateStats(character)})),self.time.delayedCall(1500,(()=>{fadeOutGameObject(gameState.actionText,200),enemy.turnComplete=!0,checkGameOver()||!gameState.enemies[gameState.currentEnemyIndex].turnComplete&&gameState.enemies[gameState.currentEnemyIndex].alive||(gameState.currentEnemyIndex++,gameState.currentEnemyIndex<gameState.enemies.length?initiateEnemiesTurn():(gameState.currentEnemyIndex=0,startPlayerTurn()))}))}(enemy)}))}(enemy)}(gameState.enemies[gameState.currentEnemyIndex]):(gameState.currentEnemyIndex++,initiateEnemiesTurn()))}function updateEnemyActions(){gameState.enemy1.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 fire damage",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 15 damage",probability:.235+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(18*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:18,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 18 damage",probability:.17+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,text:"Heals 15 HP\nGains 1 armor",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 strenght",probability:.125+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:4,text:"Gains 4 armor",probability:.15+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 poison",probability:0}],1===gameState.turn?gameState.enemy2.actions=[{key:"Intends to\nDeal 6 fire damage",damage:0,fire:6,poison:0,heal:0,poisonRemove:0,strength:1,armor:0,reduceTargetStrength:0,reduceTargetArmor:0,text:"Deals 5 fire damage",probability:1}]:gameState.enemy2.actions=[{key:"Intends to\nDeal 7 fire damage",damage:0,fire:7,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 7 fire damage",probability:.1+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 15 damage",probability:.235+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(18*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:18,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 18 damage",probability:.17+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,text:"Heals 15 HP\nGains 1 armor",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 strenght",probability:.125+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:4,text:"Gains 4 armor",probability:.15+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 poison",probability:0}]}function checkGameOver(){return gameState.player.alive?!gameState.enemies.some((enemy=>enemy.alive))&&(gameState.playersTurn=!1,function(){gameState.score.numberOfTurns+=gameState.turn,gameState.score.levelsCompleted+=1,gameState.music.stop(),self.updateManaBar(gameState.player),addHandtoDeck(),self.time.delayedCall(600,(()=>{gameState.attackSound.isPlaying&&gameState.attackSound.stop(),gameState.victorySound.play({volume:.9,rate:1}),self.clearBoard()})),gameState.actionText&&(gameState.actionText.destroy(),console.log("gameState.actionText still existed at initiateVictory and got destroyed"));const victoryTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},victoryText=self.add.text(550,300,"Victory!",victoryTextConfig).setOrigin(.5);self.time.delayedCall(2e3,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),victoryText.destroy(),function(){self.shuffleDeck(gameState.bonusCards);const gameOverTextConfig={fontSize:"40px",fill:"#000000"},rewardTextConfig={fontSize:"25px",fill:"#000000"};gameState.gameOverText=self.add.text(550,180,"Choose a reward",gameOverTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsText=self.add.text(550,400,"Add 1 card\nto your deck",rewardTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsButton=self.add.image(550,400,"rectangularButton"),gameState.rewardAddCardsButton.setScale(1.2).setInteractive().setOrigin(.5).setDepth(102),gameState.rewardAddCardsButton.on("pointerover",(function(){this.setTexture("rectangularButtonHovered")})),gameState.rewardAddCardsButton.on("pointerout",(function(){this.setTexture("rectangularButton")})),gameState.rewardAddCardsButton.on("pointerup",(function(){gameState.rewardAddCardsText.destroy(),gameState.gameOverText.destroy(),gameState.rewardAddCardsButton.destroy(),function(){console.log("rewardAddCard called"),gameState.gameOverText.destroy();const x=320,y=300,spacing=220;let bonusCards=gameState.bonusCards.slice(0,3);console.log(`bonusCards: ${bonusCards.key}`),bonusCards.forEach(((bonusCard,index)=>{bonusCard.sprite=self.add.sprite(x+index*spacing,y,bonusCard.key),bonusCard.sprite.setScale(.45).setInteractive().setDepth(102),console.log(`bonusCardsprite added for: ${bonusCard.key}`),bonusCard.sprite.on("pointerover",(()=>{gameState.cardsDealtSound.play({volume:.6}),self.cardTweens(bonusCard.sprite,.58,200)}),self),bonusCard.sprite.on("pointerout",(()=>{self.cardTweens(bonusCard.sprite,.45,400)}),self),bonusCard.sprite.on("pointerup",(()=>{let nextlevelstarting=!1;gameState.deck.push(bonusCard),"permanent"===bonusCard.type&&gameState.bonusCards.splice(gameState.bonusCards.indexOf(bonusCard),1),bonusCards.forEach((card=>{card.sprite.removeInteractive(),card!==bonusCard&&fadeOutGameObject(card.sprite,200)})),self.tweens.add({targets:bonusCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),self.add.text(550,180,"Gained 1 card",{fontSize:"40px",fill:"#000000"}).setOrigin(.5),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()}))}()}))}(),!0):(gameState.playersTurn=!1,function(){gameState.player.health=0,self.updateManaBar(gameState.player),addHandtoDeck(),gameState.music.stop(),gameState.endOfTurnButton.destroy(),gameState.actionText&&fadeOutGameObject(gameState.actionText,200);gameState.score.numberOfTurns+=gameState.turn,gameState.gameOverText=self.add.text(550,300," Defeat!",{fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setOrigin(.5),gameState.gameOverText.setInteractive();let scenetransitionstarted=!1;self.time.delayedCall(400,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),scenetransitionstarted||(gameState.gameOverText.on("pointerup",(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})),self.time.delayedCall(2500,(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})))}))}(),!0)}function startNextLevel(){self.cameras.main.fadeOut(1e3),self.time.delayedCall(1e3,(()=>{self.scene.start("Level3Fight2")}))}function activatePermanentFromToken(card){if("foreverTrue"===card.key)gameState.foreverTrue=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteForeverTrue(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelSpirit"===card.key)gameState.rebelSpirit=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelSpirit(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelHeart"===card.key)gameState.rebelHeart=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelHeart(card):self.cameras.main.shake(70,.002,!1)}));else if("bushido"===card.key)gameState.bushido=!0,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteBushido(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicAvenger"===card.key)gameState.toxicAvenger=!0,gameState.enemies.forEach((enemy=>updateStats(enemy))),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicAvenger(card):self.cameras.main.shake(70,.002,!1)}));else if("kirisuteGomen"===card.key)gameState.player.strengthMax+=5,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn&&gameState.enemies.some((enemy=>enemy.health<30))?depleteKirisuteGomen(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicFrets"===card.key)gameState.toxicFrets=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicFrets(card):self.cameras.main.shake(70,.002,!1)}));else if("ashenEncore"===card.key)gameState.ashenEncore=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteAshenEncore(card):self.cameras.main.shake(70,.002,!1)}));else if("edoEruption"===card.key)gameState.edoEruption=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteEdoEruption(card):self.cameras.main.shake(70,.002,!1)}));else if("steelToe"===card.key)gameState.steelToe=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteSteelToe(card):self.cameras.main.shake(70,.002,!1)}));else if("kamishimoUberAlles"===card.key){const tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;gameState.kamishimoUberAlles+=1,updateStrengthAndArmor(gameState.player),tokenSprite.on("pointerup",(()=>{gameState.playersTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.kamishimoUberAlles-=1,updateStrengthAndArmor(gameState.player)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}else if("hollidayInKamakura"===card.key){let tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;const turnplayed=gameState.turn,fightplayed=gameState.score.levelsCompleted;tokenSprite.on("pointerup",(()=>{const depletedDifferentTurn=turnplayed!=gameState.turn||fightplayed!=gameState.score.levelsCompleted;console.log(`depletedDifferentTurn: ${depletedDifferentTurn}\nturnplayed: ${turnplayed}\ngameState.turn: ${gameState.turn}\nfightplayed: ${fightplayed}\ngameState.score.levelsCompleted: ${gameState.score.levelsCompleted}\ngameState.playersTurn: ${gameState.playersTurn}`),gameState.playersTurn&&depletedDifferentTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.player.manaMax+=1,gameState.player.mana+=1,self.updateManaBar(gameState.player),drawNewCards(1)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}}function displayTokenCard(card){card.tokenSprite.on("pointerover",(function(){gameState.cardsDealtSound.play({volume:1.5}),card.permanentCardSprite=self.add.sprite(550,300,card.key).setScale(.55).setDepth(26)})),card.tokenSprite.on("pointerout",(function(){card.permanentCardSprite.destroy()}))}function depleteForeverTrue(card){gameState.foreverTrue=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),drawNewCards(8)}function depleteRebelSpirit(card){gameState.rebelSpirit=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.mana+=3,gameState.player.manaMax+=3,self.updateManaBar(gameState.player)}function depleteRebelHeart(card){gameState.rebelHeart=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+12),self.updateHealthBar(gameState.player)}function depleteBushido(card){gameState.bushido=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.strengthBase+=6,updateStrengthAndArmor(gameState.player)}function depleteToxicAvenger(card){gameState.toxicAvenger=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison+=4,updateStats(enemy)}))}function depleteKirisuteGomen(card){if(gameState.enemies.some((enemy=>enemy.health<30))){gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let functionActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){enemy.health<30&&functionActive?(enemy.health=0,gameState.attackSound.play({volume:1}),self.cameras.main.shake(120,.025,!1),card.tokenSlot&&(card.tokenSlot.available=!0,gameState.player.strengthMax-=5),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),removeIfDead(enemy),checkGameOver(),updateStrengthAndArmor(gameState.player)):(self.cameras.main.shake(70,.002,!1),functionActive=!1),gameState.targetingCursor.setVisible(!1)}))}))}else self.cameras.main.shake(70,.002,!1),card.slot.available=!1,gameState.currentCards.some((card=>"kirisuteGomen"===card.key))||(gameState.currentCards.push(card),gameState.player.mana+=1,self.updateManaBar(gameState.player))}function depleteToxicFrets(card){gameState.toxicFrets=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison>0&&(enemy.health-=2*enemy.poison,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver())}))}function depleteAshenEncore(card){gameState.ashenEncore=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card));const ashenEncoreDepleteText=self.add.text(550,350,"Deals 12 firedamage\n to all enemies",{fontSize:"32px",fill:"#ff0000"}).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDepleteText.destroy()})),gameState.enemies.forEach((enemy=>{enemy.health-=12,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver()}))}function depleteEdoEruption(card){gameState.edoEruption=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card))}function depleteSteelToe(card){gameState.steelToe=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let depleteSteelToeActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){depleteSteelToeActive&&(enemy.armor-=7,updateStats(enemy),gameState.attackSound.play({volume:.6}),self.cameras.main.shake(100,.012,!1),gameState.targetingCursor.setVisible(!1),depleteSteelToeActive=!1)}))}))}function updateStrengthAndArmor(character){let strengthBushido=0;gameState.endOfTurnButtonPressed?(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard+character.armorStance),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+strengthBushido)):(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+character.strengthCard+strengthBushido)),gameState.kamishimoUberAlles>0&&gameState.player.stancePoints<0&&(character.strength=Math.min(character.strengthMax,character.strength-gameState.player.stancePoints*gameState.kamishimoUberAlles)),updateStats(character)}function updateStats(character){character!=gameState.player&&(character.strength=character.strengthBase+character.strengthTurn,gameState.toxicAvenger&&character.poison>0&&(character.strength-=4)),character.armorText.setText(`${character.armor}/${character.armorMax}`),character.strengthText.setText(`${character.strength}/${character.strengthMax}`)}function removeIfDead(character){if(character.health<=0){if(character.health=0,character.sprite.removeInteractive(),character.alive=!1,character.turnComplete=!0,character!=gameState.player){const indexEnemies=gameState.enemies.indexOf(character),indexCharacters=gameState.characters.indexOf(character);-1!==indexEnemies&&gameState.enemies.splice(indexEnemies,1),-1!==indexCharacters&&gameState.characters.splice(indexCharacters,1)}[character.sprite,character.healthBarBackground,character.healthBar,character.healthBarText,character.manaBarBackground,character.manaBar,character.manaBarText,character.strengthAndArmorImage,character.strengthText,character.armorText,character.descriptionBackground,character.descriptionText,character.intentionText,character.intentionBackground].forEach((object=>{fadeOutGameObject(object,500)}))}}function addHandtoDeck(){for(;gameState.currentCards.length>0;){let card=gameState.currentCards.pop();card.slot.available||(card.slot.available=!0),gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),fadeOutGameObject(card.sprite,200)}}function drawNewCards(numCards){const numCardsLimit=Math.min(gameState.deck.length,8),numOfFreeSlots=gameState.slots.filter((slot=>slot.available)).length;numCards=numOfFreeSlots<numCards?numOfFreeSlots:numCards;for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{if(gameState.currentCards.length<numCardsLimit){0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));let card=gameState.drawPile.pop();card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),console.log(`card added: ${card.key}`),card.isBeingPlayed=!1,gameState.currentCards.push(card);let availableSlots=gameState.slots.filter((slot=>slot.available)),slot=availableSlots[Math.floor(availableSlots.length/2)];if(slot){card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot;let cardDepth=10+slot.index;card.sprite.setDepth(cardDepth),self.animateCard(card,cardDepth)}gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),gameState.ashenEncore&&gameState.enemies.forEach((enemy=>{if(enemy.health-=4,self.updateHealthBar(enemy),removeIfDead(enemy),"undefined"==typeof ashenEncoreText||!ashenEncoreText){const ashenEncoreConfig={fontSize:"32px",fill:"#ff0000"},ashenEncoreKey="Deals 4 fire damage to all enemies",ashenEncoreDrawText=self.add.text(550,350,ashenEncoreKey,ashenEncoreConfig).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDrawText.destroy()}))}})),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}else self.cameras.main.shake(70,.002,!1)}))}function fadeOutGameObject(gameObject,duration){gameObject&&self.tweens.add({targets:gameObject,alpha:0,ease:"Power1",duration:duration,onComplete:()=>{gameObject.destroy()}},self)}gameState.slots=[{available:!0,x:230,y:640,index:0,angle:-12},{available:!0,x:320,y:610,index:1,angle:-8},{available:!0,x:410,y:590,index:2,angle:-4},{available:!0,x:500,y:580,index:3,angle:0},{available:!0,x:590,y:590,index:4,angle:4},{available:!0,x:680,y:610,index:5,angle:8},{available:!0,x:770,y:640,index:6,angle:12},{available:!0,x:860,y:670,index:7,angle:16}],gameState.endOfTurnButton.on("pointerup",(function(){gameState.currentEnemyIndex=0,gameState.targetingCursor.visible||!gameState.playersTurn?self.cameras.main.shake(70,.002,!1):(this.setTexture("rectangularButtonPressed"),this.removeInteractive(),gameState.buttonPressedSound.play(),gameState.endOfTurnButtonPressed=!0,addHandtoDeck(),updateStrengthAndArmor(gameState.player),updateEnemyActions(),gameState.rebelHeart&&(gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+Math.abs(gameState.player.stancePoints)),self.updateHealthBar(gameState.player)),gameState.enemies.forEach((enemy=>{enemy.turnComplete=!enemy.alive,fadeOutGameObject(enemy.intentionText,200),fadeOutGameObject(enemy.intentionBackground,200)})),0!=gameState.player.mana&&(gameState.player.mana=0,self.updateManaBar(gameState.player)),self.time.delayedCall(100,(()=>{gameState.actionText&&gameState.actionText.destroy(),initiateEnemiesTurn()})))})),"admin"===gameState.playerName&&(gameState.getManaButton=self.add.sprite(550,200,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.getManaText=self.add.text(550,200,"Get Mana",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.getManaButton.on("pointerup",(()=>{gameState.playersTurn&&(gameState.player.mana=gameState.player.manaMax,self.updateManaBar(gameState.player),console.log("mana gained"))})),gameState.drawCardButton=self.add.sprite(550,300,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.drawCardText=self.add.text(550,300,"Draw Card",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.drawCardButton.on("pointerup",(()=>{gameState.playersTurn&&(drawNewCards(1),console.log("card drawn"))})),gameState.killEnemyButton=self.add.sprite(550,400,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.killEnemyText=self.add.text(550,400,"Kill Enemy",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.killEnemyButton.on("pointerup",(()=>{if(gameState.enemies.some((enemy=>enemy.health>0&&gameState.playersTurn))){const enemy=gameState.enemies.find((enemy=>enemy.health>0));enemy.health=0,removeIfDead(enemy),checkGameOver(),console.log(`${enemy.name} killed`)}})))}update(){gameState.targetingCursor.visible&&(gameState.targetingCursor.x=this.input.mousePointer.x,gameState.targetingCursor.y=this.input.mousePointer.y)}}class Level3Fight2 extends BaseScene{self;constructor(){super("Level3Fight2")}preload(){this.load.image("skeleton1","assets/images/sprites/skeleton1.png"),this.load.image("skeleton2","assets/images/sprites/skeleton2.png"),this.load.image("bakgrunnLair2","assets/images/bakgrunnLair2.jpg")}create(){const self=this;for(this.baseCreate("bakgrunnLair2"),this.resetPlayer(gameState.player,.35),this.addButtons(),function(){gameState.drawPileImage=self.add.image(120,600,"deck"),gameState.drawPileImage.setScale(.13).setOrigin(.5,.5).setInteractive();gameState.drawPileText=self.add.text(120,600,gameState.drawPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.drawPileText.setDepth(100).setOrigin(.5,.5),gameState.drawPileImage.on("pointerover",(function(){if(gameState.drawPile.length>0){const cardsPerRow=gameState.drawPile.length<12?4:6,cardSpacing=105,startX=gameState.drawPile.length<12?400:250,startY=150;gameState.drawPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.drawPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]}))}(),gameState.discardPileText=self.add.text(980,600,gameState.discardPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.discardPileText.setDepth(100).setOrigin(.5,.5),gameState.discardPileImage=self.add.image(980,600,"deck"),gameState.discardPileImage.setScale(.13).setOrigin(.5,.5).setInteractive().setTint(16711680),gameState.discardPileImage.on("pointerover",(function(){if(gameState.discardPile.length>0){const cardsPerRow=gameState.discardPile.length<12?4:6,cardSpacing=105,startX=gameState.discardPile.length<12?400:250,startY=150;gameState.discardPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.discardPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]})),gameState.kamishimoUberAlles=0,gameState.kirisuteGomen=!1,gameState.toxicFrets=!1,gameState.ashenEncore=!1,gameState.edoEruption=!1,gameState.steelToe=!1,gameState.currentCards=[],gameState.cardImages=[];gameState.extraCards.length;)gameState.bonusCards.push(gameState.extraCards.pop());function startPlayerTurn(){let numCards=gameState.player.numCardsBase+gameState.player.numCardsStance;gameState.turn+=1,gameState.endOfTurnButtonPressed=!1,gameState.yourTurnText=self.add.text(550,300,"Your turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),gameState.player.poisonText=self.add.text(570,350,"",{fontSize:"25px",fill:"#ff0000"}).setOrigin(.5),console.log(`player's turn number ${gameState.turn} has started`),gameState.player.armorCard=0,gameState.player.strengthCard=0;const manaMax=gameState.player.manaBase+gameState.player.manaStance;gameState.player.manaMax=gameState.rebelSpirit&&gameState.turn%3==0?manaMax+1:manaMax,gameState.player.mana=gameState.player.manaMax,gameState.foreverTrue&&gameState.player.stancePoints>0?(gameState.player.manaMax+=1,gameState.player.mana+=1):gameState.player.stancePoints=0,self.updateStanceBar(gameState.player),self.updateManaBar(gameState.player),self.updateHealthBar(gameState.player),self.updatePoison(gameState.player),removeIfDead(gameState.player),updateStrengthAndArmor(gameState.player),self.time.delayedCall(2200,(()=>{gameState.player.poisonText.destroy(),fadeOutGameObject(gameState.yourTurnText,200),function(numCards){gameState.endOfTurnButton.setTexture("rectangularButton"),gameState.endOfTurnButton.setInteractive();const startSlotIndex=Math.floor((gameState.slots.length-numCards)/2);for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));const card=gameState.drawPile.pop(),cardDepth=10+i+startSlotIndex;card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),card.isBeingPlayed=!1,gameState.currentCards.push(card),card.sprite.setDepth(cardDepth);const slot=gameState.slots[startSlotIndex+i];slot&&(card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot),gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),self.animateCard(card,cardDepth),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}));gameState.playersTurn=!0}(numCards),gameState.enemies.forEach((enemy=>{updateEnemyActions(),function(enemy){!function(enemy){const totalProbability=enemy.actions.reduce(((sum,action)=>sum+action.probability),0);if(1!==totalProbability){const scalingFactor=1/totalProbability;for(let action of enemy.actions)action.probability*=scalingFactor}}(enemy);let cumProb=0;for(let i=0;i<enemy.actions.length;i++)cumProb+=enemy.actions[i].probability,enemy.actions[i].cumulativeProbability=cumProb;const rand=Math.random();enemy.chosenAction=enemy.actions.find((action=>rand<action.cumulativeProbability))}(enemy),function(enemy){const actionKey="function"==typeof enemy.chosenAction.key?enemy.chosenAction.key():enemy.chosenAction.key,textConfig={fontSize:"13px",fill:"#000000"};enemy.intentionText=self.add.text(enemy.x+10,enemy.y-enemy.height/2-40,`${actionKey}`,textConfig),enemy.intentionText.setOrigin(.5,1).setDepth(11);const originalSpriteWidth=self.textures.get("listbox1").getSourceImage().width,scale=enemy.intentionText.width/originalSpriteWidth;enemy.intentionBackground=self.add.sprite(enemy.x+10,enemy.y-enemy.height/2-33,"listbox1").setScale(1.05*scale,1),enemy.intentionBackground.setInteractive().setOrigin(.5,1).setAlpha(.85).setDepth(10)}(enemy)}))}))}gameState.enemy1=Object.create(gameState.enemy),gameState.enemy1.name="Spineguard",gameState.enemy1.sprite=this.add.sprite(690,350,"skeleton1").setScale(.26).setFlipX(!1).setInteractive(),gameState.enemy1.health=50,gameState.enemy1.healthMax=50,gameState.enemy1.armor=2,gameState.enemy2=Object.create(gameState.enemy),gameState.enemy2.name="Bonebaron",gameState.enemy2.sprite=this.add.sprite(910,330,"skeleton2").setScale(.26).setFlipX(!1).setInteractive(),gameState.enemy2.health=70,gameState.enemy2.healthMax=70,gameState.enemy2.armor=2,gameState.enemies=[gameState.enemy1,gameState.enemy2],gameState.characters=[...gameState.enemies,gameState.player],gameState.characters.forEach((character=>{character.height=character.sprite.displayHeight,character.width=character.sprite.displayWidth,character.x=character.sprite.x,character.y=character.sprite.y,this.addHealthBar(character,character.healthBarColor),this.addStatsDisplay(character),this.describeCharacter(character,character.sprite)})),this.addManaBar(gameState.player),this.addStanceBar(gameState.player,"#a9a9a9"),gameState.permanents.forEach((permanent=>{const card=permanent.card,slot=permanent.slot;"kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?slot.available=!0:(card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,console.log(`Recreated permanent: ${card.key}\nfor slot ${slot.index}`),displayTokenCard(card),activatePermanentFromToken(card))})),function(){gameState.turn=0,gameState.musicTheme.stop(),self.shuffleDeck(gameState.drawPile);const{level:level,fight:fight}=self.extractLevelFightFromName(self.scene.key);gameState.startText=self.add.text(550,300,`Level ${level}\nFight ${fight}!`,{fontSize:"60px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setDepth(200).setOrigin(.5),self.time.delayedCall(350,(()=>{gameState.music.play({loop:!0,volume:.35})})),self.time.delayedCall(3e3,(()=>{fadeOutGameObject(gameState.startText,200),self.time.delayedCall(300,startPlayerTurn())}))}();function activateCard(card){if(gameState.costPlayed="function"==typeof card.cost?card.cost():card.cost,gameState.typePlayed="function"==typeof card.type?card.type():card.type,gameState.player.mana>=gameState.costPlayed&&!1===gameState.playingCard)if(gameState.player.mana-=gameState.costPlayed,self.updateManaBar(gameState.player),console.log(`activated card: ${card.key}\nCost: ${gameState.costPlayed}`),gameState.player.freedomBeforeCardPlayed="Freedom"===gameState.player.stance,card.isBeingPlayed=!0,gameState.currentCards=gameState.currentCards.filter((c=>c!==card)),card.slot&&(card.slot.available=!0),"targetSelected"===gameState.typePlayed)!function(card,handOfCards){gameState.targetingCursor.setVisible(!0),gameState.thisTurn=gameState.turn;for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.removeInteractive();for(let enemy of gameState.enemies)enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){card.isBeingPlayed&&gameState.playersTurn&&gameState.thisTurn===gameState.turn&&(card.isBeingPlayed=!1,gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,enemy));for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.setInteractive()}))}(card,gameState.currentCards);else if("targetAll"===gameState.typePlayed){gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length);const enemiesCopy=[...gameState.enemies];gameState.enemiesLength=enemiesCopy.length,enemiesCopy.forEach(((enemy,index)=>{const isLastEnemy=index===enemiesCopy.length-1;playCard(card,enemy,isLastEnemy)}))}else"permanent"===gameState.typePlayed?function(card){const slot=gameState.permanentSlots.find((slot=>slot.available));slot?("kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length)):gameState.deck=gameState.deck.filter((c=>c!==card)),card.slot.available=!0,card.sprite.destroy(),card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,gameState.permanents.push({card:card,slot:slot,tokenSprite:card.tokenSprite}),displayTokenCard(card),activatePermanentFromToken(card)):function(card){switch(self.cameras.main.shake(70,.002,!1),card.isBeingPlayed=!1,console.log(`No available slot for permanent card ${card.key}`),card.key){case"foreverTrue":depleteForeverTrue(card);break;case"rebelSpirit":depleteRebelSpirit(card);break;case"rebelHeart":depleteRebelHeart(card);break;case"bushido":depleteBushido(card);break;case"toxicAvenger":depleteToxicAvenger(card);break;case"kirisuteGomen":depleteKirisuteGomen(card);case"toxicFrets":depleteToxicFrets(card);break;case"ashenEncore":depleteAshenEncore(card);break;case"edoEruption":depleteEdoEruption(card);break;case"steelToe":depleteSteelToe(card);break;case"kamishimoUberAlles":case"hollidayInKamakura":gameState.currentCards.push(card),card.slot.available=!1}}(card)}(card):(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,gameState.player));else self.cameras.main.shake(70,.002,!1)}function playCard(card,target,isLastEnemy=!1){gameState.playingCard=!0,fadeOutGameObject(card.sprite,200),fadeOutGameObject(gameState.actionText,50),gameState.targetingCursor.setVisible(!1);const{damagePlayed:damagePlayed,firePlayed:firePlayed,stancePointsPlayed:stancePointsPlayed,poisonPlayed:poisonPlayed,healPlayed:healPlayed,strengthPlayed:strengthPlayed,armorPlayed:armorPlayed,reduceTargetArmorPlayed:reduceTargetArmorPlayed,reduceTargetStrengthPlayed:reduceTargetStrengthPlayed,drawCardPlayed:drawCardPlayed}=function(card,target,isLastEnemy=!1){const moshpitMassacreCondition="moshpitMassacre"===card.key&&gameState.player.stancePoints>0&&target.poison>0,scorchedSoulCondition="scorchedSoul"===card.key&&target.poison>0,bladesBlightCondition="bladesBlight"===card.key&&target.poison>0,roninsRotCondition="roninsRot"===card.key&&target.poison>0,kabutuEdoCondition="kabutu"===card.key&&gameState.edoEruption&&gameState.player.stancePoints>0,steelToeCondition="combatBoots"===card.key&&gameState.steelToe,knuckleFistEdoCondition="knuckleFist"===card.key&&gameState.edoEruption&&gameState.player.stancePoints<0,steelToeOutcome=gameState.player.stancePoints>0?2*(1+gameState.player.stancePoints):2;return{damagePlayed:moshpitMassacreCondition?11:getValueOrInvoke(card.damage),firePlayed:kabutuEdoCondition?2*gameState.player.stancePoints:scorchedSoulCondition?12:getValueOrInvoke(card.fire),stancePointsPlayed:kabutuEdoCondition&&isLastEnemy?-1:getValueOrInvoke(card.stancePoints),poisonPlayed:bladesBlightCondition?target.poison:getValueOrInvoke(card.poison),healPlayed:getValueOrInvoke(card.heal),strengthPlayed:getValueOrInvoke(card.strength),armorPlayed:knuckleFistEdoCondition?-gameState.player.stancePoints:getValueOrInvoke(card.armor),reduceTargetArmorPlayed:steelToeCondition?steelToeOutcome:getValueOrInvoke(card.reduceTargetArmor),reduceTargetStrengthPlayed:roninsRotCondition?target.poison:getValueOrInvoke(card.reduceTargetStrength),drawCardPlayed:getValueOrInvoke(card.drawCard)}}(card,target,isLastEnemy),damageModifyer=(1+.1*gameState.player.strength)*(1-target.armor/20),damageTotal=Math.round(Math.max(0,firePlayed+damagePlayed*damageModifyer));target!=gameState.player&&(gameState.score.damageDealt+=damageTotal,console.log(`${damagePlayed} Physical Damage and ${firePlayed} Fire Damage was dealt to ${target.name}`),target.strengthTurn-=reduceTargetStrengthPlayed,target.armor-=reduceTargetArmorPlayed,target.poison+=poisonPlayed,target.health-=damageTotal),"seppuku"===card.key||"boneShredder"===card.key?gameState.player.strengthBase+=strengthPlayed:gameState.player.strengthCard+=strengthPlayed,"libertySpikes"===card.key&&gameState.player.stancePoints>0&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),healPlayed&&(gameState.player.health=Math.min(gameState.player.health+healPlayed,gameState.player.healthMax),self.updateHealthBar(gameState.player)),gameState.player.armorCard+=armorPlayed,gameState.player.poison=Math.max(0,gameState.player.poison-card.poisonRemove),function(damageTotal,poisonPlayed,strengthPlayed,armorPlayed){const actionTextConfig={fontSize:"32px",fill:"#ff0000"};if("targetSelected"===gameState.typePlayed||"targetAll"===gameState.typePlayed){self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8});const actionTextTarget=`${damageTotal>0?`Deals ${damageTotal} damage`:""}\n\n${poisonPlayed>0?`Deals ${poisonPlayed} Poison`:""}`;gameState.actionText=self.add.text(550,300,actionTextTarget,actionTextConfig).setOrigin(.5),self.attackTweens(gameState.player,60)}else strengthPlayed>0?(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${strengthPlayed} Strength`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player)):armorPlayed>0&&(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${armorPlayed} Armor`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player))}(damageTotal,poisonPlayed,strengthPlayed,armorPlayed),gameState.player.stancePoints+stancePointsPlayed>=-3&&gameState.player.stancePoints+stancePointsPlayed<=3&&(gameState.player.stancePoints+=stancePointsPlayed,self.updateStanceBar(gameState.player)),gameState.player.freedomAfterCardPlayed="Freedom"===gameState.player.stance,!gameState.player.freedomBeforeCardPlayed&&gameState.player.freedomAfterCardPlayed&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),updateStats(target),self.updateHealthBar(target),updateStrengthAndArmor(gameState.player),removeIfDead(target),checkGameOver(),updateEnemyActions(),drawNewCards(drawCardPlayed),gameState.enemies.forEach((enemy=>{self.updateEnemyIntention(enemy)})),self.time.delayedCall(260,(()=>{gameState.playingCard=!1})),self.time.delayedCall(1500,(()=>{gameState.actionText&&gameState.actionText.destroy()}))}function initiateEnemiesTurn(){0!==gameState.enemies.length&&(gameState.enemies[gameState.currentEnemyIndex].alive?function(enemy){gameState.playersTurn&&(gameState.playersTurn=!1,enemy.turnText=self.add.text(550,300,"Enemy turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),self.time.delayedCall(1800,(()=>{fadeOutGameObject(enemy.turnText,200)})));enemy.turnComplete=!1,function(enemy){enemy.poisonText=self.add.text(570,350,"",{fontSize:"30px",fill:"#ff0000"}).setOrigin(.5),self.updatePoison(enemy),gameState.toxicAvenger&&enemy.poison>0&&updateStats(enemy);const delaytime=""!==enemy.poisonText._text||enemy.turnText?1800:800;self.time.delayedCall(delaytime,(()=>{enemy.poisonText.destroy();const chosenAction=enemy.chosenAction,actionTextConfig={fontSize:"32px",fill:"#ff0000"};if(gameState.player.poison+=chosenAction.poison,enemy.health=Math.min(enemy.health+chosenAction.heal,enemy.healthMax),enemy.strengthBase=Math.min(enemy.strengthBase+chosenAction.strength,enemy.strengthMax),updateStats(enemy),enemy.armor=Math.min(enemy.armor+chosenAction.armor,enemy.armorMax),chosenAction.damage>0||chosenAction.fire>0){const damageModifyer=(1+.1*enemy.strength)*(1-gameState.player.armor/20);self.cameras.main.shake(120,.005,!1),gameState.attackSound.play({volume:.8}),console.log(`enemy.damageTotal: ${enemy.damageTotal}`),enemy.damageTotal=Math.round(Math.max(0,chosenAction.fire+chosenAction.damage*damageModifyer)),gameState.player.health-=enemy.damageTotal,gameState.score.damageTaken+=enemy.damageTotal,gameState.actionText=self.add.text(550,300,`Deals ${enemy.damageTotal} damage`,actionTextConfig).setOrigin(.5),self.tweens.add({targets:enemy.sprite,x:enemy.sprite.x-60,duration:120,ease:"Cubic",yoyo:!0})}else chosenAction.heal>0?(gameState.healSound.play({volume:.5}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy)):(chosenAction.strength>0||chosenAction.armor>0||chosenAction.poison>0)&&(gameState.powerUpSound.play({volume:.2}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy));enemy.strengthTurn=0,function(enemy){[gameState.player,enemy].forEach((character=>{self.updateHealthBar(character),removeIfDead(character),updateStats(character)})),self.time.delayedCall(1500,(()=>{fadeOutGameObject(gameState.actionText,200),enemy.turnComplete=!0,checkGameOver()||!gameState.enemies[gameState.currentEnemyIndex].turnComplete&&gameState.enemies[gameState.currentEnemyIndex].alive||(gameState.currentEnemyIndex++,gameState.currentEnemyIndex<gameState.enemies.length?initiateEnemiesTurn():(gameState.currentEnemyIndex=0,startPlayerTurn()))}))}(enemy)}))}(enemy)}(gameState.enemies[gameState.currentEnemyIndex]):(gameState.currentEnemyIndex++,initiateEnemiesTurn()))}function updateEnemyActions(){1===gameState.turn?(gameState.enemy1.actions=[{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:4,text:"Gains 4 armor",probability:1}],gameState.enemy2.actions=[{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:4,text:"Gains 4 armor",probability:1}]):(gameState.enemy1.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 fire damage",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 15 damage",probability:.245+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(20*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:20,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 20 damage",probability:.16+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,text:"Heals 15 HP\nGains 1 armor",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 strenght",probability:.125+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:4,text:"Gains 4 armor",probability:.15+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 poison",probability:0}],gameState.enemy2.actions=[{key:"Intends to\nDeal 8 fire damage",damage:0,fire:8,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 8 fire damage",probability:.1+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(14*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:14,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 14 damage",probability:.245+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(18*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:18,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 18 damage",probability:.16+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,text:"Heals 15 HP\nGains 1 armor",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 strenght",probability:.125+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:4,text:"Gains 4 armor",probability:.15+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 poison",probability:0}])}function checkGameOver(){return gameState.player.alive?!gameState.enemies.some((enemy=>enemy.alive))&&(gameState.playersTurn=!1,function(){gameState.score.numberOfTurns+=gameState.turn,gameState.score.levelsCompleted+=1,gameState.music.stop(),self.updateManaBar(gameState.player),addHandtoDeck(),self.time.delayedCall(600,(()=>{gameState.attackSound.isPlaying&&gameState.attackSound.stop(),gameState.victorySound.play({volume:.9,rate:1}),self.clearBoard()})),gameState.actionText&&(gameState.actionText.destroy(),console.log("gameState.actionText still existed at initiateVictory and got destroyed"));const victoryTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},victoryText=self.add.text(550,300,"Victory!",victoryTextConfig).setOrigin(.5);self.time.delayedCall(2e3,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),victoryText.destroy(),function(){self.shuffleDeck(gameState.bonusCards);const gameOverTextConfig={fontSize:"40px",fill:"#000000"},rewardTextConfig={fontSize:"25px",fill:"#000000"};gameState.gameOverText=self.add.text(550,180,"Choose a reward",gameOverTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsText=self.add.text(550,400,"Add 1 card\nto your deck",rewardTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsButton=self.add.image(550,400,"rectangularButton"),gameState.rewardAddCardsButton.setScale(1.2).setInteractive().setOrigin(.5).setDepth(102),gameState.rewardAddCardsButton.on("pointerover",(function(){this.setTexture("rectangularButtonHovered")})),gameState.rewardAddCardsButton.on("pointerout",(function(){this.setTexture("rectangularButton")})),gameState.rewardAddCardsButton.on("pointerup",(function(){gameState.rewardAddCardsText.destroy(),gameState.gameOverText.destroy(),gameState.rewardAddCardsButton.destroy(),function(){console.log("rewardAddCard called"),gameState.gameOverText.destroy();const x=320,y=300,spacing=220;let bonusCards=gameState.bonusCards.slice(0,3);console.log(`bonusCards: ${bonusCards.key}`),bonusCards.forEach(((bonusCard,index)=>{bonusCard.sprite=self.add.sprite(x+index*spacing,y,bonusCard.key),bonusCard.sprite.setScale(.45).setInteractive().setDepth(102),console.log(`bonusCardsprite added for: ${bonusCard.key}`),bonusCard.sprite.on("pointerover",(()=>{gameState.cardsDealtSound.play({volume:.6}),self.cardTweens(bonusCard.sprite,.58,200)}),self),bonusCard.sprite.on("pointerout",(()=>{self.cardTweens(bonusCard.sprite,.45,400)}),self),bonusCard.sprite.on("pointerup",(()=>{let nextlevelstarting=!1;gameState.deck.push(bonusCard),"permanent"===bonusCard.type&&gameState.bonusCards.splice(gameState.bonusCards.indexOf(bonusCard),1),bonusCards.forEach((card=>{card.sprite.removeInteractive(),card!==bonusCard&&fadeOutGameObject(card.sprite,200)})),self.tweens.add({targets:bonusCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),self.add.text(550,180,"Gained 1 card",{fontSize:"40px",fill:"#000000"}).setOrigin(.5),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()}))}()}))}(),!0):(gameState.playersTurn=!1,function(){gameState.player.health=0,self.updateManaBar(gameState.player),addHandtoDeck(),gameState.music.stop(),gameState.endOfTurnButton.destroy(),gameState.actionText&&fadeOutGameObject(gameState.actionText,200);gameState.score.numberOfTurns+=gameState.turn;const gameOverTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"};gameState.gameOverText=self.add.text(550,300," Defeat!",gameOverTextConfig).setOrigin(.5),gameState.gameOverText.setInteractive();let scenetransitionstarted=!1;self.time.delayedCall(400,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),scenetransitionstarted||(gameState.gameOverText.on("pointerup",(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})),self.time.delayedCall(2500,(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})))}))}(),!0)}function startNextLevel(){self.cameras.main.fadeOut(1e3),self.time.delayedCall(1e3,(()=>{self.scene.start("Level3Fight3")}))}function activatePermanentFromToken(card){if("foreverTrue"===card.key)gameState.foreverTrue=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteForeverTrue(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelSpirit"===card.key)gameState.rebelSpirit=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelSpirit(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelHeart"===card.key)gameState.rebelHeart=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelHeart(card):self.cameras.main.shake(70,.002,!1)}));else if("bushido"===card.key)gameState.bushido=!0,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteBushido(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicAvenger"===card.key)gameState.toxicAvenger=!0,gameState.enemies.forEach((enemy=>updateStats(enemy))),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicAvenger(card):self.cameras.main.shake(70,.002,!1)}));else if("kirisuteGomen"===card.key)gameState.player.strengthMax+=5,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn&&gameState.enemies.some((enemy=>enemy.health<30))?depleteKirisuteGomen(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicFrets"===card.key)gameState.toxicFrets=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicFrets(card):self.cameras.main.shake(70,.002,!1)}));else if("ashenEncore"===card.key)gameState.ashenEncore=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteAshenEncore(card):self.cameras.main.shake(70,.002,!1)}));else if("edoEruption"===card.key)gameState.edoEruption=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteEdoEruption(card):self.cameras.main.shake(70,.002,!1)}));else if("steelToe"===card.key)gameState.steelToe=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteSteelToe(card):self.cameras.main.shake(70,.002,!1)}));else if("kamishimoUberAlles"===card.key){const tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;gameState.kamishimoUberAlles+=1,updateStrengthAndArmor(gameState.player),tokenSprite.on("pointerup",(()=>{gameState.playersTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.kamishimoUberAlles-=1,updateStrengthAndArmor(gameState.player)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}else if("hollidayInKamakura"===card.key){let tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;const turnplayed=gameState.turn,fightplayed=gameState.score.levelsCompleted;tokenSprite.on("pointerup",(()=>{const depletedDifferentTurn=turnplayed!=gameState.turn||fightplayed!=gameState.score.levelsCompleted;console.log(`depletedDifferentTurn: ${depletedDifferentTurn}\nturnplayed: ${turnplayed}\ngameState.turn: ${gameState.turn}\nfightplayed: ${fightplayed}\ngameState.score.levelsCompleted: ${gameState.score.levelsCompleted}\ngameState.playersTurn: ${gameState.playersTurn}`),gameState.playersTurn&&depletedDifferentTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.player.manaMax+=1,gameState.player.mana+=1,self.updateManaBar(gameState.player),drawNewCards(1)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}}function displayTokenCard(card){card.tokenSprite.on("pointerover",(function(){gameState.cardsDealtSound.play({volume:1.5}),card.permanentCardSprite=self.add.sprite(550,300,card.key).setScale(.55).setDepth(26)})),card.tokenSprite.on("pointerout",(function(){card.permanentCardSprite.destroy()}))}function depleteForeverTrue(card){gameState.foreverTrue=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),drawNewCards(8)}function depleteRebelSpirit(card){gameState.rebelSpirit=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.mana+=3,gameState.player.manaMax+=3,self.updateManaBar(gameState.player)}function depleteRebelHeart(card){gameState.rebelHeart=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+12),self.updateHealthBar(gameState.player)}function depleteBushido(card){gameState.bushido=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.strengthBase+=6,updateStrengthAndArmor(gameState.player)}function depleteToxicAvenger(card){gameState.toxicAvenger=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison+=4,updateStats(enemy)}))}function depleteKirisuteGomen(card){if(gameState.enemies.some((enemy=>enemy.health<30))){gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let functionActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){enemy.health<30&&functionActive?(enemy.health=0,gameState.attackSound.play({volume:1}),self.cameras.main.shake(120,.025,!1),card.tokenSlot&&(card.tokenSlot.available=!0,gameState.player.strengthMax-=5),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),removeIfDead(enemy),checkGameOver(),updateStrengthAndArmor(gameState.player)):(self.cameras.main.shake(70,.002,!1),functionActive=!1),gameState.targetingCursor.setVisible(!1)}))}))}else self.cameras.main.shake(70,.002,!1),card.slot.available=!1,gameState.currentCards.some((card=>"kirisuteGomen"===card.key))||(gameState.currentCards.push(card),gameState.player.mana+=1,self.updateManaBar(gameState.player))}function depleteToxicFrets(card){gameState.toxicFrets=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison>0&&(enemy.health-=2*enemy.poison,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver())}))}function depleteAshenEncore(card){console.log("DEBUG: depleteAshenEncore started"),gameState.ashenEncore=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card));const ashenEncoreDepleteText=self.add.text(550,350,"Deals 12 firedamage\n to all enemies",{fontSize:"32px",fill:"#ff0000"}).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDepleteText.destroy()})),gameState.enemies.forEach((enemy=>{enemy.health-=12,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver()}))}function depleteEdoEruption(card){gameState.edoEruption=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card))}function depleteSteelToe(card){gameState.steelToe=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let depleteSteelToeActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){depleteSteelToeActive&&(enemy.armor-=7,updateStats(enemy),gameState.attackSound.play({volume:.6}),self.cameras.main.shake(100,.012,!1),gameState.targetingCursor.setVisible(!1),depleteSteelToeActive=!1)}))}))}function updateStrengthAndArmor(character){let strengthBushido=0;gameState.endOfTurnButtonPressed?(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard+character.armorStance),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+strengthBushido)):(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+character.strengthCard+strengthBushido)),gameState.kamishimoUberAlles>0&&gameState.player.stancePoints<0&&(character.strength=Math.min(character.strengthMax,character.strength-gameState.player.stancePoints*gameState.kamishimoUberAlles)),updateStats(character)}function updateStats(character){character!=gameState.player&&(character.strength=character.strengthBase+character.strengthTurn,gameState.toxicAvenger&&character.poison>0&&(character.strength-=4)),character.armorText.setText(`${character.armor}/${character.armorMax}`),character.strengthText.setText(`${character.strength}/${character.strengthMax}`)}function removeIfDead(character){if(character.health<=0){if(character.health=0,character.sprite.removeInteractive(),character.alive=!1,character.turnComplete=!0,character!=gameState.player){const indexEnemies=gameState.enemies.indexOf(character),indexCharacters=gameState.characters.indexOf(character);-1!==indexEnemies&&gameState.enemies.splice(indexEnemies,1),-1!==indexCharacters&&gameState.characters.splice(indexCharacters,1)}[character.sprite,character.healthBarBackground,character.healthBar,character.healthBarText,character.manaBarBackground,character.manaBar,character.manaBarText,character.strengthAndArmorImage,character.strengthText,character.armorText,character.descriptionBackground,character.descriptionText,character.intentionText,character.intentionBackground].forEach((object=>{fadeOutGameObject(object,500)}))}}function addHandtoDeck(){for(;gameState.currentCards.length>0;){let card=gameState.currentCards.pop();card.slot.available||(card.slot.available=!0),gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),fadeOutGameObject(card.sprite,200)}}function drawNewCards(numCards){const numCardsLimit=Math.min(gameState.deck.length,8),numOfFreeSlots=gameState.slots.filter((slot=>slot.available)).length;numCards=numOfFreeSlots<numCards?numOfFreeSlots:numCards;for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{if(gameState.currentCards.length<numCardsLimit){0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));let card=gameState.drawPile.pop();card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),console.log(`card added: ${card.key}`),card.isBeingPlayed=!1,gameState.currentCards.push(card);let availableSlots=gameState.slots.filter((slot=>slot.available)),slot=availableSlots[Math.floor(availableSlots.length/2)];if(slot){card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot;let cardDepth=10+slot.index;card.sprite.setDepth(cardDepth),self.animateCard(card,cardDepth)}gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),gameState.ashenEncore&&gameState.enemies.forEach((enemy=>{if(enemy.health-=4,self.updateHealthBar(enemy),removeIfDead(enemy),"undefined"==typeof ashenEncoreText||!ashenEncoreText){const ashenEncoreConfig={fontSize:"32px",fill:"#ff0000"},ashenEncoreKey="Deals 4 fire damage to all enemies",ashenEncoreDrawText=self.add.text(550,350,ashenEncoreKey,ashenEncoreConfig).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDrawText.destroy()}))}})),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}else self.cameras.main.shake(70,.002,!1)}))}function getValueOrInvoke(cardProperty){return"function"==typeof cardProperty?cardProperty():cardProperty}function fadeOutGameObject(gameObject,duration){gameObject&&self.tweens.add({targets:gameObject,alpha:0,ease:"Power1",duration:duration,onComplete:()=>{gameObject.destroy()}},self)}gameState.slots=[{available:!0,x:230,y:640,index:0,angle:-12},{available:!0,x:320,y:610,index:1,angle:-8},{available:!0,x:410,y:590,index:2,angle:-4},{available:!0,x:500,y:580,index:3,angle:0},{available:!0,x:590,y:590,index:4,angle:4},{available:!0,x:680,y:610,index:5,angle:8},{available:!0,x:770,y:640,index:6,angle:12},{available:!0,x:860,y:670,index:7,angle:16}],gameState.endOfTurnButton.on("pointerup",(function(){gameState.currentEnemyIndex=0,gameState.targetingCursor.visible||!gameState.playersTurn?self.cameras.main.shake(70,.002,!1):(this.setTexture("rectangularButtonPressed"),this.removeInteractive(),gameState.buttonPressedSound.play(),gameState.endOfTurnButtonPressed=!0,addHandtoDeck(),updateStrengthAndArmor(gameState.player),updateEnemyActions(),gameState.rebelHeart&&(gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+Math.abs(gameState.player.stancePoints)),self.updateHealthBar(gameState.player)),gameState.enemies.forEach((enemy=>{enemy.turnComplete=!enemy.alive,fadeOutGameObject(enemy.intentionText,200),fadeOutGameObject(enemy.intentionBackground,200)})),0!=gameState.player.mana&&(gameState.player.mana=0,self.updateManaBar(gameState.player)),self.time.delayedCall(100,(()=>{gameState.actionText&&gameState.actionText.destroy(),initiateEnemiesTurn()})))})),"admin"===gameState.playerName&&(gameState.getManaButton=self.add.sprite(550,200,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.getManaText=self.add.text(550,200,"Get Mana",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.getManaButton.on("pointerup",(()=>{gameState.playersTurn&&(gameState.player.mana=gameState.player.manaMax,self.updateManaBar(gameState.player),console.log("mana gained"))})),gameState.drawCardButton=self.add.sprite(550,300,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.drawCardText=self.add.text(550,300,"Draw Card",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.drawCardButton.on("pointerup",(()=>{gameState.playersTurn&&(drawNewCards(1),console.log("card drawn"))})),gameState.killEnemyButton=self.add.sprite(550,400,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.killEnemyText=self.add.text(550,400,"Kill Enemy",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.killEnemyButton.on("pointerup",(()=>{if(gameState.enemies.some((enemy=>enemy.health>0&&gameState.playersTurn))){const enemy=gameState.enemies.find((enemy=>enemy.health>0));enemy.health=0,removeIfDead(enemy),checkGameOver(),console.log(`${enemy.name} killed`)}})))}update(){gameState.targetingCursor.visible&&(gameState.targetingCursor.x=this.input.mousePointer.x,gameState.targetingCursor.y=this.input.mousePointer.y)}}class Level3Fight3 extends BaseScene{self;constructor(){super("Level3Fight3")}preload(){this.load.image("bakgrunnLair3","assets/images/bakgrunnLair3.jpg"),this.load.image("wraith1","assets/images/sprites/wraith1.png"),this.load.image("wraith2","assets/images/sprites/wraith2.png")}create(){const self=this;function startPlayerTurn(){let numCards=gameState.player.numCardsBase+gameState.player.numCardsStance;gameState.turn+=1,gameState.endOfTurnButtonPressed=!1,gameState.yourTurnText=self.add.text(550,300,"Your turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),gameState.player.poisonText=self.add.text(570,350,"",{fontSize:"25px",fill:"#ff0000"}).setOrigin(.5),console.log(`player's turn number ${gameState.turn} has started`),gameState.player.armorCard=0,gameState.player.strengthCard=0;const manaMax=gameState.player.manaBase+gameState.player.manaStance;gameState.player.manaMax=gameState.rebelSpirit&&gameState.turn%3==0?manaMax+1:manaMax,gameState.player.mana=gameState.player.manaMax,gameState.foreverTrue&&gameState.player.stancePoints>0?(gameState.player.manaMax+=1,gameState.player.mana+=1):gameState.player.stancePoints=0,self.updateStanceBar(gameState.player),self.updateManaBar(gameState.player),self.updateHealthBar(gameState.player),self.updatePoison(gameState.player),removeIfDead(gameState.player),updateStrengthAndArmor(gameState.player),self.time.delayedCall(2200,(()=>{gameState.player.poisonText.destroy(),fadeOutGameObject(gameState.yourTurnText,200),function(numCards){gameState.endOfTurnButton.setTexture("rectangularButton"),gameState.endOfTurnButton.setInteractive();const startSlotIndex=Math.floor((gameState.slots.length-numCards)/2);for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));const card=gameState.drawPile.pop(),cardDepth=10+i+startSlotIndex;card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),card.isBeingPlayed=!1,gameState.currentCards.push(card),card.sprite.setDepth(cardDepth);const slot=gameState.slots[startSlotIndex+i];slot&&(card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot),gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),self.animateCard(card,cardDepth),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}));gameState.playersTurn=!0}(numCards),gameState.enemies.forEach((enemy=>{updateEnemyActions(),function(enemy){!function(enemy){const totalProbability=enemy.actions.reduce(((sum,action)=>sum+action.probability),0);if(1!==totalProbability){const scalingFactor=1/totalProbability;for(let action of enemy.actions)action.probability*=scalingFactor}}(enemy);let cumProb=0;for(let i=0;i<enemy.actions.length;i++)cumProb+=enemy.actions[i].probability,enemy.actions[i].cumulativeProbability=cumProb;const rand=Math.random();enemy.chosenAction=enemy.actions.find((action=>rand<action.cumulativeProbability))}(enemy),function(enemy){const actionKey="function"==typeof enemy.chosenAction.key?enemy.chosenAction.key():enemy.chosenAction.key,textConfig={fontSize:"13px",fill:"#000000"};enemy.intentionText=self.add.text(enemy.x+10,enemy.y-enemy.height/2-40,`${actionKey}`,textConfig),enemy.intentionText.setOrigin(.5,1).setDepth(11);const originalSpriteWidth=self.textures.get("listbox1").getSourceImage().width,scale=enemy.intentionText.width/originalSpriteWidth;enemy.intentionBackground=self.add.sprite(enemy.x+10,enemy.y-enemy.height/2-33,"listbox1").setScale(1.05*scale,1),enemy.intentionBackground.setInteractive().setOrigin(.5,1).setAlpha(.85).setDepth(10)}(enemy)}))}))}this.baseCreate("bakgrunnLair3",.7),this.resetPlayer(gameState.player,.35),this.addButtons(),function(){gameState.drawPileImage=self.add.image(120,600,"deck"),gameState.drawPileImage.setScale(.13).setOrigin(.5,.5).setInteractive();gameState.drawPileText=self.add.text(120,600,gameState.drawPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.drawPileText.setDepth(100).setOrigin(.5,.5),gameState.drawPileImage.on("pointerover",(function(){if(gameState.drawPile.length>0){const cardsPerRow=gameState.drawPile.length<12?4:6,cardSpacing=105,startX=gameState.drawPile.length<12?400:250,startY=150;gameState.drawPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.drawPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]}))}(),gameState.discardPileText=self.add.text(980,600,gameState.discardPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.discardPileText.setDepth(100).setOrigin(.5,.5),gameState.discardPileImage=self.add.image(980,600,"deck"),gameState.discardPileImage.setScale(.13).setOrigin(.5,.5).setInteractive().setTint(16711680),gameState.discardPileImage.on("pointerover",(function(){if(gameState.discardPile.length>0){const cardsPerRow=gameState.discardPile.length<12?4:6,cardSpacing=105,startX=gameState.discardPile.length<12?400:250,startY=150;gameState.discardPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.discardPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]})),gameState.kamishimoUberAlles=0,gameState.kirisuteGomen=!1,gameState.toxicFrets=!1,gameState.ashenEncore=!1,gameState.edoEruption=!1,gameState.steelToe=!1,gameState.currentCards=[],gameState.cardImages=[],gameState.enemy1=Object.create(gameState.enemy),gameState.enemy1.name="Soulripper",gameState.enemy1.sprite=this.add.sprite(670,340,"wraith2").setScale(.26).setFlipX(!1).setInteractive(),gameState.enemy1.health=60,gameState.enemy1.healthMax=60,gameState.enemy1.armor=2,gameState.enemy2=Object.create(gameState.enemy),gameState.enemy2.name="Lord of Darkness",gameState.enemy2.sprite=this.add.sprite(890,330,"wraith1").setScale(.27).setFlipX(!1).setInteractive(),gameState.enemy2.health=100,gameState.enemy2.healthMax=100,gameState.enemy2.armor=2,gameState.enemies=[gameState.enemy1,gameState.enemy2],gameState.characters=[...gameState.enemies,gameState.player],gameState.characters.forEach((character=>{character.height=character.sprite.displayHeight,character.width=character.sprite.displayWidth,character.x=character.sprite.x,character.y=character.sprite.y,this.addHealthBar(character,character.healthBarColor),this.addStatsDisplay(character),this.describeCharacter(character,character.sprite)})),this.addManaBar(gameState.player),this.addStanceBar(gameState.player,"#a9a9a9"),gameState.permanents.forEach((permanent=>{const card=permanent.card,slot=permanent.slot;"kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?slot.available=!0:(card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,console.log(`Recreated permanent: ${card.key}\nfor slot ${slot.index}`),displayTokenCard(card),activatePermanentFromToken(card))})),function(){gameState.turn=0,gameState.musicTheme.stop(),self.shuffleDeck(gameState.drawPile);const{level:level,fight:fight}=self.extractLevelFightFromName(self.scene.key);gameState.startText=self.add.text(550,300,`Level ${level}\nFight ${fight}!`,{fontSize:"60px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setDepth(200).setOrigin(.5),self.time.delayedCall(350,(()=>{gameState.music.play({loop:!0,volume:.35})})),self.time.delayedCall(3e3,(()=>{fadeOutGameObject(gameState.startText,200),self.time.delayedCall(300,startPlayerTurn())}))}();function activateCard(card){if(gameState.costPlayed="function"==typeof card.cost?card.cost():card.cost,gameState.typePlayed="function"==typeof card.type?card.type():card.type,gameState.player.mana>=gameState.costPlayed&&!1===gameState.playingCard)if(gameState.player.mana-=gameState.costPlayed,self.updateManaBar(gameState.player),console.log(`activated card: ${card.key}\nCost: ${gameState.costPlayed}`),gameState.player.freedomBeforeCardPlayed="Freedom"===gameState.player.stance,card.isBeingPlayed=!0,gameState.currentCards=gameState.currentCards.filter((c=>c!==card)),card.slot&&(card.slot.available=!0),"targetSelected"===gameState.typePlayed)!function(card,handOfCards){gameState.targetingCursor.setVisible(!0),gameState.thisTurn=gameState.turn;for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.removeInteractive();for(let enemy of gameState.enemies)enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){card.isBeingPlayed&&gameState.playersTurn&&gameState.thisTurn===gameState.turn&&(card.isBeingPlayed=!1,gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,enemy));for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.setInteractive()}))}(card,gameState.currentCards);else if("targetAll"===gameState.typePlayed){gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length);const enemiesCopy=[...gameState.enemies];gameState.enemiesLength=enemiesCopy.length,enemiesCopy.forEach(((enemy,index)=>{const isLastEnemy=index===enemiesCopy.length-1;playCard(card,enemy,isLastEnemy)}))}else"permanent"===gameState.typePlayed?function(card){const slot=gameState.permanentSlots.find((slot=>slot.available));slot?("kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length)):gameState.deck=gameState.deck.filter((c=>c!==card)),card.slot.available=!0,card.sprite.destroy(),card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,gameState.permanents.push({card:card,slot:slot,tokenSprite:card.tokenSprite}),displayTokenCard(card),activatePermanentFromToken(card)):function(card){switch(self.cameras.main.shake(70,.002,!1),card.isBeingPlayed=!1,console.log(`No available slot for permanent card ${card.key}`),card.key){case"foreverTrue":depleteForeverTrue(card);break;case"rebelSpirit":depleteRebelSpirit(card);break;case"rebelHeart":depleteRebelHeart(card);break;case"bushido":depleteBushido(card);break;case"toxicAvenger":depleteToxicAvenger(card);break;case"kirisuteGomen":depleteKirisuteGomen(card);case"toxicFrets":depleteToxicFrets(card);break;case"ashenEncore":depleteAshenEncore(card);break;case"edoEruption":depleteEdoEruption(card);break;case"steelToe":depleteSteelToe(card);break;case"kamishimoUberAlles":case"hollidayInKamakura":gameState.currentCards.push(card),card.slot.available=!1}}(card)}(card):(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,gameState.player));else self.cameras.main.shake(70,.002,!1)}function playCard(card,target,isLastEnemy=!1){gameState.playingCard=!0,fadeOutGameObject(card.sprite,200),fadeOutGameObject(gameState.actionText,50),gameState.targetingCursor.setVisible(!1);const{damagePlayed:damagePlayed,firePlayed:firePlayed,stancePointsPlayed:stancePointsPlayed,poisonPlayed:poisonPlayed,healPlayed:healPlayed,strengthPlayed:strengthPlayed,armorPlayed:armorPlayed,reduceTargetArmorPlayed:reduceTargetArmorPlayed,reduceTargetStrengthPlayed:reduceTargetStrengthPlayed,drawCardPlayed:drawCardPlayed}=function(card,target,isLastEnemy=!1){const moshpitMassacreCondition="moshpitMassacre"===card.key&&gameState.player.stancePoints>0&&target.poison>0,scorchedSoulCondition="scorchedSoul"===card.key&&target.poison>0,bladesBlightCondition="bladesBlight"===card.key&&target.poison>0,roninsRotCondition="roninsRot"===card.key&&target.poison>0,kabutuEdoCondition="kabutu"===card.key&&gameState.edoEruption&&gameState.player.stancePoints>0,steelToeCondition="combatBoots"===card.key&&gameState.steelToe,knuckleFistEdoCondition="knuckleFist"===card.key&&gameState.edoEruption&&gameState.player.stancePoints<0,steelToeOutcome=gameState.player.stancePoints>0?2*(1+gameState.player.stancePoints):2;return{damagePlayed:moshpitMassacreCondition?11:getValueOrInvoke(card.damage),firePlayed:1.5*(kabutuEdoCondition?2*gameState.player.stancePoints:scorchedSoulCondition?12:getValueOrInvoke(card.fire)),stancePointsPlayed:kabutuEdoCondition&&isLastEnemy?-1:getValueOrInvoke(card.stancePoints),poisonPlayed:bladesBlightCondition?target.poison:getValueOrInvoke(card.poison),healPlayed:getValueOrInvoke(card.heal),strengthPlayed:getValueOrInvoke(card.strength),armorPlayed:knuckleFistEdoCondition?-gameState.player.stancePoints:getValueOrInvoke(card.armor),reduceTargetArmorPlayed:steelToeCondition?steelToeOutcome:getValueOrInvoke(card.reduceTargetArmor),reduceTargetStrengthPlayed:roninsRotCondition?target.poison:getValueOrInvoke(card.reduceTargetStrength),drawCardPlayed:getValueOrInvoke(card.drawCard)}}(card,target,isLastEnemy),damageModifyer=(1+.1*gameState.player.strength)*(1-target.armor/20),damageTotal=Math.round(Math.max(0,firePlayed+damagePlayed*damageModifyer));target!=gameState.player&&(gameState.score.damageDealt+=damageTotal,console.log(`${damagePlayed} Physical Damage and ${firePlayed} Fire Damage was dealt to ${target.name}`),target.strengthTurn-=reduceTargetStrengthPlayed,target.armor-=reduceTargetArmorPlayed,target.poison+=poisonPlayed,target.health-=damageTotal),"seppuku"===card.key||"boneShredder"===card.key?gameState.player.strengthBase+=strengthPlayed:gameState.player.strengthCard+=strengthPlayed,"libertySpikes"===card.key&&gameState.player.stancePoints>0&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),healPlayed&&(gameState.player.health=Math.min(gameState.player.health+healPlayed,gameState.player.healthMax),self.updateHealthBar(gameState.player)),gameState.player.armorCard+=armorPlayed,gameState.player.poison=Math.max(0,gameState.player.poison-card.poisonRemove),function(damageTotal,poisonPlayed,strengthPlayed,armorPlayed){const actionTextConfig={fontSize:"32px",fill:"#ff0000"};if("targetSelected"===gameState.typePlayed||"targetAll"===gameState.typePlayed){self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8});const actionTextTarget=`${damageTotal>0?`Deals ${damageTotal} damage`:""}\n\n${poisonPlayed>0?`Deals ${poisonPlayed} Poison`:""}`;gameState.actionText=self.add.text(550,300,actionTextTarget,actionTextConfig).setOrigin(.5),self.attackTweens(gameState.player,60)}else strengthPlayed>0?(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${strengthPlayed} Strength`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player)):armorPlayed>0&&(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${armorPlayed} Armor`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player))}(damageTotal,poisonPlayed,strengthPlayed,armorPlayed),gameState.player.stancePoints+stancePointsPlayed>=-3&&gameState.player.stancePoints+stancePointsPlayed<=3&&(gameState.player.stancePoints+=stancePointsPlayed,self.updateStanceBar(gameState.player)),gameState.player.freedomAfterCardPlayed="Freedom"===gameState.player.stance,!gameState.player.freedomBeforeCardPlayed&&gameState.player.freedomAfterCardPlayed&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),updateStats(target),self.updateHealthBar(target),updateStrengthAndArmor(gameState.player),removeIfDead(target),checkGameOver(),updateEnemyActions(),drawNewCards(drawCardPlayed),gameState.enemies.forEach((enemy=>{self.updateEnemyIntention(enemy)})),self.time.delayedCall(260,(()=>{gameState.playingCard=!1})),self.time.delayedCall(1500,(()=>{gameState.actionText&&gameState.actionText.destroy()}))}function initiateEnemiesTurn(){0!==gameState.enemies.length&&(gameState.enemies[gameState.currentEnemyIndex].alive?function(enemy){gameState.playersTurn&&(gameState.playersTurn=!1,enemy.turnText=self.add.text(550,300,"Enemy turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),self.time.delayedCall(1800,(()=>{fadeOutGameObject(enemy.turnText,200)})));enemy.turnComplete=!1,function(enemy){enemy.poisonText=self.add.text(570,350,"",{fontSize:"30px",fill:"#ff0000"}).setOrigin(.5),self.updatePoison(enemy),gameState.toxicAvenger&&enemy.poison>0&&updateStats(enemy);const delaytime=""!==enemy.poisonText._text||enemy.turnText?1800:800;self.time.delayedCall(delaytime,(()=>{enemy.poisonText.destroy();const chosenAction=enemy.chosenAction,actionTextConfig={fontSize:"32px",fill:"#ff0000"};if(gameState.player.poison+=chosenAction.poison,enemy.health=Math.min(enemy.health+chosenAction.heal,enemy.healthMax),enemy.strengthBase=Math.min(enemy.strengthBase+chosenAction.strength,enemy.strengthMax),updateStats(enemy),enemy.armor=Math.min(enemy.armor+chosenAction.armor,enemy.armorMax),chosenAction.damage>0||chosenAction.fire>0){const damageModifyer=(1+.1*enemy.strength)*(1-gameState.player.armor/20);self.cameras.main.shake(120,.005,!1),gameState.attackSound.play({volume:.8}),console.log(`enemy.damageTotal: ${enemy.damageTotal}`),enemy.damageTotal=Math.round(Math.max(0,chosenAction.fire+chosenAction.damage*damageModifyer)),gameState.player.health-=enemy.damageTotal,gameState.score.damageTaken+=enemy.damageTotal,gameState.actionText=self.add.text(550,300,`Deals ${enemy.damageTotal} damage`,actionTextConfig).setOrigin(.5),self.tweens.add({targets:enemy.sprite,x:enemy.sprite.x-60,duration:120,ease:"Cubic",yoyo:!0})}else chosenAction.heal>0?(gameState.healSound.play({volume:.5}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy)):(chosenAction.strength>0||chosenAction.armor>0||chosenAction.poison>0)&&(gameState.powerUpSound.play({volume:.2}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy));enemy.strengthTurn=0,function(enemy){[gameState.player,enemy].forEach((character=>{self.updateHealthBar(character),removeIfDead(character),updateStats(character)})),self.time.delayedCall(1500,(()=>{fadeOutGameObject(gameState.actionText,200),enemy.turnComplete=!0,checkGameOver()||!gameState.enemies[gameState.currentEnemyIndex].turnComplete&&gameState.enemies[gameState.currentEnemyIndex].alive||(gameState.currentEnemyIndex++,gameState.currentEnemyIndex<gameState.enemies.length?initiateEnemiesTurn():(gameState.currentEnemyIndex=0,startPlayerTurn()))}))}(enemy)}))}(enemy)}(gameState.enemies[gameState.currentEnemyIndex]):(gameState.currentEnemyIndex++,initiateEnemiesTurn()))}function updateEnemyActions(){gameState.enemy1.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 fire damage",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 15 damage",probability:.235+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(20*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:20,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 20 damage",probability:.17+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,text:"Heals 15 HP\nGains 1 armor",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 strenght",probability:.125+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:4,text:"Gains 4 armor",probability:.15+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 poison",probability:0}],gameState.enemy2.actions=[{key:"Intends to\nDeal 10 fire damage",damage:0,fire:10,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 10 fire damage",probability:.1+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 15 damage",probability:.235+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(20*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:20,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 20 damage",probability:.17+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,text:"Heals 15 HP\nGains 1 armor",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:0,armor:0,text:"Heals 25 HP",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.05},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,text:"Gains 3 strenght",probability:.125+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:4,text:"Gains 4 armor",probability:.15+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 5 poison",probability:0}]}function checkGameOver(){return gameState.player.alive?!gameState.enemies.some((enemy=>enemy.alive))&&(gameState.playersTurn=!1,function(){gameState.score.numberOfTurns+=gameState.turn,gameState.score.levelsCompleted+=1,gameState.music.stop(),self.updateManaBar(gameState.player),addHandtoDeck(),self.time.delayedCall(600,(()=>{gameState.attackSound.isPlaying&&gameState.attackSound.stop(),gameState.victorySound.play({volume:.9,rate:1}),self.clearBoard()})),gameState.actionText&&(gameState.actionText.destroy(),console.log("gameState.actionText still existed at initiateVictory and got destroyed"));const victoryTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},victoryText=self.add.text(550,300,"Victory!",victoryTextConfig).setOrigin(.5);self.time.delayedCall(2e3,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),victoryText.destroy(),function(){self.shuffleDeck(gameState.bonusCards);const gameOverTextConfig={fontSize:"40px",fill:"#000000"},rewardTextConfig={fontSize:"25px",fill:"#000000"};gameState.gameOverText=self.add.text(550,180,"Choose a reward",gameOverTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsButton=self.add.image(550,350,"rectangularButton"),gameState.rewardAddCardsButton.setScale(1.2).setInteractive().setOrigin(.5).setDepth(102),gameState.rewardAddCardsText=self.add.text(550,350,"Add 1 card\nto your deck",rewardTextConfig).setOrigin(.5).setDepth(103),gameState.rewardRemoveCardButton=self.add.image(550,500,"rectangularButton"),gameState.rewardRemoveCardButton.setScale(1.2).setInteractive().setOrigin(.5).setDepth(102),gameState.rewardRemoveCardText=self.add.text(550,500,"Remove 1 card\nfrom your deck",rewardTextConfig).setOrigin(.5).setDepth(103),gameState.rewardButtons=[gameState.rewardAddCardsButton,gameState.rewardRemoveCardButton],gameState.rewardTexts=[gameState.rewardAddCardsText,gameState.rewardRemoveCardText,gameState.gameOverText],gameState.rewardButtons.forEach((button=>{button.on("pointerover",(function(){this.setTexture("rectangularButtonHovered")})),button.on("pointerout",(function(){this.setTexture("rectangularButton")}))})),gameState.rewardAddCardsButton.on("pointerup",(function(){gameState.rewardTexts.forEach((text=>text.destroy())),gameState.rewardButtons.forEach((button=>button.destroy())),function(){console.log("rewardAddCard called"),gameState.gameOverText.destroy();const x=320,y=300,spacing=220;let bonusCards=gameState.bonusCards.slice(0,3);console.log(`bonusCards: ${bonusCards.key}`),bonusCards.forEach(((bonusCard,index)=>{bonusCard.sprite=self.add.sprite(x+index*spacing,y,bonusCard.key),bonusCard.sprite.setScale(.45).setInteractive().setDepth(102),console.log(`bonusCardsprite added for: ${bonusCard.key}`),bonusCard.sprite.on("pointerover",(()=>{gameState.cardsDealtSound.play({volume:.6}),self.cardTweens(bonusCard.sprite,.58,200)}),self),bonusCard.sprite.on("pointerout",(()=>{self.cardTweens(bonusCard.sprite,.45,400)}),self),bonusCard.sprite.on("pointerup",(()=>{let nextlevelstarting=!1;gameState.deck.push(bonusCard),"permanent"===bonusCard.type&&gameState.bonusCards.splice(gameState.bonusCards.indexOf(bonusCard),1),bonusCards.forEach((card=>{card.sprite.removeInteractive(),card!==bonusCard&&fadeOutGameObject(card.sprite,200)})),self.tweens.add({targets:bonusCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),self.add.text(550,180,"Gained 1 card",{fontSize:"40px",fill:"#000000"}).setOrigin(.5),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()})),gameState.rewardRemoveCardButton.on("pointerup",(function(){gameState.rewardTexts.forEach((text=>text.destroy())),gameState.rewardButtons.forEach((button=>button.destroy())),gameState.rewardAddCardsButton.destroy(),function(){console.log("button pressed"),gameState.rewardButtons.forEach((button=>button.destroy())),gameState.rewardTexts.forEach((text=>text.destroy()));const cardsPerRow=4,x=300,y=250,spacing=120,deck=gameState.deck;deck.forEach((card=>console.log(card.key))),deck.forEach(((deckCard,index)=>{let xPos=x+index%cardsPerRow*spacing,yPos=y+Math.floor(index/cardsPerRow)*spacing,cardDepth=110+index;deckCard.sprite=self.add.sprite(xPos,yPos,deckCard.key).setScale(.27).setInteractive().setDepth(cardDepth),deckCard.sprite.on("pointerover",(function(){gameState.cardsDealtSound.play({volume:.6}),self.cardTweens(deckCard.sprite,.4,200),deckCard.sprite.setDepth(200)}),this),deckCard.sprite.on("pointerout",(function(){self.cardTweens(deckCard.sprite,.27,400),deckCard.sprite.setDepth(cardDepth)}),this),deckCard.sprite.on("pointerup",(function(){let nextlevelstarting=!1;console.log(`Deck length before removal: ${gameState.deck.length}`),deck.splice(deck.indexOf(deckCard),1),deck.forEach((card=>{card.sprite.removeInteractive(),card!==deckCard&&fadeOutGameObject(deckCard.sprite,200)})),self.tweens.add({targets:deckCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),self.add.text(550,180,"Removed 1 card",{fontSize:"40px",fill:"#000000"}).setOrigin(.5),console.log(`Deck length after removal: ${gameState.deck.length}`),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()}))}()}))}(),!0):(gameState.playersTurn=!1,function(){gameState.player.health=0,self.updateManaBar(gameState.player),addHandtoDeck(),gameState.music.stop(),gameState.endOfTurnButton.destroy(),gameState.actionText&&fadeOutGameObject(gameState.actionText,200);gameState.score.numberOfTurns+=gameState.turn,gameState.gameOverText=self.add.text(550,300," Defeat!",{fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setOrigin(.5),gameState.gameOverText.setInteractive();let scenetransitionstarted=!1;self.time.delayedCall(400,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),scenetransitionstarted||(gameState.gameOverText.on("pointerup",(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})),self.time.delayedCall(2500,(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})))}))}(),!0)}function startNextLevel(){self.cameras.main.fadeOut(1e3),self.time.delayedCall(1e3,(()=>{self.scene.start("Level4Fight1")}))}function activatePermanentFromToken(card){if("foreverTrue"===card.key)gameState.foreverTrue=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteForeverTrue(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelSpirit"===card.key)gameState.rebelSpirit=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelSpirit(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelHeart"===card.key)gameState.rebelHeart=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelHeart(card):self.cameras.main.shake(70,.002,!1)}));else if("bushido"===card.key)gameState.bushido=!0,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteBushido(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicAvenger"===card.key)gameState.toxicAvenger=!0,gameState.enemies.forEach((enemy=>updateStats(enemy))),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicAvenger(card):self.cameras.main.shake(70,.002,!1)}));else if("kirisuteGomen"===card.key)gameState.player.strengthMax+=5,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn&&gameState.enemies.some((enemy=>enemy.health<30))?depleteKirisuteGomen(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicFrets"===card.key)gameState.toxicFrets=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicFrets(card):self.cameras.main.shake(70,.002,!1)}));else if("ashenEncore"===card.key)gameState.ashenEncore=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteAshenEncore(card):self.cameras.main.shake(70,.002,!1)}));else if("edoEruption"===card.key)gameState.edoEruption=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteEdoEruption(card):self.cameras.main.shake(70,.002,!1)}));else if("steelToe"===card.key)gameState.steelToe=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteSteelToe(card):self.cameras.main.shake(70,.002,!1)}));else if("kamishimoUberAlles"===card.key){const tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;gameState.kamishimoUberAlles+=1,updateStrengthAndArmor(gameState.player),tokenSprite.on("pointerup",(()=>{gameState.playersTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.kamishimoUberAlles-=1,updateStrengthAndArmor(gameState.player)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}else if("hollidayInKamakura"===card.key){let tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;const turnplayed=gameState.turn,fightplayed=gameState.score.levelsCompleted;tokenSprite.on("pointerup",(()=>{const depletedDifferentTurn=turnplayed!=gameState.turn||fightplayed!=gameState.score.levelsCompleted;console.log(`depletedDifferentTurn: ${depletedDifferentTurn}\nturnplayed: ${turnplayed}\ngameState.turn: ${gameState.turn}\nfightplayed: ${fightplayed}\ngameState.score.levelsCompleted: ${gameState.score.levelsCompleted}\ngameState.playersTurn: ${gameState.playersTurn}`),gameState.playersTurn&&depletedDifferentTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.player.manaMax+=1,gameState.player.mana+=1,self.updateManaBar(gameState.player),drawNewCards(1)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}}function displayTokenCard(card){card.tokenSprite.on("pointerover",(function(){gameState.cardsDealtSound.play({volume:1.5}),card.permanentCardSprite=self.add.sprite(550,300,card.key).setScale(.55).setDepth(26)})),card.tokenSprite.on("pointerout",(function(){card.permanentCardSprite.destroy()}))}function depleteForeverTrue(card){gameState.foreverTrue=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),drawNewCards(8)}function depleteRebelSpirit(card){gameState.rebelSpirit=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.mana+=3,gameState.player.manaMax+=3,self.updateManaBar(gameState.player)}function depleteRebelHeart(card){gameState.rebelHeart=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+12),self.updateHealthBar(gameState.player)}function depleteBushido(card){gameState.bushido=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.strengthBase+=6,updateStrengthAndArmor(gameState.player)}function depleteToxicAvenger(card){gameState.toxicAvenger=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison+=4,updateStats(enemy)}))}function depleteKirisuteGomen(card){if(gameState.enemies.some((enemy=>enemy.health<30))){gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let functionActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){enemy.health<30&&functionActive?(enemy.health=0,gameState.attackSound.play({volume:1}),self.cameras.main.shake(120,.025,!1),card.tokenSlot&&(card.tokenSlot.available=!0,gameState.player.strengthMax-=5),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),removeIfDead(enemy),checkGameOver(),updateStrengthAndArmor(gameState.player)):(self.cameras.main.shake(70,.002,!1),functionActive=!1),gameState.targetingCursor.setVisible(!1)}))}))}else self.cameras.main.shake(70,.002,!1),card.slot.available=!1,gameState.currentCards.some((card=>"kirisuteGomen"===card.key))||(gameState.currentCards.push(card),gameState.player.mana+=1,self.updateManaBar(gameState.player))}function depleteToxicFrets(card){gameState.toxicFrets=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison>0&&(enemy.health-=2*enemy.poison,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver())}))}function depleteAshenEncore(card){gameState.ashenEncore=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card));const ashenEncoreDepleteText=self.add.text(550,350,"Deals 12 firedamage\n to all enemies",{fontSize:"32px",fill:"#ff0000"}).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDepleteText.destroy()})),gameState.enemies.forEach((enemy=>{enemy.health-=12,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver()}))}function depleteEdoEruption(card){gameState.edoEruption=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card))}function depleteSteelToe(card){gameState.steelToe=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let depleteSteelToeActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){depleteSteelToeActive&&(enemy.armor-=7,updateStats(enemy),gameState.attackSound.play({volume:.6}),self.cameras.main.shake(100,.012,!1),gameState.targetingCursor.setVisible(!1),depleteSteelToeActive=!1)}))}))}function updateStrengthAndArmor(character){let strengthBushido=0;gameState.endOfTurnButtonPressed?(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard+character.armorStance),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+strengthBushido)):(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+character.strengthCard+strengthBushido)),gameState.kamishimoUberAlles>0&&gameState.player.stancePoints<0&&(character.strength=Math.min(character.strengthMax,character.strength-gameState.player.stancePoints*gameState.kamishimoUberAlles)),updateStats(character)}function updateStats(character){character!=gameState.player&&(character.strength=character.strengthBase+character.strengthTurn,gameState.toxicAvenger&&character.poison>0&&(character.strength-=4)),character.armorText.setText(`${character.armor}/${character.armorMax}`),character.strengthText.setText(`${character.strength}/${character.strengthMax}`)}function removeIfDead(character){if(character.health<=0){if(character.health=0,character.sprite.removeInteractive(),character.alive=!1,character.turnComplete=!0,character!=gameState.player){const indexEnemies=gameState.enemies.indexOf(character),indexCharacters=gameState.characters.indexOf(character);-1!==indexEnemies&&gameState.enemies.splice(indexEnemies,1),-1!==indexCharacters&&gameState.characters.splice(indexCharacters,1)}[character.sprite,character.healthBarBackground,character.healthBar,character.healthBarText,character.manaBarBackground,character.manaBar,character.manaBarText,character.strengthAndArmorImage,character.strengthText,character.armorText,character.descriptionBackground,character.descriptionText,character.intentionText,character.intentionBackground].forEach((object=>{fadeOutGameObject(object,500)}))}}function addHandtoDeck(){for(;gameState.currentCards.length>0;){let card=gameState.currentCards.pop();card.slot.available||(card.slot.available=!0),gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),fadeOutGameObject(card.sprite,200)}}function drawNewCards(numCards){const numCardsLimit=Math.min(gameState.deck.length,8),numOfFreeSlots=gameState.slots.filter((slot=>slot.available)).length;numCards=numOfFreeSlots<numCards?numOfFreeSlots:numCards;for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{if(gameState.currentCards.length<numCardsLimit){0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));let card=gameState.drawPile.pop();card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),console.log(`card added: ${card.key}`),card.isBeingPlayed=!1,gameState.currentCards.push(card);let availableSlots=gameState.slots.filter((slot=>slot.available)),slot=availableSlots[Math.floor(availableSlots.length/2)];if(slot){card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot;let cardDepth=10+slot.index;card.sprite.setDepth(cardDepth),self.animateCard(card,cardDepth)}gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),gameState.ashenEncore&&gameState.enemies.forEach((enemy=>{if(enemy.health-=4,self.updateHealthBar(enemy),removeIfDead(enemy),"undefined"==typeof ashenEncoreText||!ashenEncoreText){const ashenEncoreConfig={fontSize:"32px",fill:"#ff0000"},ashenEncoreKey="Deals 4 fire damage to all enemies",ashenEncoreDrawText=self.add.text(550,350,ashenEncoreKey,ashenEncoreConfig).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDrawText.destroy()}))}})),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}else self.cameras.main.shake(70,.002,!1)}))}function getValueOrInvoke(cardProperty){return"function"==typeof cardProperty?cardProperty():cardProperty}function fadeOutGameObject(gameObject,duration){gameObject&&self.tweens.add({targets:gameObject,alpha:0,ease:"Power1",duration:duration,onComplete:()=>{gameObject.destroy()}},self)}gameState.slots=[{available:!0,x:230,y:640,index:0,angle:-12},{available:!0,x:320,y:610,index:1,angle:-8},{available:!0,x:410,y:590,index:2,angle:-4},{available:!0,x:500,y:580,index:3,angle:0},{available:!0,x:590,y:590,index:4,angle:4},{available:!0,x:680,y:610,index:5,angle:8},{available:!0,x:770,y:640,index:6,angle:12},{available:!0,x:860,y:670,index:7,angle:16}],gameState.endOfTurnButton.on("pointerup",(function(){gameState.currentEnemyIndex=0,gameState.targetingCursor.visible||!gameState.playersTurn?self.cameras.main.shake(70,.002,!1):(this.setTexture("rectangularButtonPressed"),this.removeInteractive(),gameState.buttonPressedSound.play(),gameState.endOfTurnButtonPressed=!0,addHandtoDeck(),updateStrengthAndArmor(gameState.player),updateEnemyActions(),gameState.rebelHeart&&(gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+Math.abs(gameState.player.stancePoints)),self.updateHealthBar(gameState.player)),gameState.enemies.forEach((enemy=>{enemy.turnComplete=!enemy.alive,fadeOutGameObject(enemy.intentionText,200),fadeOutGameObject(enemy.intentionBackground,200)})),0!=gameState.player.mana&&(gameState.player.mana=0,self.updateManaBar(gameState.player)),self.time.delayedCall(100,(()=>{gameState.actionText&&gameState.actionText.destroy(),initiateEnemiesTurn()})))})),"admin"===gameState.playerName&&(gameState.getManaButton=self.add.sprite(550,200,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.getManaText=self.add.text(550,200,"Get Mana",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.getManaButton.on("pointerup",(()=>{gameState.playersTurn&&(gameState.player.mana=gameState.player.manaMax,self.updateManaBar(gameState.player),console.log("mana gained"))})),gameState.drawCardButton=self.add.sprite(550,300,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.drawCardText=self.add.text(550,300,"Draw Card",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.drawCardButton.on("pointerup",(()=>{gameState.playersTurn&&(drawNewCards(1),console.log("card drawn"))})),gameState.killEnemyButton=self.add.sprite(550,400,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.killEnemyText=self.add.text(550,400,"Kill Enemy",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.killEnemyButton.on("pointerup",(()=>{if(gameState.enemies.some((enemy=>enemy.health>0&&gameState.playersTurn))){const enemy=gameState.enemies.find((enemy=>enemy.health>0));enemy.health=0,removeIfDead(enemy),checkGameOver(),console.log(`${enemy.name} killed`)}})))}update(){gameState.targetingCursor.visible&&(gameState.targetingCursor.x=this.input.mousePointer.x,gameState.targetingCursor.y=this.input.mousePointer.y)}}class Level4Fight1 extends BaseScene{self;constructor(){super("Level4Fight1")}preload(){this.load.image("theFortress","assets/images/theFortress.jpg"),this.load.image("bakgrunnFortress1","assets/images/bakgrunnFortress1.jpg"),this.load.image("monster1","assets/images/sprites/monster1.png"),this.load.image("monster2","assets/images/sprites/monster2.png")}create(){const self=this;this.baseCreate("bakgrunnFortress1"),this.resetPlayer(gameState.player,.37),gameState.player.health=gameState.player.healthMax,this.addButtons(),function(){gameState.drawPileImage=self.add.image(120,600,"deck"),gameState.drawPileImage.setScale(.13).setOrigin(.5,.5).setInteractive();gameState.drawPileText=self.add.text(120,600,gameState.drawPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.drawPileText.setDepth(100).setOrigin(.5,.5),gameState.drawPileImage.on("pointerover",(function(){if(gameState.drawPile.length>0){const cardsPerRow=gameState.drawPile.length<12?4:6,cardSpacing=105,startX=gameState.drawPile.length<12?400:250,startY=150;gameState.drawPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.drawPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]}))}(),gameState.discardPileText=self.add.text(980,600,gameState.discardPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.discardPileText.setDepth(100).setOrigin(.5,.5),gameState.discardPileImage=self.add.image(980,600,"deck"),gameState.discardPileImage.setScale(.13).setOrigin(.5,.5).setInteractive().setTint(16711680),gameState.discardPileImage.on("pointerover",(function(){if(gameState.discardPile.length>0){const cardsPerRow=gameState.discardPile.length<12?4:6,cardSpacing=105,startX=gameState.discardPile.length<12?400:250,startY=150;gameState.discardPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.discardPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]})),gameState.kamishimoUberAlles=0,gameState.kirisuteGomen=!1,gameState.toxicFrets=!1,gameState.ashenEncore=!1,gameState.edoEruption=!1,gameState.steelToe=!1,gameState.currentCards=[],gameState.cardImages=[],gameState.enemy1=Object.create(gameState.enemy),gameState.enemy1.name="Mong\nSteals Strength and Armor",gameState.enemy1.sprite=this.add.sprite(600,355,"monster1").setScale(.16).setFlipX(!1).setInteractive(),gameState.enemy1.health=50,gameState.enemy1.healthMax=50,gameState.enemy1.armor=0,gameState.enemy2=Object.create(gameState.enemy),gameState.enemy2.name="Goh\nSteals Strength and Armor",gameState.enemy2.sprite=this.add.sprite(790,350,"monster2").setScale(.36).setFlipX(!1).setInteractive(),gameState.enemy2.health=60,gameState.enemy2.healthMax=60,gameState.enemy1.armor=0,gameState.enemies=[gameState.enemy1,gameState.enemy2],gameState.characters=[...gameState.enemies,gameState.player],gameState.characters.forEach((character=>{character.height=character.sprite.displayHeight,character.width=character.sprite.displayWidth,character.x=character.sprite.x,character.y=character.sprite.y,this.addHealthBar(character,character.healthBarColor),this.addStatsDisplay(character),this.describeCharacter(character,character.sprite)})),this.addManaBar(gameState.player),this.addStanceBar(gameState.player,"#a9a9a9"),gameState.permanents.forEach((permanent=>{const card=permanent.card,slot=permanent.slot;"kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?slot.available=!0:(card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,console.log(`Recreated permanent: ${card.key}\nfor slot ${slot.index}`),displayTokenCard(card),activatePermanentFromToken(card))}));const levelTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},levelimage=this.add.image(0,0,"theFortress").setScale(.87).setOrigin(.02,0).setDepth(300),leveltextTop=this.add.text(550,270,"Level 4:",levelTextConfig).setDepth(301).setOrigin(.5),leveltextBottom=this.add.text(550,430,"The Fortress",levelTextConfig).setDepth(301).setOrigin(.5);let levelStarting=!1;function startFight(){gameState.turn=0,gameState.musicTheme.stop(),self.shuffleDeck(gameState.drawPile);const{level:level,fight:fight}=self.extractLevelFightFromName(self.scene.key);gameState.startText=self.add.text(550,300,`Level ${level}\nFight ${fight}!`,{fontSize:"60px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setDepth(200).setOrigin(.5),self.time.delayedCall(350,(()=>{gameState.music.play({loop:!0,volume:.35})})),self.time.delayedCall(3e3,(()=>{fadeOutGameObject(gameState.startText,200),self.time.delayedCall(300,startPlayerTurn())}))}function startPlayerTurn(){let numCards=gameState.player.numCardsBase+gameState.player.numCardsStance;gameState.turn+=1,gameState.endOfTurnButtonPressed=!1,gameState.yourTurnText=self.add.text(550,300,"Your turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),gameState.player.poisonText=self.add.text(570,350,"",{fontSize:"25px",fill:"#ff0000"}).setOrigin(.5),console.log(`player's turn number ${gameState.turn} has started`),gameState.player.armorCard=0,gameState.player.strengthCard=0;const manaMax=gameState.player.manaBase+gameState.player.manaStance;gameState.player.manaMax=gameState.rebelSpirit&&gameState.turn%3==0?manaMax+1:manaMax,gameState.player.mana=gameState.player.manaMax,gameState.foreverTrue&&gameState.player.stancePoints>0?(gameState.player.manaMax+=1,gameState.player.mana+=1):gameState.player.stancePoints=0,self.updateStanceBar(gameState.player),self.updateManaBar(gameState.player),self.updateHealthBar(gameState.player),self.updatePoison(gameState.player),removeIfDead(gameState.player),updateStrengthAndArmor(gameState.player),self.time.delayedCall(2200,(()=>{if(fadeOutGameObject(gameState.yourTurnText,200),gameState.player.poisonText.destroy(),1===gameState.turn){let textConfig={fontSize:"38px",fill:"#ff0000",fontWeight:"bold"},treesInfoText=self.add.text(550,300,"Monsters steal Armor or\nStrength when they attack",textConfig).setOrigin(.5).setDepth(201),textWidth=treesInfoText.width,textHeight=treesInfoText.height,paddingX=20,paddingY=20;const treesInfoTextBackground=self.add.graphics();treesInfoTextBackground.fillStyle(16777215,.7),treesInfoTextBackground.fillRect(treesInfoText.x-textWidth/2-paddingX,treesInfoText.y-textHeight/2-paddingY,textWidth+2*paddingX,textHeight+2*paddingY).setDepth(200),self.time.delayedCall(4500,(()=>{fadeOutGameObject(treesInfoText,200),fadeOutGameObject(treesInfoTextBackground,200),drawCards(numCards),gameState.enemies.forEach((enemy=>{updateEnemyActions(),selectEnemyAction(enemy),displayEnemyIntention(enemy)}))}))}else drawCards(numCards),gameState.enemies.forEach((enemy=>{updateEnemyActions(),selectEnemyAction(enemy),displayEnemyIntention(enemy)}))}))}self.time.delayedCall(4e3,(()=>{levelStarting||(levelStarting=!0,fadeOutGameObject(levelimage,2e3),fadeOutGameObject(leveltextTop,2e3),fadeOutGameObject(leveltextBottom,2e3),self.time.delayedCall(2200,startFight()))})),self.input.on("pointerup",(()=>{levelStarting||(levelStarting=!0,fadeOutGameObject(levelimage,2e3),fadeOutGameObject(leveltextTop,2e3),fadeOutGameObject(leveltextBottom,2e3),self.time.delayedCall(2200,startFight()))}));function drawCards(numCards){gameState.endOfTurnButton.setTexture("rectangularButton"),gameState.endOfTurnButton.setInteractive();const startSlotIndex=Math.floor((gameState.slots.length-numCards)/2);for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));const card=gameState.drawPile.pop(),cardDepth=10+i+startSlotIndex;card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),card.isBeingPlayed=!1,gameState.currentCards.push(card),card.sprite.setDepth(cardDepth);const slot=gameState.slots[startSlotIndex+i];slot&&(card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot),gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),self.animateCard(card,cardDepth),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}));gameState.playersTurn=!0}function activateCard(card){if(gameState.costPlayed="function"==typeof card.cost?card.cost():card.cost,gameState.typePlayed="function"==typeof card.type?card.type():card.type,gameState.player.mana>=gameState.costPlayed&&!1===gameState.playingCard)if(gameState.player.mana-=gameState.costPlayed,self.updateManaBar(gameState.player),console.log(`activated card: ${card.key}\nCost: ${gameState.costPlayed}`),gameState.player.freedomBeforeCardPlayed="Freedom"===gameState.player.stance,card.isBeingPlayed=!0,gameState.currentCards=gameState.currentCards.filter((c=>c!==card)),card.slot&&(card.slot.available=!0),"targetSelected"===gameState.typePlayed)!function(card,handOfCards){gameState.targetingCursor.setVisible(!0),gameState.thisTurn=gameState.turn;for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.removeInteractive();for(let enemy of gameState.enemies)enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){card.isBeingPlayed&&gameState.playersTurn&&gameState.thisTurn===gameState.turn&&(card.isBeingPlayed=!1,gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,enemy));for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.setInteractive()}))}(card,gameState.currentCards);else if("targetAll"===gameState.typePlayed){gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length);const enemiesCopy=[...gameState.enemies];gameState.enemiesLength=enemiesCopy.length,enemiesCopy.forEach(((enemy,index)=>{const isLastEnemy=index===enemiesCopy.length-1;playCard(card,enemy,isLastEnemy)}))}else"permanent"===gameState.typePlayed?function(card){const slot=gameState.permanentSlots.find((slot=>slot.available));"kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length)):gameState.deck=gameState.deck.filter((c=>c!==card));slot?(card.slot.available=!0,card.sprite.destroy(),card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,gameState.permanents.push({card:card,slot:slot,tokenSprite:card.tokenSprite}),displayTokenCard(card),activatePermanentFromToken(card)):function(card){switch(self.cameras.main.shake(70,.002,!1),card.isBeingPlayed=!1,console.log(`No available slot for permanent card ${card.key}`),card.key){case"foreverTrue":depleteForeverTrue(card);break;case"rebelSpirit":depleteRebelSpirit(card);break;case"rebelHeart":depleteRebelHeart(card);break;case"bushido":depleteBushido(card);break;case"toxicAvenger":depleteToxicAvenger(card);break;case"kirisuteGomen":depleteKirisuteGomen(card);case"toxicFrets":depleteToxicFrets(card);break;case"ashenEncore":depleteAshenEncore(card);break;case"edoEruption":depleteEdoEruption(card);break;case"steelToe":depleteSteelToe(card);break;case"kamishimoUberAlles":case"hollidayInKamakura":gameState.currentCards.push(card),card.slot.available=!1}}(card)}(card):(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,gameState.player));else self.cameras.main.shake(70,.002,!1)}function playCard(card,target,isLastEnemy=!1){gameState.playingCard=!0,fadeOutGameObject(card.sprite,200),fadeOutGameObject(gameState.actionText,50),gameState.targetingCursor.setVisible(!1);const{damagePlayed:damagePlayed,firePlayed:firePlayed,stancePointsPlayed:stancePointsPlayed,poisonPlayed:poisonPlayed,healPlayed:healPlayed,strengthPlayed:strengthPlayed,armorPlayed:armorPlayed,reduceTargetArmorPlayed:reduceTargetArmorPlayed,reduceTargetStrengthPlayed:reduceTargetStrengthPlayed,drawCardPlayed:drawCardPlayed}=function(card,target,isLastEnemy=!1){const moshpitMassacreCondition="moshpitMassacre"===card.key&&gameState.player.stancePoints>0&&target.poison>0,scorchedSoulCondition="scorchedSoul"===card.key&&target.poison>0,bladesBlightCondition="bladesBlight"===card.key&&target.poison>0,roninsRotCondition="roninsRot"===card.key&&target.poison>0,kabutuEdoCondition="kabutu"===card.key&&gameState.edoEruption&&gameState.player.stancePoints>0,steelToeCondition="combatBoots"===card.key&&gameState.steelToe,knuckleFistEdoCondition="knuckleFist"===card.key&&gameState.edoEruption&&gameState.player.stancePoints<0,steelToeOutcome=gameState.player.stancePoints>0?2*(1+gameState.player.stancePoints):2;return{damagePlayed:moshpitMassacreCondition?11:getValueOrInvoke(card.damage),firePlayed:kabutuEdoCondition?2*gameState.player.stancePoints:scorchedSoulCondition?12:getValueOrInvoke(card.fire),stancePointsPlayed:kabutuEdoCondition&&isLastEnemy?-1:getValueOrInvoke(card.stancePoints),poisonPlayed:bladesBlightCondition?target.poison:getValueOrInvoke(card.poison),healPlayed:getValueOrInvoke(card.heal),strengthPlayed:getValueOrInvoke(card.strength),armorPlayed:knuckleFistEdoCondition?-gameState.player.stancePoints:getValueOrInvoke(card.armor),reduceTargetArmorPlayed:steelToeCondition?steelToeOutcome:getValueOrInvoke(card.reduceTargetArmor),reduceTargetStrengthPlayed:roninsRotCondition?target.poison:getValueOrInvoke(card.reduceTargetStrength),drawCardPlayed:getValueOrInvoke(card.drawCard)}}(card,target,isLastEnemy),damageModifyer=(1+.1*gameState.player.strength)*(1-target.armor/20),damageTotal=Math.round(Math.max(0,firePlayed+damagePlayed*damageModifyer));target!=gameState.player&&(gameState.score.damageDealt+=damageTotal,console.log(`${damagePlayed} Physical Damage and ${firePlayed} Fire Damage was dealt to ${target.name}`),target.strengthTurn-=reduceTargetStrengthPlayed,target.armor-=reduceTargetArmorPlayed,target.poison+=poisonPlayed,target.health-=damageTotal),"seppuku"===card.key||"boneShredder"===card.key?gameState.player.strengthBase+=strengthPlayed:gameState.player.strengthCard+=strengthPlayed,"libertySpikes"===card.key&&gameState.player.stancePoints>0&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),healPlayed&&(gameState.player.health=Math.min(gameState.player.health+healPlayed,gameState.player.healthMax),self.updateHealthBar(gameState.player)),gameState.player.armorCard+=armorPlayed,gameState.player.poison=Math.max(0,gameState.player.poison-card.poisonRemove),function(damageTotal,poisonPlayed,strengthPlayed,armorPlayed){const actionTextConfig={fontSize:"32px",fill:"#ff0000"};if("targetSelected"===gameState.typePlayed||"targetAll"===gameState.typePlayed){self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8});const actionTextTarget=`${damageTotal>0?`Deals ${damageTotal} damage`:""}\n\n${poisonPlayed>0?`Deals ${poisonPlayed} Poison`:""}`;gameState.actionText=self.add.text(550,300,actionTextTarget,actionTextConfig).setOrigin(.5),self.attackTweens(gameState.player,60)}else strengthPlayed>0?(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${strengthPlayed} Strength`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player)):armorPlayed>0&&(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${armorPlayed} Armor`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player))}(damageTotal,poisonPlayed,strengthPlayed,armorPlayed),gameState.player.stancePoints+stancePointsPlayed>=-3&&gameState.player.stancePoints+stancePointsPlayed<=3&&(gameState.player.stancePoints+=stancePointsPlayed,self.updateStanceBar(gameState.player)),gameState.player.freedomAfterCardPlayed="Freedom"===gameState.player.stance,!gameState.player.freedomBeforeCardPlayed&&gameState.player.freedomAfterCardPlayed&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),updateStats(target),self.updateHealthBar(target),updateStrengthAndArmor(gameState.player),removeIfDead(target),checkGameOver(),updateEnemyActions(),drawNewCards(drawCardPlayed),gameState.enemies.forEach((enemy=>{self.updateEnemyIntention(enemy)})),self.time.delayedCall(260,(()=>{gameState.playingCard=!1})),self.time.delayedCall(1500,(()=>{gameState.actionText&&gameState.actionText.destroy()}))}function getValueOrInvoke(cardProperty){return"function"==typeof cardProperty?cardProperty():cardProperty}function initiateEnemiesTurn(){0!==gameState.enemies.length&&(gameState.enemies[gameState.currentEnemyIndex].alive?function(enemy){gameState.playersTurn&&(gameState.playersTurn=!1,enemy.turnText=self.add.text(550,300,"Enemy turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),self.time.delayedCall(1800,(()=>{fadeOutGameObject(enemy.turnText,200)})));enemy.turnComplete=!1,function(enemy){enemy.poisonText=self.add.text(570,350,"",{fontSize:"30px",fill:"#ff0000"}).setOrigin(.5),self.updatePoison(enemy),gameState.toxicAvenger&&enemy.poison>0&&updateStats(enemy);const delaytime=""!==enemy.poisonText._text||enemy.turnText?1800:800;self.time.delayedCall(delaytime,(()=>{enemy.poisonText.destroy();const chosenAction=enemy.chosenAction,actionTextConfig={fontSize:"32px",fill:"#ff0000"};if(gameState.player.poison+=chosenAction.poison,enemy.health=Math.min(enemy.health+chosenAction.heal,enemy.healthMax),enemy.strengthBase=Math.min(enemy.strengthBase+chosenAction.strength,enemy.strengthMax),gameState.player.armorBase-=chosenAction.reduceTargetArmor,gameState.player.strengthBase-=chosenAction.reduceTargetStrength,updateStats(enemy),updateStats(gameState.player),enemy.armor=Math.min(enemy.armor+chosenAction.armor,enemy.armorMax),chosenAction.damage>0||chosenAction.fire>0){const damageModifyer=(1+.1*enemy.strength)*(1-gameState.player.armor/20);self.cameras.main.shake(120,.005,!1),gameState.attackSound.play({volume:.8}),console.log(`enemy.damageTotal: ${enemy.damageTotal}`),enemy.damageTotal=Math.round(Math.max(0,chosenAction.fire+chosenAction.damage*damageModifyer)),gameState.player.health-=enemy.damageTotal,gameState.score.damageTaken+=enemy.damageTotal;const stealText=chosenAction.armor>0?`Steals ${chosenAction.armor} Armor`:`Steals ${chosenAction.strength} Strength`;gameState.actionText=self.add.text(550,300,`Deals ${enemy.damageTotal} damage\n${stealText}`,actionTextConfig).setOrigin(.5),self.tweens.add({targets:enemy.sprite,x:enemy.sprite.x-60,duration:120,ease:"Cubic",yoyo:!0})}else chosenAction.heal>0?(gameState.healSound.play({volume:.5}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy)):(chosenAction.strength>0||chosenAction.armor>0||chosenAction.poison>0)&&(gameState.powerUpSound.play({volume:.2}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy));enemy.strengthTurn=0,function(enemy){[gameState.player,enemy].forEach((character=>{self.updateHealthBar(character),removeIfDead(character),updateStats(character)})),self.time.delayedCall(1500,(()=>{fadeOutGameObject(gameState.actionText,200),enemy.turnComplete=!0,checkGameOver()||!gameState.enemies[gameState.currentEnemyIndex].turnComplete&&gameState.enemies[gameState.currentEnemyIndex].alive||(gameState.currentEnemyIndex++,gameState.currentEnemyIndex<gameState.enemies.length?initiateEnemiesTurn():(gameState.currentEnemyIndex=0,startPlayerTurn()))}))}(enemy)}))}(enemy)}(gameState.enemies[gameState.currentEnemyIndex]):(gameState.currentEnemyIndex++,initiateEnemiesTurn()))}function updateEnemyActions(){1===gameState.turn?gameState.enemy1.actions=[{key:"Intends to\nSteal Armor",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:3,reduceTargetStrength:0,reduceTargetArmor:3,text:"Steals 3 armor",probability:1}]:2===gameState.turn?gameState.enemy1.actions=[{key:()=>`Intends to\nDeal ${Math.round(12*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:12,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 12 damage",probability:1}]:3===gameState.turn?gameState.enemy1.actions=[{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetStrength:0,reduceTargetArmor:0,text:"Deals 15 damage",probability:1}]:gameState.enemy1.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 5 fire damage",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(12*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:12,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 12 damage\nSteals 1 Armor",probability:.27+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(17*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:17,fire:0,poison:0,heal:0,poisonRemove:0,strength:1,armor:0,reduceTargetStrength:1,reduceTargetArmor:0,text:"Deals 17 damage\nSteals 1 Strength",probability:.18+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Heals 15 HP\nSteals 1 Armor",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:1,armor:0,reduceTargetStrength:1,reduceTargetArmor:0,text:"Heals 25 HP\nSteals 1 Strength",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.05},{key:"Intends to\nSteal Strength",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:2,armor:1,reduceTargetStrength:2,reduceTargetArmor:1,text:"Steals 2 Strenght",probability:.12+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nSteal Armor",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:2,reduceTargetStrength:0,reduceTargetArmor:2,text:"Steals 2 Armor",probability:.11+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 5 poison",probability:0}],1===gameState.turn?gameState.enemy2.actions=[{key:"Intends to\nSteal Strength",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:0,reduceTargetStrength:3,reduceTargetArmor:0,text:"Steals 3 Strength",probability:1}]:gameState.enemy2.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:1,armor:0,reduceTargetStrength:1,reduceTargetArmor:0,text:"Deals 5 fire damage\n Steals 1 Strength",probability:.1+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:1,armor:0,reduceTargetStrength:1,reduceTargetArmor:0,text:" Deals 15 damage\nSteals 1 Strength",probability:.24+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(20*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:20,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 20 damage\nSteals 1 Armor",probability:.17+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:1,armor:1,reduceTargetStrength:1,reduceTargetArmor:0,text:" Heals 15 HP\nSteals 1 Strength",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:1,armor:0,reduceTargetStrength:1,reduceTargetArmor:0,text:"  Heals 25 HP\nSteals 1 Armor",probability:gameState.enemy2.health>=gameState.enemy2.healthMax?0:.05},{key:"Intends to\nSteal Strength",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:2,armor:0,reduceTargetStrength:2,reduceTargetArmor:0,text:"Steals 2 Strenght",probability:.12+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nSteal Armor",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:3,reduceTargetStrength:0,reduceTargetArmor:3,text:"Steals 3 Armor",probability:.15+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:1,armor:0,reduceTargetStrength:1,reduceTargetArmor:0,text:"Deals 5 poison",probability:0}]}function selectEnemyAction(enemy){!function(enemy){const totalProbability=enemy.actions.reduce(((sum,action)=>sum+action.probability),0);if(1!==totalProbability){const scalingFactor=1/totalProbability;for(let action of enemy.actions)action.probability*=scalingFactor}}(enemy);let cumProb=0;for(let i=0;i<enemy.actions.length;i++)cumProb+=enemy.actions[i].probability,enemy.actions[i].cumulativeProbability=cumProb;const rand=Math.random();enemy.chosenAction=enemy.actions.find((action=>rand<action.cumulativeProbability))}function checkGameOver(){return gameState.player.alive?!gameState.enemies.some((enemy=>enemy.alive))&&(gameState.playersTurn=!1,function(){gameState.score.numberOfTurns+=gameState.turn,gameState.score.levelsCompleted+=1,gameState.music.stop(),self.updateManaBar(gameState.player),addHandtoDeck(),self.time.delayedCall(600,(()=>{gameState.attackSound.isPlaying&&gameState.attackSound.stop(),gameState.victorySound.play({volume:.9,rate:1}),self.clearBoard()})),gameState.actionText&&(gameState.actionText.destroy(),console.log("gameState.actionText still existed at initiateVictory and got destroyed"));const victoryTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},victoryText=self.add.text(550,300,"Victory!",victoryTextConfig).setOrigin(.5);self.time.delayedCall(2e3,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),victoryText.destroy(),function(){self.shuffleDeck(gameState.bonusCards);const gameOverTextConfig={fontSize:"40px",fill:"#000000"},rewardTextConfig={fontSize:"25px",fill:"#000000"};gameState.gameOverText=self.add.text(550,180,"Choose a reward",gameOverTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsText=self.add.text(550,400,"Add 1 card\nto your deck",rewardTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsButton=self.add.image(550,400,"rectangularButton"),gameState.rewardAddCardsButton.setScale(1.2).setInteractive().setOrigin(.5).setDepth(102),gameState.rewardAddCardsButton.on("pointerover",(function(){this.setTexture("rectangularButtonHovered")})),gameState.rewardAddCardsButton.on("pointerout",(function(){this.setTexture("rectangularButton")})),gameState.rewardAddCardsButton.on("pointerup",(function(){gameState.rewardAddCardsText.destroy(),gameState.gameOverText.destroy(),gameState.rewardAddCardsButton.destroy(),function(){console.log("rewardAddCard called"),gameState.gameOverText.destroy();const x=320,y=300,spacing=220;let bonusCards=gameState.bonusCards.slice(0,3);console.log(`bonusCards: ${bonusCards.key}`),bonusCards.forEach(((bonusCard,index)=>{bonusCard.sprite=self.add.sprite(x+index*spacing,y,bonusCard.key),bonusCard.sprite.setScale(.45).setInteractive().setDepth(102),console.log(`bonusCardsprite added for: ${bonusCard.key}`),bonusCard.sprite.on("pointerover",(()=>{gameState.cardsDealtSound.play({volume:.6}),self.cardTweens(bonusCard.sprite,.58,200)}),self),bonusCard.sprite.on("pointerout",(()=>{self.cardTweens(bonusCard.sprite,.45,400)}),self),bonusCard.sprite.on("pointerup",(()=>{let nextlevelstarting=!1;gameState.deck.push(bonusCard),"permanent"===bonusCard.type&&gameState.bonusCards.splice(gameState.bonusCards.indexOf(bonusCard),1),bonusCards.forEach((card=>{card.sprite.removeInteractive(),card!==bonusCard&&fadeOutGameObject(card.sprite,200)})),self.tweens.add({targets:bonusCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),self.add.text(550,180,"Gained 1 card",{fontSize:"40px",fill:"#000000"}).setOrigin(.5),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()}))}()}))}(),!0):(gameState.playersTurn=!1,function(){gameState.player.health=0,self.updateManaBar(gameState.player),addHandtoDeck(),gameState.music.stop(),gameState.endOfTurnButton.destroy(),gameState.actionText&&fadeOutGameObject(gameState.actionText,200);gameState.score.numberOfTurns+=gameState.turn,gameState.gameOverText=self.add.text(550,300," Defeat!",{fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setOrigin(.5),gameState.gameOverText.setInteractive();let scenetransitionstarted=!1;self.time.delayedCall(400,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),scenetransitionstarted||(gameState.gameOverText.on("pointerup",(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})),self.time.delayedCall(2500,(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})))}))}(),!0)}function startNextLevel(){self.cameras.main.fadeOut(1e3),self.time.delayedCall(1e3,(()=>{self.scene.start("Level4Fight2")}))}function activatePermanentFromToken(card){if("foreverTrue"===card.key)gameState.foreverTrue=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteForeverTrue(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelSpirit"===card.key)gameState.rebelSpirit=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelSpirit(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelHeart"===card.key)gameState.rebelHeart=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelHeart(card):self.cameras.main.shake(70,.002,!1)}));else if("bushido"===card.key)gameState.bushido=!0,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteBushido(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicAvenger"===card.key)gameState.toxicAvenger=!0,gameState.enemies.forEach((enemy=>updateStats(enemy))),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicAvenger(card):self.cameras.main.shake(70,.002,!1)}));else if("kirisuteGomen"===card.key)gameState.player.strengthMax+=5,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn&&gameState.enemies.some((enemy=>enemy.health<30))?depleteKirisuteGomen(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicFrets"===card.key)gameState.toxicFrets=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicFrets(card):self.cameras.main.shake(70,.002,!1)}));else if("ashenEncore"===card.key)gameState.ashenEncore=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteAshenEncore(card):self.cameras.main.shake(70,.002,!1)}));else if("edoEruption"===card.key)gameState.edoEruption=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteEdoEruption(card):self.cameras.main.shake(70,.002,!1)}));else if("steelToe"===card.key)gameState.steelToe=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteSteelToe(card):self.cameras.main.shake(70,.002,!1)}));else if("kamishimoUberAlles"===card.key){const tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;gameState.kamishimoUberAlles+=1,updateStrengthAndArmor(gameState.player),tokenSprite.on("pointerup",(()=>{gameState.playersTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.kamishimoUberAlles-=1,updateStrengthAndArmor(gameState.player)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}else if("hollidayInKamakura"===card.key){let tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;const turnplayed=gameState.turn,fightplayed=gameState.score.levelsCompleted;tokenSprite.on("pointerup",(()=>{const depletedDifferentTurn=turnplayed!=gameState.turn||fightplayed!=gameState.score.levelsCompleted;console.log(`depletedDifferentTurn: ${depletedDifferentTurn}\nturnplayed: ${turnplayed}\ngameState.turn: ${gameState.turn}\nfightplayed: ${fightplayed}\ngameState.score.levelsCompleted: ${gameState.score.levelsCompleted}\ngameState.playersTurn: ${gameState.playersTurn}`),gameState.playersTurn&&depletedDifferentTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.player.manaMax+=1,gameState.player.mana+=1,self.updateManaBar(gameState.player),drawNewCards(1)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}}function displayTokenCard(card){card.tokenSprite.on("pointerover",(function(){gameState.cardsDealtSound.play({volume:1.5}),card.permanentCardSprite=self.add.sprite(550,300,card.key).setScale(.55).setDepth(26)})),card.tokenSprite.on("pointerout",(function(){card.permanentCardSprite.destroy()}))}function depleteForeverTrue(card){gameState.foreverTrue=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),drawNewCards(8)}function depleteRebelSpirit(card){gameState.rebelSpirit=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.mana+=3,gameState.player.manaMax+=3,self.updateManaBar(gameState.player)}function depleteRebelHeart(card){gameState.rebelHeart=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+12),self.updateHealthBar(gameState.player)}function depleteBushido(card){gameState.bushido=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.strengthBase+=6,updateStrengthAndArmor(gameState.player)}function depleteToxicAvenger(card){gameState.toxicAvenger=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison+=4,updateStats(enemy)}))}function depleteKirisuteGomen(card){if(gameState.enemies.some((enemy=>enemy.health<30))){gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let functionActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){enemy.health<30&&functionActive?(enemy.health=0,gameState.attackSound.play({volume:1}),self.cameras.main.shake(120,.025,!1),card.tokenSlot&&(card.tokenSlot.available=!0,gameState.player.strengthMax-=5),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),removeIfDead(enemy),checkGameOver(),updateStrengthAndArmor(gameState.player)):(self.cameras.main.shake(70,.002,!1),functionActive=!1),gameState.targetingCursor.setVisible(!1)}))}))}else self.cameras.main.shake(70,.002,!1),card.slot.available=!1,gameState.currentCards.some((card=>"kirisuteGomen"===card.key))||(gameState.currentCards.push(card),gameState.player.mana+=1,self.updateManaBar(gameState.player))}function depleteToxicFrets(card){gameState.toxicFrets=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison>0&&(enemy.health-=2*enemy.poison,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver())}))}function depleteAshenEncore(card){gameState.ashenEncore=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card));const ashenEncoreDepleteText=self.add.text(550,350,"Deals 12 firedamage\n to all enemies",{fontSize:"32px",fill:"#ff0000"}).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDepleteText.destroy()})),gameState.enemies.forEach((enemy=>{enemy.health-=12,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver()}))}function depleteEdoEruption(card){gameState.edoEruption=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card))}function depleteSteelToe(card){gameState.steelToe=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let depleteSteelToeActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){depleteSteelToeActive&&(enemy.armor-=7,updateStats(enemy),gameState.attackSound.play({volume:.6}),self.cameras.main.shake(100,.012,!1),gameState.targetingCursor.setVisible(!1),depleteSteelToeActive=!1)}))}))}function updateStrengthAndArmor(character){let strengthBushido=0;gameState.endOfTurnButtonPressed?(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard+character.armorStance),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+strengthBushido)):(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+character.strengthCard+strengthBushido)),gameState.kamishimoUberAlles>0&&gameState.player.stancePoints<0&&(character.strength=Math.min(character.strengthMax,character.strength-gameState.player.stancePoints*gameState.kamishimoUberAlles)),updateStats(character)}function updateStats(character){character!=gameState.player&&(character.strength=character.strengthBase+character.strengthTurn,gameState.toxicAvenger&&character.poison>0&&(character.strength-=4)),character.armorText.setText(`${character.armor}/${character.armorMax}`),character.strengthText.setText(`${character.strength}/${character.strengthMax}`)}function removeIfDead(character){if(character.health<=0){if(character.health=0,character.sprite.removeInteractive(),character.alive=!1,character.turnComplete=!0,character!=gameState.player){const indexEnemies=gameState.enemies.indexOf(character),indexCharacters=gameState.characters.indexOf(character);-1!==indexEnemies&&gameState.enemies.splice(indexEnemies,1),-1!==indexCharacters&&gameState.characters.splice(indexCharacters,1)}[character.sprite,character.healthBarBackground,character.healthBar,character.healthBarText,character.manaBarBackground,character.manaBar,character.manaBarText,character.strengthAndArmorImage,character.strengthText,character.armorText,character.descriptionBackground,character.descriptionText,character.intentionText,character.intentionBackground].forEach((object=>{fadeOutGameObject(object,500)}))}}function addHandtoDeck(){for(;gameState.currentCards.length>0;){let card=gameState.currentCards.pop();card.slot.available||(card.slot.available=!0),gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),fadeOutGameObject(card.sprite,200)}}function drawNewCards(numCards){const numCardsLimit=Math.min(gameState.deck.length,8),numOfFreeSlots=gameState.slots.filter((slot=>slot.available)).length;numCards=numOfFreeSlots<numCards?numOfFreeSlots:numCards;for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{if(gameState.currentCards.length<numCardsLimit){0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));let card=gameState.drawPile.pop();card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),console.log(`card added: ${card.key}`),card.isBeingPlayed=!1,gameState.currentCards.push(card);let availableSlots=gameState.slots.filter((slot=>slot.available)),slot=availableSlots[Math.floor(availableSlots.length/2)];if(slot){card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot;let cardDepth=10+slot.index;card.sprite.setDepth(cardDepth),self.animateCard(card,cardDepth)}gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),gameState.ashenEncore&&gameState.enemies.forEach((enemy=>{if(enemy.health-=4,self.updateHealthBar(enemy),removeIfDead(enemy),"undefined"==typeof ashenEncoreText||!ashenEncoreText){const ashenEncoreConfig={fontSize:"32px",fill:"#ff0000"},ashenEncoreKey="Deals 4 fire damage to all enemies",ashenEncoreDrawText=self.add.text(550,350,ashenEncoreKey,ashenEncoreConfig).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDrawText.destroy()}))}})),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}else self.cameras.main.shake(70,.002,!1)}))}function displayEnemyIntention(enemy){const actionKey="function"==typeof enemy.chosenAction.key?enemy.chosenAction.key():enemy.chosenAction.key;enemy.intentionText=self.add.text(enemy.x+10,enemy.y-enemy.height/2-40,`${actionKey}`,{fontSize:"13px",fill:"#000000"}),enemy.intentionText.setOrigin(.5,1).setDepth(11);const originalSpriteWidth=self.textures.get("listbox1").getSourceImage().width,scale=enemy.intentionText.width/originalSpriteWidth;enemy.intentionBackground=self.add.sprite(enemy.x+10,enemy.y-enemy.height/2-33,"listbox1").setScale(1.05*scale,1),enemy.intentionBackground.setInteractive().setOrigin(.5,1).setAlpha(.85).setDepth(10)}function fadeOutGameObject(gameObject,duration){gameObject&&self.tweens.add({targets:gameObject,alpha:0,ease:"Power1",duration:duration,onComplete:()=>{gameObject.destroy()}},self)}gameState.slots=[{available:!0,x:230,y:640,index:0,angle:-12},{available:!0,x:320,y:610,index:1,angle:-8},{available:!0,x:410,y:590,index:2,angle:-4},{available:!0,x:500,y:580,index:3,angle:0},{available:!0,x:590,y:590,index:4,angle:4},{available:!0,x:680,y:610,index:5,angle:8},{available:!0,x:770,y:640,index:6,angle:12},{available:!0,x:860,y:670,index:7,angle:16}],gameState.endOfTurnButton.on("pointerup",(function(){gameState.currentEnemyIndex=0,gameState.targetingCursor.visible||!gameState.playersTurn?self.cameras.main.shake(70,.002,!1):(this.setTexture("rectangularButtonPressed"),this.removeInteractive(),gameState.buttonPressedSound.play(),gameState.endOfTurnButtonPressed=!0,addHandtoDeck(),updateStrengthAndArmor(gameState.player),updateEnemyActions(),gameState.rebelHeart&&(gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+Math.abs(gameState.player.stancePoints)),self.updateHealthBar(gameState.player)),gameState.enemies.forEach((enemy=>{enemy.turnComplete=!enemy.alive,fadeOutGameObject(enemy.intentionText,200),fadeOutGameObject(enemy.intentionBackground,200)})),0!=gameState.player.mana&&(gameState.player.mana=0,self.updateManaBar(gameState.player)),self.time.delayedCall(100,(()=>{gameState.actionText&&gameState.actionText.destroy(),initiateEnemiesTurn()})))})),"admin"===gameState.playerName&&(gameState.getManaButton=self.add.sprite(550,200,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.getManaText=self.add.text(550,200,"Get Mana",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.getManaButton.on("pointerup",(()=>{gameState.playersTurn&&(gameState.player.mana=gameState.player.manaMax,self.updateManaBar(gameState.player),console.log("mana gained"))})),gameState.drawCardButton=self.add.sprite(550,300,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.drawCardText=self.add.text(550,300,"Draw Card",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.drawCardButton.on("pointerup",(()=>{gameState.playersTurn&&(drawNewCards(1),console.log("card drawn"))})),gameState.killEnemyButton=self.add.sprite(550,400,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.killEnemyText=self.add.text(550,400,"Kill Enemy",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.killEnemyButton.on("pointerup",(()=>{if(gameState.enemies.some((enemy=>enemy.health>0&&gameState.playersTurn))){const enemy=gameState.enemies.find((enemy=>enemy.health>0));enemy.health=0,removeIfDead(enemy),checkGameOver(),console.log(`${enemy.name} killed`)}})))}update(){gameState.targetingCursor.visible&&(gameState.targetingCursor.x=this.input.mousePointer.x,gameState.targetingCursor.y=this.input.mousePointer.y)}}class Level4Fight2 extends BaseScene{self;constructor(){super("Level4Fight2")}preload(){this.load.image("bakgrunnFortress2","assets/images/bakgrunnFortress2.jpg"),this.load.image("monster3","assets/images/sprites/monster3.png"),this.load.image("monster4","assets/images/sprites/monster4.png"),this.load.image("sorcerer1","assets/images/sprites/sorcerer1.png")}create(){const self=this;for(this.baseCreate("bakgrunnFortress2"),this.resetPlayer(gameState.player,.35),this.addButtons(),function(){gameState.drawPileImage=self.add.image(120,600,"deck"),gameState.drawPileImage.setScale(.13).setOrigin(.5,.5).setInteractive();gameState.drawPileText=self.add.text(120,600,gameState.drawPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.drawPileText.setDepth(100).setOrigin(.5,.5),gameState.drawPileImage.on("pointerover",(function(){if(gameState.drawPile.length>0){const cardsPerRow=gameState.drawPile.length<12?4:6,cardSpacing=105,startX=gameState.drawPile.length<12?400:250,startY=150;gameState.drawPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.drawPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]}))}(),gameState.discardPileText=self.add.text(980,600,gameState.discardPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.discardPileText.setDepth(100).setOrigin(.5,.5),gameState.discardPileImage=self.add.image(980,600,"deck"),gameState.discardPileImage.setScale(.13).setOrigin(.5,.5).setInteractive().setTint(16711680),gameState.discardPileImage.on("pointerover",(function(){if(gameState.discardPile.length>0){const cardsPerRow=gameState.discardPile.length<12?4:6,cardSpacing=105,startX=gameState.discardPile.length<12?400:250,startY=150;gameState.discardPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.discardPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]})),gameState.kamishimoUberAlles=0,gameState.kirisuteGomen=!1,gameState.toxicFrets=!1,gameState.ashenEncore=!1,gameState.edoEruption=!1,gameState.steelToe=!1,gameState.currentCards=[],gameState.cardImages=[];gameState.extraCards.length;)gameState.bonusCards.push(gameState.extraCards.pop());function startPlayerTurn(){let numCards=gameState.player.numCardsBase+gameState.player.numCardsStance;gameState.turn+=1,gameState.endOfTurnButtonPressed=!1,gameState.yourTurnText=self.add.text(550,300,"Your turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),gameState.player.poisonText=self.add.text(570,350,"",{fontSize:"25px",fill:"#ff0000"}).setOrigin(.5),console.log(`player's turn number ${gameState.turn} has started`),gameState.player.armorCard=0,gameState.player.strengthCard=0;const manaMax=gameState.player.manaBase+gameState.player.manaStance;gameState.player.manaMax=gameState.rebelSpirit&&gameState.turn%3==0?manaMax+1:manaMax,gameState.player.mana=gameState.player.manaMax,gameState.foreverTrue&&gameState.player.stancePoints>0?(gameState.player.manaMax+=1,gameState.player.mana+=1):gameState.player.stancePoints=0,self.updateStanceBar(gameState.player),self.updateManaBar(gameState.player),self.updateHealthBar(gameState.player),self.updatePoison(gameState.player),removeIfDead(gameState.player),updateStrengthAndArmor(gameState.player),self.time.delayedCall(2200,(()=>{gameState.player.poisonText.destroy(),fadeOutGameObject(gameState.yourTurnText,200),function(numCards){gameState.endOfTurnButton.setTexture("rectangularButton"),gameState.endOfTurnButton.setInteractive();const startSlotIndex=Math.floor((gameState.slots.length-numCards)/2);for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));const card=gameState.drawPile.pop(),cardDepth=10+i+startSlotIndex;card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),card.isBeingPlayed=!1,gameState.currentCards.push(card),card.sprite.setDepth(cardDepth);const slot=gameState.slots[startSlotIndex+i];slot&&(card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot),gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),self.animateCard(card,cardDepth),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}));gameState.playersTurn=!0}(numCards),gameState.enemies.forEach((enemy=>{updateEnemyActions(),function(enemy){!function(enemy){const totalProbability=enemy.actions.reduce(((sum,action)=>sum+action.probability),0);if(1!==totalProbability){const scalingFactor=1/totalProbability;for(let action of enemy.actions)action.probability*=scalingFactor}}(enemy);let cumProb=0;for(let i=0;i<enemy.actions.length;i++)cumProb+=enemy.actions[i].probability,enemy.actions[i].cumulativeProbability=cumProb;const rand=Math.random();enemy.chosenAction=enemy.actions.find((action=>rand<action.cumulativeProbability))}(enemy),function(enemy){const actionKey="function"==typeof enemy.chosenAction.key?enemy.chosenAction.key():enemy.chosenAction.key,textConfig={fontSize:"13px",fill:"#000000"};enemy.intentionText=self.add.text(enemy.x+10,enemy.y-enemy.height/2-40,`${actionKey}`,textConfig),enemy.intentionText.setOrigin(.5,1).setDepth(11);const originalSpriteWidth=self.textures.get("listbox1").getSourceImage().width,scale=enemy.intentionText.width/originalSpriteWidth;enemy.intentionBackground=self.add.sprite(enemy.x+10,enemy.y-enemy.height/2-33,"listbox1").setScale(1.05*scale,1),enemy.intentionBackground.setInteractive().setOrigin(.5,1).setAlpha(.85).setDepth(10)}(enemy)}))}))}gameState.enemy1=Object.create(gameState.enemy),gameState.enemy1.name="Gloomhoof\nSteals Strength and Armor",gameState.enemy1.sprite=this.add.sprite(610,350,"monster3").setScale(.34).setFlipX(!1).setInteractive(),gameState.enemy1.health=40,gameState.enemy1.healthMax=40,gameState.enemy1.armor=0,gameState.enemy2=Object.create(gameState.enemy),gameState.enemy2.name="Darktuft\nSteals Strength and Armor",gameState.enemy2.sprite=this.add.sprite(820,350,"monster4").setScale(.39).setFlipX(!0).setInteractive(),gameState.enemy2.health=40,gameState.enemy2.healthMax=40,gameState.enemy2.armor=0,gameState.enemy3=Object.create(gameState.enemy),gameState.enemy3.name="Ampward\nMaster of healing and buffing",gameState.enemy3.sprite=this.add.sprite(1e3,370,"sorcerer1").setScale(.36).setFlipX(!1).setInteractive(),gameState.enemy3.health=50,gameState.enemy3.healthMax=50,gameState.enemy3.armor=0,gameState.enemies=[gameState.enemy1,gameState.enemy2,gameState.enemy3],gameState.characters=[...gameState.enemies,gameState.player],gameState.characters.forEach((character=>{character.height=character.sprite.displayHeight,character.width=character.sprite.displayWidth,character.x=character.sprite.x,character.y=character.sprite.y,this.addHealthBar(character,character.healthBarColor),this.addStatsDisplay(character),this.describeCharacter(character,character.sprite)})),this.addManaBar(gameState.player),this.addStanceBar(gameState.player,"#a9a9a9"),gameState.permanents.forEach((permanent=>{const card=permanent.card,slot=permanent.slot;"kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?slot.available=!0:(card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,console.log(`Recreated permanent: ${card.key}\nfor slot ${slot.index}`),displayTokenCard(card),activatePermanentFromToken(card))})),function(){gameState.turn=0,gameState.musicTheme.stop(),self.shuffleDeck(gameState.drawPile);const{level:level,fight:fight}=self.extractLevelFightFromName(self.scene.key);gameState.startText=self.add.text(550,300,`Level ${level}\nFight ${fight}!`,{fontSize:"60px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setDepth(200).setOrigin(.5),self.time.delayedCall(350,(()=>{gameState.music.play({loop:!0,volume:.35})})),self.time.delayedCall(3e3,(()=>{fadeOutGameObject(gameState.startText,200),self.time.delayedCall(300,startPlayerTurn())}))}();function activateCard(card){if(gameState.costPlayed="function"==typeof card.cost?card.cost():card.cost,gameState.typePlayed="function"==typeof card.type?card.type():card.type,gameState.player.mana>=gameState.costPlayed&&!1===gameState.playingCard)if(gameState.player.mana-=gameState.costPlayed,self.updateManaBar(gameState.player),console.log(`activated card: ${card.key}\nCost: ${gameState.costPlayed}`),gameState.player.freedomBeforeCardPlayed="Freedom"===gameState.player.stance,card.isBeingPlayed=!0,gameState.currentCards=gameState.currentCards.filter((c=>c!==card)),card.slot&&(card.slot.available=!0),"targetSelected"===gameState.typePlayed)!function(card,handOfCards){gameState.targetingCursor.setVisible(!0),gameState.thisTurn=gameState.turn;for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.removeInteractive();for(let enemy of gameState.enemies)enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){card.isBeingPlayed&&gameState.playersTurn&&gameState.thisTurn===gameState.turn&&(card.isBeingPlayed=!1,gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,enemy));for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.setInteractive()}))}(card,gameState.currentCards);else if("targetAll"===gameState.typePlayed){gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length);const enemiesCopy=[...gameState.enemies];gameState.enemiesLength=enemiesCopy.length,enemiesCopy.forEach(((enemy,index)=>{const isLastEnemy=index===enemiesCopy.length-1;playCard(card,enemy,isLastEnemy)}))}else"permanent"===gameState.typePlayed?function(card){const slot=gameState.permanentSlots.find((slot=>slot.available));slot?("kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length)):gameState.deck=gameState.deck.filter((c=>c!==card)),card.slot.available=!0,card.sprite.destroy(),card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,gameState.permanents.push({card:card,slot:slot,tokenSprite:card.tokenSprite}),displayTokenCard(card),activatePermanentFromToken(card)):function(card){switch(self.cameras.main.shake(70,.002,!1),card.isBeingPlayed=!1,console.log(`No available slot for permanent card ${card.key}`),card.key){case"foreverTrue":depleteForeverTrue(card);break;case"rebelSpirit":depleteRebelSpirit(card);break;case"rebelHeart":depleteRebelHeart(card);break;case"bushido":depleteBushido(card);break;case"toxicAvenger":depleteToxicAvenger(card);break;case"kirisuteGomen":depleteKirisuteGomen(card);case"toxicFrets":depleteToxicFrets(card);break;case"ashenEncore":depleteAshenEncore(card);break;case"edoEruption":depleteEdoEruption(card);break;case"steelToe":depleteSteelToe(card);break;case"kamishimoUberAlles":case"hollidayInKamakura":gameState.currentCards.push(card),card.slot.available=!1}}(card)}(card):(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,gameState.player));else self.cameras.main.shake(70,.002,!1)}function playCard(card,target,isLastEnemy=!1){gameState.playingCard=!0,fadeOutGameObject(card.sprite,200),fadeOutGameObject(gameState.actionText,50),gameState.targetingCursor.setVisible(!1);const{damagePlayed:damagePlayed,firePlayed:firePlayed,stancePointsPlayed:stancePointsPlayed,poisonPlayed:poisonPlayed,healPlayed:healPlayed,strengthPlayed:strengthPlayed,armorPlayed:armorPlayed,reduceTargetArmorPlayed:reduceTargetArmorPlayed,reduceTargetStrengthPlayed:reduceTargetStrengthPlayed,drawCardPlayed:drawCardPlayed}=function(card,target,isLastEnemy=!1){const moshpitMassacreCondition="moshpitMassacre"===card.key&&gameState.player.stancePoints>0&&target.poison>0,scorchedSoulCondition="scorchedSoul"===card.key&&target.poison>0,bladesBlightCondition="bladesBlight"===card.key&&target.poison>0,roninsRotCondition="roninsRot"===card.key&&target.poison>0,kabutuEdoCondition="kabutu"===card.key&&gameState.edoEruption&&gameState.player.stancePoints>0,steelToeCondition="combatBoots"===card.key&&gameState.steelToe,knuckleFistEdoCondition="knuckleFist"===card.key&&gameState.edoEruption&&gameState.player.stancePoints<0,steelToeOutcome=gameState.player.stancePoints>0?2*(1+gameState.player.stancePoints):2;return{damagePlayed:moshpitMassacreCondition?11:getValueOrInvoke(card.damage),firePlayed:kabutuEdoCondition?2*gameState.player.stancePoints:scorchedSoulCondition?12:getValueOrInvoke(card.fire),stancePointsPlayed:kabutuEdoCondition&&isLastEnemy?-1:getValueOrInvoke(card.stancePoints),poisonPlayed:bladesBlightCondition?target.poison:getValueOrInvoke(card.poison),healPlayed:getValueOrInvoke(card.heal),strengthPlayed:getValueOrInvoke(card.strength),armorPlayed:knuckleFistEdoCondition?-gameState.player.stancePoints:getValueOrInvoke(card.armor),reduceTargetArmorPlayed:steelToeCondition?steelToeOutcome:getValueOrInvoke(card.reduceTargetArmor),reduceTargetStrengthPlayed:roninsRotCondition?target.poison:getValueOrInvoke(card.reduceTargetStrength),drawCardPlayed:getValueOrInvoke(card.drawCard)}}(card,target,isLastEnemy),damageModifyer=(1+.1*gameState.player.strength)*(1-target.armor/20),damageTotal=Math.round(Math.max(0,firePlayed+damagePlayed*damageModifyer));target!=gameState.player&&(gameState.score.damageDealt+=damageTotal,console.log(`${damagePlayed} Physical Damage and ${firePlayed} Fire Damage was dealt to ${target.name}`),target.strengthTurn-=reduceTargetStrengthPlayed,target.armor-=reduceTargetArmorPlayed,target.poison+=poisonPlayed,target.health-=damageTotal),"seppuku"===card.key||"boneShredder"===card.key?gameState.player.strengthBase+=strengthPlayed:gameState.player.strengthCard+=strengthPlayed,"libertySpikes"===card.key&&gameState.player.stancePoints>0&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),healPlayed&&(gameState.player.health=Math.min(gameState.player.health+healPlayed,gameState.player.healthMax),self.updateHealthBar(gameState.player)),gameState.player.armorCard+=armorPlayed,gameState.player.poison=Math.max(0,gameState.player.poison-card.poisonRemove),function(damageTotal,poisonPlayed,strengthPlayed,armorPlayed){const actionTextConfig={fontSize:"32px",fill:"#ff0000"};if("targetSelected"===gameState.typePlayed||"targetAll"===gameState.typePlayed){self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8});const actionTextTarget=`${damageTotal>0?`Deals ${damageTotal} damage`:""}\n\n${poisonPlayed>0?`Deals ${poisonPlayed} Poison`:""}`;gameState.actionText=self.add.text(550,300,actionTextTarget,actionTextConfig).setOrigin(.5),self.attackTweens(gameState.player,60)}else strengthPlayed>0?(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${strengthPlayed} Strength`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player)):armorPlayed>0&&(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${armorPlayed} Armor`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player))}(damageTotal,poisonPlayed,strengthPlayed,armorPlayed),gameState.player.stancePoints+stancePointsPlayed>=-3&&gameState.player.stancePoints+stancePointsPlayed<=3&&(gameState.player.stancePoints+=stancePointsPlayed,self.updateStanceBar(gameState.player)),gameState.player.freedomAfterCardPlayed="Freedom"===gameState.player.stance,!gameState.player.freedomBeforeCardPlayed&&gameState.player.freedomAfterCardPlayed&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),updateStats(target),self.updateHealthBar(target),updateStrengthAndArmor(gameState.player),removeIfDead(target),checkGameOver(),updateEnemyActions(),drawNewCards(drawCardPlayed),gameState.enemies.forEach((enemy=>{self.updateEnemyIntention(enemy)})),self.time.delayedCall(260,(()=>{gameState.playingCard=!1})),self.time.delayedCall(1500,(()=>{gameState.actionText&&gameState.actionText.destroy()}))}function initiateEnemiesTurn(){0!==gameState.enemies.length&&(gameState.enemies[gameState.currentEnemyIndex].alive?function(enemy){gameState.playersTurn&&(gameState.playersTurn=!1,enemy.turnText=self.add.text(550,300,"Enemy turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),self.time.delayedCall(1800,(()=>{fadeOutGameObject(enemy.turnText,200)})));enemy.turnComplete=!1,function(enemy){enemy.poisonText=self.add.text(570,350,"",{fontSize:"30px",fill:"#ff0000"}).setOrigin(.5),self.updatePoison(enemy),gameState.toxicAvenger&&enemy.poison>0&&updateStats(enemy);const delaytime=""!==enemy.poisonText._text||enemy.turnText?1800:800;self.time.delayedCall(delaytime,(()=>{enemy.poisonText.destroy();const chosenAction=enemy.chosenAction,actionTextConfig={fontSize:"32px",fill:"#ff0000"};if(gameState.player.poison+=chosenAction.poison,enemy===gameState.enemy3?gameState.enemies.forEach((enemy=>{enemy.health=Math.min(enemy.health+chosenAction.heal,enemy.healthMax),enemy.strengthBase=Math.min(enemy.strengthBase+chosenAction.strength,enemy.strengthMax),enemy.armor=Math.min(enemy.armor+chosenAction.armor,enemy.armorMax),updateStats(enemy)})):(enemy.health=Math.min(enemy.health+chosenAction.heal,enemy.healthMax),enemy.strengthBase=Math.min(enemy.strengthBase+chosenAction.strength,enemy.strengthMax),enemy.armor=Math.min(enemy.armor+chosenAction.armor,enemy.armorMax),gameState.player.armorBase-=chosenAction.reduceTargetArmor,gameState.player.strengthBase-=chosenAction.reduceTargetStrength,updateStats(enemy),updateStats(gameState.player)),chosenAction.damage>0||chosenAction.fire>0){const damageModifyer=(1+.1*enemy.strength)*(1-gameState.player.armor/20);if(self.cameras.main.shake(120,.005,!1),gameState.attackSound.play({volume:.8}),console.log(`enemy.damageTotal: ${enemy.damageTotal}`),enemy.damageTotal=Math.round(Math.max(0,chosenAction.fire+chosenAction.damage*damageModifyer)),gameState.player.health-=enemy.damageTotal,gameState.score.damageTaken+=enemy.damageTotal,enemy===gameState.enemy1||enemy===gameState.enemy2){const stealText=chosenAction.armor>0?`Steals ${chosenAction.armor} Armor`:`Steals ${chosenAction.strength} Strength`;gameState.actionText=self.add.text(550,300,`Deals ${enemy.damageTotal} damage\n${stealText}`,actionTextConfig).setOrigin(.5)}else gameState.actionText=self.add.text(550,300,`Deals ${enemy.damageTotal} damage`,actionTextConfig).setOrigin(.5);self.tweens.add({targets:enemy.sprite,x:enemy.sprite.x-60,duration:120,ease:"Cubic",yoyo:!0})}else chosenAction.heal>0?(gameState.healSound.play({volume:.5}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy)):(chosenAction.strength>0||chosenAction.armor>0||chosenAction.poison>0)&&(gameState.powerUpSound.play({volume:.2}),gameState.actionText=self.add.text(550,300,chosenAction.text,actionTextConfig).setOrigin(.5),self.powerUpTweens(enemy));enemy.strengthTurn=0,function(enemy){[gameState.player,enemy].forEach((character=>{self.updateHealthBar(character),removeIfDead(character),updateStats(character)})),self.time.delayedCall(1500,(()=>{fadeOutGameObject(gameState.actionText,200),enemy.turnComplete=!0,checkGameOver()||!gameState.enemies[gameState.currentEnemyIndex].turnComplete&&gameState.enemies[gameState.currentEnemyIndex].alive||(gameState.currentEnemyIndex++,gameState.currentEnemyIndex<gameState.enemies.length?initiateEnemiesTurn():(gameState.currentEnemyIndex=0,startPlayerTurn()))}))}(enemy)}))}(enemy)}(gameState.enemies[gameState.currentEnemyIndex]):(gameState.currentEnemyIndex++,initiateEnemiesTurn()))}function updateEnemyActions(){1===gameState.turn?gameState.enemy1.actions=[{key:"Intends to\nSteal Armor",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:3,reduceTargetStrength:0,reduceTargetArmor:3,text:"Gains 3 armor",probability:1}]:2===gameState.turn?gameState.enemy1.actions=[{key:()=>`Intends to\nDeal ${Math.round(12*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:12,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,reduceTargetStrength:0,reduceTargetArmor:3,text:"Deals 12 damage",probability:1}]:gameState.enemy1.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 5 fire damage",probability:.15+(gameState.enemy1.health>=gameState.enemy1.healthMax?.2:0)/5},{key:()=>`Intends to\nDeal ${Math.round(10*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:10,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 12 damage\nSteals 1 Armor",probability:.22+(gameState.enemy1.health>=gameState.enemy1.healthMax?.23:0)/5},{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:1,armor:0,reduceTargetStrength:1,reduceTargetArmor:0,text:"Deals 17 damage\nSteals 1 Strength",probability:.13+(gameState.enemy1.health>=gameState.enemy1.healthMax?.23:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Heals 15 HP\nSteals 1 Armor",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:1,armor:0,reduceTargetStrength:1,reduceTargetArmor:0,text:"Heals 25 HP\nSteals 1 Strength",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.06},{key:"Intends to\nSteal Strength",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:2,armor:1,reduceTargetStrength:2,reduceTargetArmor:1,text:"Steals 2 Strenght",probability:.12+(gameState.enemy1.health>=gameState.enemy1.healthMax?.23:0)/5},{key:"Intends to\nSteal Armor",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:2,reduceTargetStrength:0,reduceTargetArmor:2,text:"Steals 2 Armor",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.23:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 5 poison",probability:0}],gameState.enemy2.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 5 fire damage",probability:.15+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(10*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:10,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 12 damage\nSteals 1 Armor",probability:.23+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:1,armor:0,reduceTargetStrength:1,reduceTargetArmor:0,text:"Deals 17 damage\nSteals 1 Strength",probability:.13+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Heals 15 HP\nSteals 1 Armor",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.16},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:1,armor:0,reduceTargetStrength:1,reduceTargetArmor:0,text:"Heals 25 HP\nSteals 1 Strength",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.06},{key:"Intends to\nSteal Strength",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:2,armor:1,reduceTargetStrength:2,reduceTargetArmor:1,text:"Steals 2 Strenght",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nSteal Armor",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:2,reduceTargetStrength:0,reduceTargetArmor:3,text:"Steals 3 Armor",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 5 poison",probability:0}],gameState.turn%2==1?gameState.enemy3.actions=[{key:"Intends to\nHeal his team",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:0,text:"All enemies heals 15 HP",probability:1}]:gameState.enemy3.actions=[{key:()=>"Intends to\nBuff his team",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:2,armor:3,text:"All enemies Gain 2 strength and 3 armor",probability:1}]}function checkGameOver(){return gameState.player.alive?!gameState.enemies.some((enemy=>enemy.alive))&&(gameState.playersTurn=!1,function(){gameState.score.numberOfTurns+=gameState.turn,gameState.score.levelsCompleted+=1,gameState.music.stop(),self.updateManaBar(gameState.player),addHandtoDeck(),self.time.delayedCall(600,(()=>{gameState.attackSound.isPlaying&&gameState.attackSound.stop(),gameState.victorySound.play({volume:.9,rate:1}),self.clearBoard()})),gameState.actionText&&(gameState.actionText.destroy(),console.log("gameState.actionText still existed at initiateVictory and got destroyed"));const victoryTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},victoryText=self.add.text(550,300,"Victory!",victoryTextConfig).setOrigin(.5);self.time.delayedCall(2e3,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),victoryText.destroy(),function(){self.shuffleDeck(gameState.bonusCards);const gameOverTextConfig={fontSize:"40px",fill:"#000000"},rewardTextConfig={fontSize:"25px",fill:"#000000"};gameState.gameOverText=self.add.text(550,180,"Choose a reward",gameOverTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsText=self.add.text(550,400,"Add 1 card\nto your deck",rewardTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsButton=self.add.image(550,400,"rectangularButton"),gameState.rewardAddCardsButton.setScale(1.2).setInteractive().setOrigin(.5).setDepth(102),gameState.rewardAddCardsButton.on("pointerover",(function(){this.setTexture("rectangularButtonHovered")})),gameState.rewardAddCardsButton.on("pointerout",(function(){this.setTexture("rectangularButton")})),gameState.rewardAddCardsButton.on("pointerup",(function(){gameState.rewardAddCardsText.destroy(),gameState.gameOverText.destroy(),gameState.rewardAddCardsButton.destroy(),function(){console.log("rewardAddCard called"),gameState.gameOverText.destroy();const x=320,y=300,spacing=220;let bonusCards=gameState.bonusCards.slice(0,3);console.log(`bonusCards: ${bonusCards.key}`),bonusCards.forEach(((bonusCard,index)=>{bonusCard.sprite=self.add.sprite(x+index*spacing,y,bonusCard.key),bonusCard.sprite.setScale(.45).setInteractive().setDepth(102),console.log(`bonusCardsprite added for: ${bonusCard.key}`),bonusCard.sprite.on("pointerover",(()=>{gameState.cardsDealtSound.play({volume:.6}),self.cardTweens(bonusCard.sprite,.58,200)}),self),bonusCard.sprite.on("pointerout",(()=>{self.cardTweens(bonusCard.sprite,.45,400)}),self),bonusCard.sprite.on("pointerup",(()=>{let nextlevelstarting=!1;gameState.deck.push(bonusCard),"permanent"===bonusCard.type&&gameState.bonusCards.splice(gameState.bonusCards.indexOf(bonusCard),1),bonusCards.forEach((card=>{card.sprite.removeInteractive(),card!==bonusCard&&fadeOutGameObject(card.sprite,200)})),self.tweens.add({targets:bonusCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),self.add.text(550,180,"Gained 1 card",{fontSize:"40px",fill:"#000000"}).setOrigin(.5),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()}))}()}))}(),!0):(gameState.playersTurn=!1,function(){gameState.player.health=0,self.updateManaBar(gameState.player),addHandtoDeck(),gameState.music.stop(),gameState.endOfTurnButton.destroy(),gameState.actionText&&fadeOutGameObject(gameState.actionText,200);gameState.score.numberOfTurns+=gameState.turn,gameState.gameOverText=self.add.text(550,300," Defeat!",{fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setOrigin(.5),gameState.gameOverText.setInteractive();let scenetransitionstarted=!1;self.time.delayedCall(400,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),scenetransitionstarted||(gameState.gameOverText.on("pointerup",(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})),self.time.delayedCall(2500,(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})))}))}(),!0)}function startNextLevel(){self.cameras.main.fadeOut(1e3),self.time.delayedCall(1e3,(()=>{self.scene.start("Level4Fight3")}))}function activatePermanentFromToken(card){if("foreverTrue"===card.key)gameState.foreverTrue=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteForeverTrue(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelSpirit"===card.key)gameState.rebelSpirit=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelSpirit(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelHeart"===card.key)gameState.rebelHeart=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelHeart(card):self.cameras.main.shake(70,.002,!1)}));else if("bushido"===card.key)gameState.bushido=!0,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteBushido(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicAvenger"===card.key)gameState.toxicAvenger=!0,gameState.enemies.forEach((enemy=>updateStats(enemy))),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicAvenger(card):self.cameras.main.shake(70,.002,!1)}));else if("kirisuteGomen"===card.key)gameState.player.strengthMax+=5,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn&&gameState.enemies.some((enemy=>enemy.health<30))?depleteKirisuteGomen(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicFrets"===card.key)gameState.toxicFrets=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicFrets(card):self.cameras.main.shake(70,.002,!1)}));else if("ashenEncore"===card.key)gameState.ashenEncore=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteAshenEncore(card):self.cameras.main.shake(70,.002,!1)}));else if("edoEruption"===card.key)gameState.edoEruption=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteEdoEruption(card):self.cameras.main.shake(70,.002,!1)}));else if("steelToe"===card.key)gameState.steelToe=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteSteelToe(card):self.cameras.main.shake(70,.002,!1)}));else if("kamishimoUberAlles"===card.key){const tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;gameState.kamishimoUberAlles+=1,updateStrengthAndArmor(gameState.player),tokenSprite.on("pointerup",(()=>{gameState.playersTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.kamishimoUberAlles-=1,updateStrengthAndArmor(gameState.player)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}else if("hollidayInKamakura"===card.key){let tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;const turnplayed=gameState.turn,fightplayed=gameState.score.levelsCompleted;tokenSprite.on("pointerup",(()=>{const depletedDifferentTurn=turnplayed!=gameState.turn||fightplayed!=gameState.score.levelsCompleted;console.log(`depletedDifferentTurn: ${depletedDifferentTurn}\nturnplayed: ${turnplayed}\ngameState.turn: ${gameState.turn}\nfightplayed: ${fightplayed}\ngameState.score.levelsCompleted: ${gameState.score.levelsCompleted}\ngameState.playersTurn: ${gameState.playersTurn}`),gameState.playersTurn&&depletedDifferentTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.player.manaMax+=1,gameState.player.mana+=1,self.updateManaBar(gameState.player),drawNewCards(1)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}}function displayTokenCard(card){card.tokenSprite.on("pointerover",(function(){gameState.cardsDealtSound.play({volume:1.5}),card.permanentCardSprite=self.add.sprite(550,300,card.key).setScale(.55).setDepth(26)})),card.tokenSprite.on("pointerout",(function(){card.permanentCardSprite.destroy()}))}function depleteForeverTrue(card){gameState.foreverTrue=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),drawNewCards(8)}function depleteRebelSpirit(card){gameState.rebelSpirit=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.mana+=3,gameState.player.manaMax+=3,self.updateManaBar(gameState.player)}function depleteRebelHeart(card){gameState.rebelHeart=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+12),self.updateHealthBar(gameState.player)}function depleteBushido(card){gameState.bushido=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.strengthBase+=6,updateStrengthAndArmor(gameState.player)}function depleteToxicAvenger(card){gameState.toxicAvenger=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison+=4,updateStats(enemy)}))}function depleteKirisuteGomen(card){if(gameState.enemies.some((enemy=>enemy.health<30))){gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let functionActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){enemy.health<30&&functionActive?(enemy.health=0,gameState.attackSound.play({volume:1}),self.cameras.main.shake(120,.025,!1),card.tokenSlot&&(card.tokenSlot.available=!0,gameState.player.strengthMax-=5),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),removeIfDead(enemy),checkGameOver(),updateStrengthAndArmor(gameState.player)):(self.cameras.main.shake(70,.002,!1),functionActive=!1),gameState.targetingCursor.setVisible(!1)}))}))}else self.cameras.main.shake(70,.002,!1),card.slot.available=!1,gameState.currentCards.some((card=>"kirisuteGomen"===card.key))||(gameState.currentCards.push(card),gameState.player.mana+=1,self.updateManaBar(gameState.player))}function depleteToxicFrets(card){gameState.toxicFrets=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison>0&&(enemy.health-=2*enemy.poison,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver())}))}function depleteAshenEncore(card){console.log("DEBUG: depleteAshenEncore started"),gameState.ashenEncore=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card));const ashenEncoreDepleteText=self.add.text(550,350,"Deals 12 firedamage\n to all enemies",{fontSize:"32px",fill:"#ff0000"}).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDepleteText.destroy()})),gameState.enemies.forEach((enemy=>{enemy.health-=12,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver()}))}function depleteEdoEruption(card){gameState.edoEruption=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card))}function depleteSteelToe(card){gameState.steelToe=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let depleteSteelToeActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){depleteSteelToeActive&&(enemy.armor-=7,updateStats(enemy),gameState.attackSound.play({volume:.6}),self.cameras.main.shake(100,.012,!1),gameState.targetingCursor.setVisible(!1),depleteSteelToeActive=!1)}))}))}function updateStrengthAndArmor(character){let strengthBushido=0;gameState.endOfTurnButtonPressed?(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard+character.armorStance),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+strengthBushido)):(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+character.strengthCard+strengthBushido)),gameState.kamishimoUberAlles>0&&gameState.player.stancePoints<0&&(character.strength=Math.min(character.strengthMax,character.strength-gameState.player.stancePoints*gameState.kamishimoUberAlles)),updateStats(character)}function updateStats(character){character!=gameState.player&&(character.strength=character.strengthBase+character.strengthTurn,gameState.toxicAvenger&&character.poison>0&&(character.strength-=4)),character.armorText.setText(`${character.armor}/${character.armorMax}`),character.strengthText.setText(`${character.strength}/${character.strengthMax}`)}function removeIfDead(character){if(character.health<=0){if(character.health=0,character.sprite.removeInteractive(),character.alive=!1,character.turnComplete=!0,character!=gameState.player){const indexEnemies=gameState.enemies.indexOf(character),indexCharacters=gameState.characters.indexOf(character);-1!==indexEnemies&&gameState.enemies.splice(indexEnemies,1),-1!==indexCharacters&&gameState.characters.splice(indexCharacters,1)}[character.sprite,character.healthBarBackground,character.healthBar,character.healthBarText,character.manaBarBackground,character.manaBar,character.manaBarText,character.strengthAndArmorImage,character.strengthText,character.armorText,character.descriptionBackground,character.descriptionText,character.intentionText,character.intentionBackground].forEach((object=>{fadeOutGameObject(object,500)}))}}function addHandtoDeck(){for(;gameState.currentCards.length>0;){let card=gameState.currentCards.pop();card.slot.available||(card.slot.available=!0),gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),fadeOutGameObject(card.sprite,200)}}function drawNewCards(numCards){const numCardsLimit=Math.min(gameState.deck.length,8),numOfFreeSlots=gameState.slots.filter((slot=>slot.available)).length;numCards=numOfFreeSlots<numCards?numOfFreeSlots:numCards;for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{if(gameState.currentCards.length<numCardsLimit){0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));let card=gameState.drawPile.pop();card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),console.log(`card added: ${card.key}`),card.isBeingPlayed=!1,gameState.currentCards.push(card);let availableSlots=gameState.slots.filter((slot=>slot.available)),slot=availableSlots[Math.floor(availableSlots.length/2)];if(slot){card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot;let cardDepth=10+slot.index;card.sprite.setDepth(cardDepth),self.animateCard(card,cardDepth)}gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),gameState.ashenEncore&&gameState.enemies.forEach((enemy=>{if(enemy.health-=4,self.updateHealthBar(enemy),removeIfDead(enemy),"undefined"==typeof ashenEncoreText||!ashenEncoreText){const ashenEncoreConfig={fontSize:"32px",fill:"#ff0000"},ashenEncoreKey="Deals 4 fire damage to all enemies",ashenEncoreDrawText=self.add.text(550,350,ashenEncoreKey,ashenEncoreConfig).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDrawText.destroy()}))}})),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}else self.cameras.main.shake(70,.002,!1)}))}function getValueOrInvoke(cardProperty){return"function"==typeof cardProperty?cardProperty():cardProperty}function fadeOutGameObject(gameObject,duration){gameObject&&self.tweens.add({targets:gameObject,alpha:0,ease:"Power1",duration:duration,onComplete:()=>{gameObject.destroy()}},self)}gameState.slots=[{available:!0,x:230,y:640,index:0,angle:-12},{available:!0,x:320,y:610,index:1,angle:-8},{available:!0,x:410,y:590,index:2,angle:-4},{available:!0,x:500,y:580,index:3,angle:0},{available:!0,x:590,y:590,index:4,angle:4},{available:!0,x:680,y:610,index:5,angle:8},{available:!0,x:770,y:640,index:6,angle:12},{available:!0,x:860,y:670,index:7,angle:16}],gameState.endOfTurnButton.on("pointerup",(function(){gameState.currentEnemyIndex=0,gameState.targetingCursor.visible||!gameState.playersTurn?self.cameras.main.shake(70,.002,!1):(this.setTexture("rectangularButtonPressed"),this.removeInteractive(),gameState.buttonPressedSound.play(),gameState.endOfTurnButtonPressed=!0,addHandtoDeck(),updateStrengthAndArmor(gameState.player),updateEnemyActions(),gameState.rebelHeart&&(gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+Math.abs(gameState.player.stancePoints)),self.updateHealthBar(gameState.player)),gameState.enemies.forEach((enemy=>{enemy.turnComplete=!enemy.alive,fadeOutGameObject(enemy.intentionText,200),fadeOutGameObject(enemy.intentionBackground,200)})),0!=gameState.player.mana&&(gameState.player.mana=0,self.updateManaBar(gameState.player)),self.time.delayedCall(100,(()=>{gameState.actionText&&gameState.actionText.destroy(),initiateEnemiesTurn()})))})),"admin"===gameState.playerName&&(gameState.getManaButton=self.add.sprite(550,200,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.getManaText=self.add.text(550,200,"Get Mana",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.getManaButton.on("pointerup",(()=>{gameState.playersTurn&&(gameState.player.mana=gameState.player.manaMax,self.updateManaBar(gameState.player),console.log("mana gained"))})),gameState.drawCardButton=self.add.sprite(550,300,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.drawCardText=self.add.text(550,300,"Draw Card",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.drawCardButton.on("pointerup",(()=>{gameState.playersTurn&&(drawNewCards(1),console.log("card drawn"))})),gameState.killEnemyButton=self.add.sprite(550,400,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.killEnemyText=self.add.text(550,400,"Kill Enemy",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.killEnemyButton.on("pointerup",(()=>{if(gameState.enemies.some((enemy=>enemy.health>0&&gameState.playersTurn))){const enemy=gameState.enemies.find((enemy=>enemy.health>0));enemy.health=0,removeIfDead(enemy),checkGameOver(),console.log(`${enemy.name} killed`)}})))}update(){gameState.targetingCursor.visible&&(gameState.targetingCursor.x=this.input.mousePointer.x,gameState.targetingCursor.y=this.input.mousePointer.y)}}class Level4Fight3 extends BaseScene{self;constructor(){super("Level4Fight3")}preload(){this.load.image("bakgrunnFortress3","assets/images/bakgrunnFortress3.jpg"),this.load.image("monster5","assets/images/sprites/monster5.png"),this.load.image("sorcerer2","assets/images/sprites/sorcerer2.png")}create(){const self=this;function startPlayerTurn(){let numCards=gameState.player.numCardsBase+gameState.player.numCardsStance;gameState.turn+=1,gameState.endOfTurnButtonPressed=!1,gameState.yourTurnText=self.add.text(550,300,"Your turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),gameState.player.poisonText=self.add.text(570,350,"",{fontSize:"25px",fill:"#ff0000"}).setOrigin(.5),console.log(`player's turn number ${gameState.turn} has started`),gameState.player.armorCard=0,gameState.player.strengthCard=0;const manaMax=gameState.player.manaBase+gameState.player.manaStance;gameState.player.manaMax=gameState.rebelSpirit&&gameState.turn%3==0?manaMax+1:manaMax,gameState.player.mana=gameState.player.manaMax,gameState.foreverTrue&&gameState.player.stancePoints>0?(gameState.player.manaMax+=1,gameState.player.mana+=1):gameState.player.stancePoints=0,self.updateStanceBar(gameState.player),self.updateManaBar(gameState.player),self.updateHealthBar(gameState.player),self.updatePoison(gameState.player),removeIfDead(gameState.player),updateStrengthAndArmor(gameState.player),self.time.delayedCall(2200,(()=>{gameState.player.poisonText.destroy(),fadeOutGameObject(gameState.yourTurnText,200),function(numCards){gameState.endOfTurnButton.setTexture("rectangularButton"),gameState.endOfTurnButton.setInteractive();const startSlotIndex=Math.floor((gameState.slots.length-numCards)/2);for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));const card=gameState.drawPile.pop(),cardDepth=10+i+startSlotIndex;card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),card.isBeingPlayed=!1,gameState.currentCards.push(card),card.sprite.setDepth(cardDepth);const slot=gameState.slots[startSlotIndex+i];slot&&(card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot),gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),self.animateCard(card,cardDepth),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}));gameState.playersTurn=!0}(numCards),gameState.enemies.forEach((enemy=>{updateEnemyActions(),function(enemy){!function(enemy){const totalProbability=enemy.actions.reduce(((sum,action)=>sum+action.probability),0);if(1!==totalProbability){const scalingFactor=1/totalProbability;for(let action of enemy.actions)action.probability*=scalingFactor}}(enemy);let cumProb=0;for(let i=0;i<enemy.actions.length;i++)cumProb+=enemy.actions[i].probability,enemy.actions[i].cumulativeProbability=cumProb;const rand=Math.random();enemy.chosenAction=enemy.actions.find((action=>rand<action.cumulativeProbability))}(enemy),function(enemy){const actionKey="function"==typeof enemy.chosenAction.key?enemy.chosenAction.key():enemy.chosenAction.key,textConfig={fontSize:"13px",fill:"#000000"};enemy.intentionText=self.add.text(enemy.x+10,enemy.y-enemy.height/2-40,`${actionKey}`,textConfig),enemy.intentionText.setOrigin(.5,1).setDepth(11);const originalSpriteWidth=self.textures.get("listbox1").getSourceImage().width,scale=enemy.intentionText.width/originalSpriteWidth;enemy.intentionBackground=self.add.sprite(enemy.x+10,enemy.y-enemy.height/2-33,"listbox1").setScale(1.05*scale,1),enemy.intentionBackground.setInteractive().setOrigin(.5,1).setAlpha(.85).setDepth(10)}(enemy)}))}))}this.baseCreate("bakgrunnFortress3",.7),this.resetPlayer(gameState.player,.35),this.addButtons(),function(){gameState.drawPileImage=self.add.image(120,600,"deck"),gameState.drawPileImage.setScale(.13).setOrigin(.5,.5).setInteractive();gameState.drawPileText=self.add.text(120,600,gameState.drawPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.drawPileText.setDepth(100).setOrigin(.5,.5),gameState.drawPileImage.on("pointerover",(function(){if(gameState.drawPile.length>0){const cardsPerRow=gameState.drawPile.length<12?4:6,cardSpacing=105,startX=gameState.drawPile.length<12?400:250,startY=150;gameState.drawPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.drawPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]}))}(),gameState.discardPileText=self.add.text(980,600,gameState.discardPile.length,{fontSize:"45px",fill:"#000000",fontWeight:"bold"}),gameState.discardPileText.setDepth(100).setOrigin(.5,.5),gameState.discardPileImage=self.add.image(980,600,"deck"),gameState.discardPileImage.setScale(.13).setOrigin(.5,.5).setInteractive().setTint(16711680),gameState.discardPileImage.on("pointerover",(function(){if(gameState.discardPile.length>0){const cardsPerRow=gameState.discardPile.length<12?4:6,cardSpacing=105,startX=gameState.discardPile.length<12?400:250,startY=150;gameState.discardPile.forEach(((card,index)=>{let cardX=startX+index%cardsPerRow*cardSpacing,cardY=startY+1.5*Math.floor(index/cardsPerRow)*cardSpacing,cardImage=self.add.image(cardX,cardY,card.key).setScale(.27).setDepth(200);gameState.cardImages.push(cardImage)}))}})),gameState.discardPileImage.on("pointerout",(function(){gameState.cardImages.forEach((cardImage=>{fadeOutGameObject(cardImage,200)})),gameState.cardImages=[]})),gameState.kamishimoUberAlles=0,gameState.kirisuteGomen=!1,gameState.toxicFrets=!1,gameState.ashenEncore=!1,gameState.edoEruption=!1,gameState.steelToe=!1,gameState.currentCards=[],gameState.cardImages=[],gameState.enemy1=Object.create(gameState.enemy),gameState.enemy1.name="Goh Resurrected\nSteals Strength and Armor",gameState.enemy1.sprite=this.add.sprite(600,370,"monster2").setScale(.31).setFlipX(!1).setInteractive(),gameState.enemy1.health=50,gameState.enemy1.healthMax=50,gameState.enemy1.armor=0,gameState.enemy2=Object.create(gameState.enemy),gameState.enemy2.name="Terrorsnout\nSteals Strength and Armor",gameState.enemy2.sprite=this.add.sprite(770,370,"monster5").setScale(.48).setFlipX(!1).setInteractive(),gameState.enemy2.health=50,gameState.enemy2.healthMax=50,gameState.enemy2.armor=0,gameState.enemy3=Object.create(gameState.enemy),gameState.enemy3.name="Necronis\nMaster of fire and buffs",gameState.enemy3.sprite=this.add.sprite(950,350,"sorcerer2").setScale(.29).setFlipX(!1).setInteractive(),gameState.enemy3.health=80,gameState.enemy3.healthMax=80,gameState.enemy3.armor=0,gameState.enemies=[gameState.enemy1,gameState.enemy2,gameState.enemy3],gameState.characters=[...gameState.enemies,gameState.player],gameState.characters.forEach((character=>{character.height=character.sprite.displayHeight,character.width=character.sprite.displayWidth,character.x=character.sprite.x,character.y=character.sprite.y,this.addHealthBar(character,character.healthBarColor),this.addStatsDisplay(character),this.describeCharacter(character,character.sprite)})),this.addManaBar(gameState.player),this.addStanceBar(gameState.player,"#a9a9a9"),gameState.permanents.forEach((permanent=>{const card=permanent.card,slot=permanent.slot;"kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?slot.available=!0:(card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,console.log(`Recreated permanent: ${card.key}\nfor slot ${slot.index}`),displayTokenCard(card),activatePermanentFromToken(card))})),function(){gameState.turn=0,gameState.musicTheme.stop(),self.shuffleDeck(gameState.drawPile);const{level:level,fight:fight}=self.extractLevelFightFromName(self.scene.key);gameState.startText=self.add.text(550,300,`Level ${level}\nFight ${fight}!`,{fontSize:"60px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setDepth(200).setOrigin(.5),self.time.delayedCall(350,(()=>{gameState.music.play({loop:!0,volume:.35})})),self.time.delayedCall(3e3,(()=>{fadeOutGameObject(gameState.startText,200),self.time.delayedCall(300,startPlayerTurn())}))}();function activateCard(card){if(gameState.costPlayed="function"==typeof card.cost?card.cost():card.cost,gameState.typePlayed="function"==typeof card.type?card.type():card.type,gameState.player.mana>=gameState.costPlayed&&!1===gameState.playingCard)if(gameState.player.mana-=gameState.costPlayed,self.updateManaBar(gameState.player),console.log(`activated card: ${card.key}\nCost: ${gameState.costPlayed}`),gameState.player.freedomBeforeCardPlayed="Freedom"===gameState.player.stance,card.isBeingPlayed=!0,gameState.currentCards=gameState.currentCards.filter((c=>c!==card)),card.slot&&(card.slot.available=!0),"targetSelected"===gameState.typePlayed)!function(card,handOfCards){gameState.targetingCursor.setVisible(!0),gameState.thisTurn=gameState.turn;for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.removeInteractive();for(let enemy of gameState.enemies)enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){card.isBeingPlayed&&gameState.playersTurn&&gameState.thisTurn===gameState.turn&&(card.isBeingPlayed=!1,gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,enemy));for(let cardOnHand of handOfCards)cardOnHand.sprite&&cardOnHand.sprite.scene&&cardOnHand.sprite.setInteractive()}))}(card,gameState.currentCards);else if("targetAll"===gameState.typePlayed){gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length);const enemiesCopy=[...gameState.enemies];gameState.enemiesLength=enemiesCopy.length,enemiesCopy.forEach(((enemy,index)=>{const isLastEnemy=index===enemiesCopy.length-1;playCard(card,enemy,isLastEnemy)}))}else"permanent"===gameState.typePlayed?function(card){const slot=gameState.permanentSlots.find((slot=>slot.available));slot?("kamishimoUberAlles"===card.key||"hollidayInKamakura"===card.key?(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length)):gameState.deck=gameState.deck.filter((c=>c!==card)),card.slot.available=!0,card.sprite.destroy(),card.tokenSprite=self.add.sprite(slot.x,slot.y,card.token).setScale(.075).setInteractive(),slot.available=!1,card.tokenSlot=slot,gameState.permanents.push({card:card,slot:slot,tokenSprite:card.tokenSprite}),displayTokenCard(card),activatePermanentFromToken(card)):function(card){switch(self.cameras.main.shake(70,.002,!1),card.isBeingPlayed=!1,console.log(`No available slot for permanent card ${card.key}`),card.key){case"foreverTrue":depleteForeverTrue(card);break;case"rebelSpirit":depleteRebelSpirit(card);break;case"rebelHeart":depleteRebelHeart(card);break;case"bushido":depleteBushido(card);break;case"toxicAvenger":depleteToxicAvenger(card);break;case"kirisuteGomen":depleteKirisuteGomen(card);case"toxicFrets":depleteToxicFrets(card);break;case"ashenEncore":depleteAshenEncore(card);break;case"edoEruption":depleteEdoEruption(card);break;case"steelToe":depleteSteelToe(card);break;case"kamishimoUberAlles":case"hollidayInKamakura":gameState.currentCards.push(card),card.slot.available=!1}}(card)}(card):(gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),playCard(card,gameState.player));else self.cameras.main.shake(70,.002,!1)}function playCard(card,target,isLastEnemy=!1){gameState.playingCard=!0,fadeOutGameObject(card.sprite,200),fadeOutGameObject(gameState.actionText,50),gameState.targetingCursor.setVisible(!1);const{damagePlayed:damagePlayed,firePlayed:firePlayed,stancePointsPlayed:stancePointsPlayed,poisonPlayed:poisonPlayed,healPlayed:healPlayed,strengthPlayed:strengthPlayed,armorPlayed:armorPlayed,reduceTargetArmorPlayed:reduceTargetArmorPlayed,reduceTargetStrengthPlayed:reduceTargetStrengthPlayed,drawCardPlayed:drawCardPlayed}=function(card,target,isLastEnemy=!1){const moshpitMassacreCondition="moshpitMassacre"===card.key&&gameState.player.stancePoints>0&&target.poison>0,scorchedSoulCondition="scorchedSoul"===card.key&&target.poison>0,bladesBlightCondition="bladesBlight"===card.key&&target.poison>0,roninsRotCondition="roninsRot"===card.key&&target.poison>0,kabutuEdoCondition="kabutu"===card.key&&gameState.edoEruption&&gameState.player.stancePoints>0,steelToeCondition="combatBoots"===card.key&&gameState.steelToe,knuckleFistEdoCondition="knuckleFist"===card.key&&gameState.edoEruption&&gameState.player.stancePoints<0,steelToeOutcome=gameState.player.stancePoints>0?2*(1+gameState.player.stancePoints):2;return{damagePlayed:moshpitMassacreCondition?11:getValueOrInvoke(card.damage),firePlayed:kabutuEdoCondition?2*gameState.player.stancePoints:scorchedSoulCondition?12:getValueOrInvoke(card.fire),stancePointsPlayed:kabutuEdoCondition&&isLastEnemy?-1:getValueOrInvoke(card.stancePoints),poisonPlayed:bladesBlightCondition?target.poison:getValueOrInvoke(card.poison),healPlayed:getValueOrInvoke(card.heal),strengthPlayed:getValueOrInvoke(card.strength),armorPlayed:knuckleFistEdoCondition?-gameState.player.stancePoints:getValueOrInvoke(card.armor),reduceTargetArmorPlayed:steelToeCondition?steelToeOutcome:getValueOrInvoke(card.reduceTargetArmor),reduceTargetStrengthPlayed:roninsRotCondition?target.poison:getValueOrInvoke(card.reduceTargetStrength),drawCardPlayed:getValueOrInvoke(card.drawCard)}}(card,target,isLastEnemy),damageModifyer=(1+.1*gameState.player.strength)*(1-target.armor/20),damageTotal=Math.round(Math.max(0,firePlayed+damagePlayed*damageModifyer));target!=gameState.player&&(gameState.score.damageDealt+=damageTotal,console.log(`${damagePlayed} Physical Damage and ${firePlayed} Fire Damage was dealt to ${target.name}`),target.strengthTurn-=reduceTargetStrengthPlayed,target.armor-=reduceTargetArmorPlayed,target.poison+=poisonPlayed,target.health-=damageTotal),"seppuku"===card.key||"boneShredder"===card.key?gameState.player.strengthBase+=strengthPlayed:gameState.player.strengthCard+=strengthPlayed,"libertySpikes"===card.key&&gameState.player.stancePoints>0&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),healPlayed&&(gameState.player.health=Math.min(gameState.player.health+healPlayed,gameState.player.healthMax),self.updateHealthBar(gameState.player)),gameState.player.armorCard+=armorPlayed,gameState.player.poison=Math.max(0,gameState.player.poison-card.poisonRemove),function(damageTotal,poisonPlayed,strengthPlayed,armorPlayed){const actionTextConfig={fontSize:"32px",fill:"#ff0000"};if("targetSelected"===gameState.typePlayed||"targetAll"===gameState.typePlayed){self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8});const actionTextTarget=`${damageTotal>0?`Deals ${damageTotal} damage`:""}\n\n${poisonPlayed>0?`Deals ${poisonPlayed} Poison`:""}`;gameState.actionText=self.add.text(550,300,actionTextTarget,actionTextConfig).setOrigin(.5),self.attackTweens(gameState.player,60)}else strengthPlayed>0?(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${strengthPlayed} Strength`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player)):armorPlayed>0&&(gameState.powerUpSound.play({volume:.15}),gameState.actionText=self.add.text(550,300,`Gains ${armorPlayed} Armor`,actionTextConfig).setOrigin(.5),self.powerUpTweens(gameState.player))}(damageTotal,poisonPlayed,strengthPlayed,armorPlayed),gameState.player.stancePoints+stancePointsPlayed>=-3&&gameState.player.stancePoints+stancePointsPlayed<=3&&(gameState.player.stancePoints+=stancePointsPlayed,self.updateStanceBar(gameState.player)),gameState.player.freedomAfterCardPlayed="Freedom"===gameState.player.stance,!gameState.player.freedomBeforeCardPlayed&&gameState.player.freedomAfterCardPlayed&&(gameState.player.mana+=1,gameState.player.manaMax+=1,self.updateManaBar(gameState.player)),updateStats(target),self.updateHealthBar(target),updateStrengthAndArmor(gameState.player),removeIfDead(target),checkGameOver(),updateEnemyActions(),drawNewCards(drawCardPlayed),gameState.enemies.forEach((enemy=>{self.updateEnemyIntention(enemy)})),self.time.delayedCall(260,(()=>{gameState.playingCard=!1})),self.time.delayedCall(1500,(()=>{gameState.actionText&&gameState.actionText.destroy()}))}function initiateEnemiesTurn(){0!==gameState.enemies.length&&(gameState.enemies[gameState.currentEnemyIndex].alive?function(enemy){gameState.playersTurn&&(gameState.playersTurn=!1,enemy.turnText=self.add.text(550,300,"Enemy turn!",{fontSize:"60px",fill:"#ff0000"}).setOrigin(.5),self.time.delayedCall(1800,(()=>{fadeOutGameObject(enemy.turnText,200)})));enemy.turnComplete=!1,function(enemy){enemy.poisonText=self.add.text(570,350,"",{fontSize:"30px",fill:"#ff0000"}).setOrigin(.5),self.updatePoison(enemy),gameState.toxicAvenger&&enemy.poison>0&&updateStats(enemy);const delaytime=""!==enemy.poisonText._text||enemy.turnText?1800:800;self.time.delayedCall(delaytime,(()=>{enemy.poisonText.destroy();const chosenAction=enemy.chosenAction;if(gameState.player.poison+=chosenAction.poison,enemy===gameState.enemy3?gameState.enemies.forEach((enemy=>{enemy.health=Math.min(enemy.health+chosenAction.heal,enemy.healthMax),enemy.strengthBase=Math.min(enemy.strengthBase+chosenAction.strength,enemy.strengthMax),enemy.armor=Math.min(enemy.armor+chosenAction.armor,enemy.armorMax),updateStats(enemy)})):(enemy.health=Math.min(enemy.health+chosenAction.heal,enemy.healthMax),enemy.strengthBase=Math.min(enemy.strengthBase+chosenAction.strength,enemy.strengthMax),enemy.armor=Math.min(enemy.armor+chosenAction.armor,enemy.armorMax),gameState.player.armorBase-=chosenAction.reduceTargetArmor,gameState.player.strengthBase-=chosenAction.reduceTargetStrength,updateStats(enemy),updateStats(gameState.player)),chosenAction.damage>0||chosenAction.fire>0){const damageModifyer=(1+.1*enemy.strength)*(1-gameState.player.armor/20);if(self.cameras.main.shake(120,.005,!1),gameState.attackSound.play({volume:.8}),console.log(`enemy.damageTotal: ${enemy.damageTotal}`),enemy.damageTotal=Math.round(Math.max(0,chosenAction.fire+chosenAction.damage*damageModifyer)),gameState.player.health-=enemy.damageTotal,gameState.score.damageTaken+=enemy.damageTotal,enemy===gameState.enemy1||enemy===gameState.enemy2){const stealText=chosenAction.armor>0?`Steals ${chosenAction.armor} Armor`:`Steals ${chosenAction.strength} Strength`;gameState.actionText=self.add.text(550,300,`Deals ${enemy.damageTotal} damage\n${stealText}`,actionTextConfig).setOrigin(.5)}else gameState.actionText=self.add.text(550,300,`Deals ${enemy.damageTotal} damage`,actionTextConfig).setOrigin(.5);self.tweens.add({targets:enemy.sprite,x:enemy.sprite.x-60,duration:120,ease:"Cubic",yoyo:!0})}else chosenAction.heal>0?(gameState.healSound.play({volume:.5}),gameState.actionText=self.add.text(550,300,chosenAction.text,{fontSize:"32px",fill:"#ff0000"}).setOrigin(.5),self.powerUpTweens(enemy)):(chosenAction.strength>0||chosenAction.armor>0||chosenAction.poison>0)&&(gameState.powerUpSound.play({volume:.2}),gameState.actionText=self.add.text(550,300,chosenAction.text,{fontSize:"32px",fill:"#ff0000"}).setOrigin(.5),self.powerUpTweens(enemy));enemy.strengthTurn=0,function(enemy){[gameState.player,enemy].forEach((character=>{self.updateHealthBar(character),removeIfDead(character),updateStats(character)})),self.time.delayedCall(1500,(()=>{fadeOutGameObject(gameState.actionText,200),enemy.turnComplete=!0,checkGameOver()||!gameState.enemies[gameState.currentEnemyIndex].turnComplete&&gameState.enemies[gameState.currentEnemyIndex].alive||(gameState.currentEnemyIndex++,gameState.currentEnemyIndex<gameState.enemies.length?initiateEnemiesTurn():(gameState.currentEnemyIndex=0,startPlayerTurn()))}))}(enemy)}))}(enemy)}(gameState.enemies[gameState.currentEnemyIndex]):(gameState.currentEnemyIndex++,initiateEnemiesTurn()))}function updateEnemyActions(){1===gameState.turn?gameState.enemy1.actions=[{key:"Intends to\nSteal Armor",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:4,text:"Steals 4 Armor",probability:1}]:2===gameState.turn?gameState.enemy1.actions=[{key:()=>`Intends to\nDeal ${Math.round(12*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:12,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 12 damage",probability:1}]:3===gameState.turn?gameState.enemy1.actions=[{key:()=>`Intends to\nDeal ${Math.round(15*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:15,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 15 damage",probability:1}]:gameState.enemy1.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 5 fire damage",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(12*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:12,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 12 damage\nSteals 1 Armor",probability:.27+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(17*(1+.1*gameState.enemy1.strength)*(1-gameState.player.armor/20))} damage`,damage:17,fire:0,poison:0,heal:0,poisonRemove:0,strength:1,armor:0,reduceTargetStrength:1,reduceTargetArmor:0,text:"Deals 17 damage\nSteals 1 Strength",probability:.18+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Heals 15 HP\nSteals 1 Armor",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:1,armor:0,reduceTargetStrength:1,reduceTargetArmor:0,text:"Heals 25 HP\nSteals 1 Strength",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.06},{key:"Intends to\nSteal Strength",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:2,armor:1,reduceTargetStrength:2,reduceTargetArmor:1,text:"Steals 2 Strenght",probability:.12+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nSteal Armor",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:2,reduceTargetStrength:0,reduceTargetArmor:3,text:"Steals 3 Armor",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 5 poison",probability:0}],gameState.enemy2.actions=[{key:"Intends to\nDeal 5 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 5 fire damage",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(12*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:12,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 12 damage\nSteals 1 Armor",probability:.27+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:()=>`Intends to\nDeal ${Math.round(17*(1+.1*gameState.enemy2.strength)*(1-gameState.player.armor/20))} damage`,damage:17,fire:0,poison:0,heal:0,poisonRemove:0,strength:1,armor:0,reduceTargetStrength:1,reduceTargetArmor:0,text:"Deals 17 damage\nSteals 1 Strength",probability:.18+(gameState.enemy2.health>=gameState.enemy2.healthMax?.22:0)/5},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:15,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Heals 15 HP\nSteals 1 Armor",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.17},{key:"Intends to\nApply a buff",damage:0,fire:0,poison:0,heal:25,poisonRemove:0,strength:1,armor:0,reduceTargetStrength:1,reduceTargetArmor:0,text:"Heals 25 HP\nSteals 1 Strength",probability:gameState.enemy1.health>=gameState.enemy1.healthMax?0:.06},{key:"Intends to\nSteal Strength",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:2,armor:1,reduceTargetStrength:2,reduceTargetArmor:1,text:"Steals 2 Strenght",probability:.12+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nSteal Armor",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:0,armor:2,reduceTargetStrength:0,reduceTargetArmor:3,text:"Steals 3 Armor",probability:.1+(gameState.enemy1.health>=gameState.enemy1.healthMax?.22:0)/5},{key:"Intends to\nPoison you",damage:0,fire:0,poison:5,heal:0,poisonRemove:0,strength:0,armor:1,reduceTargetStrength:0,reduceTargetArmor:1,text:"Deals 5 poison",probability:0}],1===gameState.turn?gameState.enemy3.actions=[{key:"Intends to\nBuff team",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:3,armor:4,text:"Team gains 3 Strength and 4 Armor",probability:1}]:gameState.enemy3.actions=[{key:"Intends to\nDeal 7 fire damage",damage:0,fire:5,poison:0,heal:0,poisonRemove:0,strength:0,armor:0,text:"Deals 7 fire damage",probability:.7},{key:"Intends to\nBuff Team",damage:0,fire:0,poison:0,heal:0,poisonRemove:0,strength:2,armor:3,text:"Team gains 2 Strength and 3 armor",probability:.3}]}function checkGameOver(){return gameState.player.alive?!gameState.enemies.some((enemy=>enemy.alive))&&(gameState.playersTurn=!1,function(){gameState.score.numberOfTurns+=gameState.turn,gameState.score.levelsCompleted+=1,gameState.music.stop(),self.updateManaBar(gameState.player),addHandtoDeck(),self.time.delayedCall(600,(()=>{gameState.attackSound.isPlaying&&gameState.attackSound.stop(),gameState.victorySound.play({volume:.9,rate:1}),self.clearBoard()})),gameState.actionText&&(gameState.actionText.destroy(),console.log("gameState.actionText still existed at initiateVictory and got destroyed"));const victoryTextConfig={fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"},victoryText=self.add.text(550,300,"Victory!",victoryTextConfig).setOrigin(.5);self.time.delayedCall(2e3,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),victoryText.destroy(),function(){self.shuffleDeck(gameState.bonusCards);const gameOverTextConfig={fontSize:"40px",fill:"#000000"},rewardTextConfig={fontSize:"25px",fill:"#000000"};gameState.gameOverText=self.add.text(550,180,"Choose a reward",gameOverTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsText=self.add.text(550,400,"Add 1 card\nto your deck",rewardTextConfig).setOrigin(.5).setDepth(103),gameState.rewardAddCardsButton=self.add.image(550,400,"rectangularButton"),gameState.rewardAddCardsButton.setScale(1.2).setInteractive().setOrigin(.5).setDepth(102),gameState.rewardAddCardsButton.on("pointerover",(function(){this.setTexture("rectangularButtonHovered")})),gameState.rewardAddCardsButton.on("pointerout",(function(){this.setTexture("rectangularButton")})),gameState.rewardAddCardsButton.on("pointerup",(function(){gameState.rewardAddCardsText.destroy(),gameState.gameOverText.destroy(),gameState.rewardAddCardsButton.destroy(),function(){console.log("rewardAddCard called"),gameState.gameOverText.destroy();const x=320,y=300,spacing=220;let bonusCards=gameState.bonusCards.slice(0,3);console.log(`bonusCards: ${bonusCards.key}`),bonusCards.forEach(((bonusCard,index)=>{bonusCard.sprite=self.add.sprite(x+index*spacing,y,bonusCard.key),bonusCard.sprite.setScale(.45).setInteractive().setDepth(102),console.log(`bonusCardsprite added for: ${bonusCard.key}`),bonusCard.sprite.on("pointerover",(()=>{gameState.cardsDealtSound.play({volume:.6}),self.cardTweens(bonusCard.sprite,.58,200)}),self),bonusCard.sprite.on("pointerout",(()=>{self.cardTweens(bonusCard.sprite,.45,400)}),self),bonusCard.sprite.on("pointerup",(()=>{let nextlevelstarting=!1;gameState.deck.push(bonusCard),"permanent"===bonusCard.type&&gameState.bonusCards.splice(gameState.bonusCards.indexOf(bonusCard),1),bonusCards.forEach((card=>{card.sprite.removeInteractive(),card!==bonusCard&&fadeOutGameObject(card.sprite,200)})),self.tweens.add({targets:bonusCard.sprite,x:self.cameras.main.centerX,y:self.cameras.main.centerY+100,scaleX:.6,scaleY:.6,duration:1e3,ease:"Power2"}),self.add.text(550,180,"Gained 1 card",{fontSize:"40px",fill:"#000000"}).setOrigin(.5),self.time.delayedCall(2500,(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())})),self.input.on("pointerup",(()=>{nextlevelstarting||(nextlevelstarting=!0,startNextLevel())}))}))}))}()}))}()}))}(),!0):(gameState.playersTurn=!1,function(){gameState.player.health=0,self.updateManaBar(gameState.player),addHandtoDeck(),gameState.music.stop(),gameState.endOfTurnButton.destroy(),gameState.actionText&&fadeOutGameObject(gameState.actionText,200);gameState.score.numberOfTurns+=gameState.turn,gameState.gameOverText=self.add.text(550,300," Defeat!",{fontSize:"100px",fill:"#ff0000",fontFamily:"Rock Kapak"}).setOrigin(.5),gameState.gameOverText.setInteractive();let scenetransitionstarted=!1;self.time.delayedCall(400,(()=>{gameState.musicTheme.play({loop:!0,volume:.3}),scenetransitionstarted||(gameState.gameOverText.on("pointerup",(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})),self.time.delayedCall(2500,(()=>{scenetransitionstarted=!0,self.scene.start("Endscene")})))}))}(),!0)}function startNextLevel(){self.cameras.main.fadeOut(1e3),self.time.delayedCall(1e3,(()=>{self.scene.start("Endscene")}))}function activatePermanentFromToken(card){if("foreverTrue"===card.key)gameState.foreverTrue=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteForeverTrue(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelSpirit"===card.key)gameState.rebelSpirit=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelSpirit(card):self.cameras.main.shake(70,.002,!1)}));else if("rebelHeart"===card.key)gameState.rebelHeart=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteRebelHeart(card):self.cameras.main.shake(70,.002,!1)}));else if("bushido"===card.key)gameState.bushido=!0,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteBushido(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicAvenger"===card.key)gameState.toxicAvenger=!0,gameState.enemies.forEach((enemy=>updateStats(enemy))),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicAvenger(card):self.cameras.main.shake(70,.002,!1)}));else if("kirisuteGomen"===card.key)gameState.player.strengthMax+=5,updateStrengthAndArmor(gameState.player),card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn&&gameState.enemies.some((enemy=>enemy.health<30))?depleteKirisuteGomen(card):self.cameras.main.shake(70,.002,!1)}));else if("toxicFrets"===card.key)gameState.toxicFrets=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteToxicFrets(card):self.cameras.main.shake(70,.002,!1)}));else if("ashenEncore"===card.key)gameState.ashenEncore=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteAshenEncore(card):self.cameras.main.shake(70,.002,!1)}));else if("edoEruption"===card.key)gameState.edoEruption=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteEdoEruption(card):self.cameras.main.shake(70,.002,!1)}));else if("steelToe"===card.key)gameState.steelToe=!0,card.tokenSprite.on("pointerup",(()=>{gameState.playersTurn?depleteSteelToe(card):self.cameras.main.shake(70,.002,!1)}));else if("kamishimoUberAlles"===card.key){const tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;gameState.kamishimoUberAlles+=1,updateStrengthAndArmor(gameState.player),tokenSprite.on("pointerup",(()=>{gameState.playersTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.kamishimoUberAlles-=1,updateStrengthAndArmor(gameState.player)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}else if("hollidayInKamakura"===card.key){let tokenSprite=card.tokenSprite,tokenSlot=card.tokenSlot;const turnplayed=gameState.turn,fightplayed=gameState.score.levelsCompleted;tokenSprite.on("pointerup",(()=>{const depletedDifferentTurn=turnplayed!=gameState.turn||fightplayed!=gameState.score.levelsCompleted;console.log(`depletedDifferentTurn: ${depletedDifferentTurn}\nturnplayed: ${turnplayed}\ngameState.turn: ${gameState.turn}\nfightplayed: ${fightplayed}\ngameState.score.levelsCompleted: ${gameState.score.levelsCompleted}\ngameState.playersTurn: ${gameState.playersTurn}`),gameState.playersTurn&&depletedDifferentTurn?function(card,tokenSprite,tokenSlot){tokenSlot&&(tokenSlot.available=!0);tokenSprite&&tokenSprite.destroy();card.permanentCardSprite&&card.permanentCardSprite.destroy();gameState.permanents=gameState.permanents.filter((p=>p.tokenSprite!==tokenSprite)),gameState.player.manaMax+=1,gameState.player.mana+=1,self.updateManaBar(gameState.player),drawNewCards(1)}(card,tokenSprite,tokenSlot):self.cameras.main.shake(70,.002,!1)}))}}function displayTokenCard(card){card.tokenSprite.on("pointerover",(function(){gameState.cardsDealtSound.play({volume:1.5}),card.permanentCardSprite=self.add.sprite(550,300,card.key).setScale(.55).setDepth(26)})),card.tokenSprite.on("pointerout",(function(){card.permanentCardSprite.destroy()}))}function depleteForeverTrue(card){gameState.foreverTrue=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),drawNewCards(8)}function depleteRebelSpirit(card){gameState.rebelSpirit=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.mana+=3,gameState.player.manaMax+=3,self.updateManaBar(gameState.player)}function depleteRebelHeart(card){gameState.rebelHeart=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+12),self.updateHealthBar(gameState.player)}function depleteBushido(card){gameState.bushido=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.player.strengthBase+=6,updateStrengthAndArmor(gameState.player)}function depleteToxicAvenger(card){gameState.toxicAvenger=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison+=4,updateStats(enemy)}))}function depleteKirisuteGomen(card){if(gameState.enemies.some((enemy=>enemy.health<30))){gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let functionActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){enemy.health<30&&functionActive?(enemy.health=0,gameState.attackSound.play({volume:1}),self.cameras.main.shake(120,.025,!1),card.tokenSlot&&(card.tokenSlot.available=!0,gameState.player.strengthMax-=5),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),removeIfDead(enemy),checkGameOver(),updateStrengthAndArmor(gameState.player)):(self.cameras.main.shake(70,.002,!1),functionActive=!1),gameState.targetingCursor.setVisible(!1)}))}))}else self.cameras.main.shake(70,.002,!1),card.slot.available=!1,gameState.currentCards.some((card=>"kirisuteGomen"===card.key))||(gameState.currentCards.push(card),gameState.player.mana+=1,self.updateManaBar(gameState.player))}function depleteToxicFrets(card){gameState.toxicFrets=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.enemies.forEach((enemy=>{enemy.poison>0&&(enemy.health-=2*enemy.poison,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver())}))}function depleteAshenEncore(card){gameState.ashenEncore=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card));const ashenEncoreDepleteText=self.add.text(550,350,"Deals 12 firedamage\n to all enemies",{fontSize:"32px",fill:"#ff0000"}).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDepleteText.destroy()})),gameState.enemies.forEach((enemy=>{enemy.health-=12,self.updateHealthBar(enemy),removeIfDead(enemy),checkGameOver()}))}function depleteEdoEruption(card){gameState.edoEruption=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card))}function depleteSteelToe(card){gameState.steelToe=!1,card.tokenSlot&&(card.tokenSlot.available=!0),card.sprite&&card.sprite.destroy(),card.tokenSprite&&card.tokenSprite.destroy(),card.permanentCardSprite&&card.permanentCardSprite.destroy(),gameState.permanents=gameState.permanents.filter((c=>c.card!==card)),gameState.deck=gameState.deck.filter((c=>c!==card)),gameState.targetingCursor.setVisible(!0);let depleteSteelToeActive=!0;gameState.enemies.forEach((enemy=>{enemy.sprite.on("pointerover",(function(){gameState.targetingCursor.setTexture("targetingCursorReady")})),enemy.sprite.on("pointerout",(function(){gameState.targetingCursor.setTexture("targetingCursor")})),enemy.sprite.on("pointerup",(function(){depleteSteelToeActive&&(enemy.armor-=7,updateStats(enemy),gameState.attackSound.play({volume:.6}),self.cameras.main.shake(100,.012,!1),gameState.targetingCursor.setVisible(!1),depleteSteelToeActive=!1)}))}))}function updateStrengthAndArmor(character){let strengthBushido=0;gameState.endOfTurnButtonPressed?(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard+character.armorStance),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+strengthBushido)):(character.armor=Math.min(character.armorMax,character.armorBase+character.armorCard),strengthBushido=gameState.bushido?Math.floor(character.armor/4):0,character.strength=Math.min(character.strengthMax,character.strengthBase+character.strengthStance+character.strengthCard+strengthBushido)),gameState.kamishimoUberAlles>0&&gameState.player.stancePoints<0&&(character.strength=Math.min(character.strengthMax,character.strength-gameState.player.stancePoints*gameState.kamishimoUberAlles)),updateStats(character)}function updateStats(character){character!=gameState.player&&(character.strength=character.strengthBase+character.strengthTurn,gameState.toxicAvenger&&character.poison>0&&(character.strength-=4)),character.armorText.setText(`${character.armor}/${character.armorMax}`),character.strengthText.setText(`${character.strength}/${character.strengthMax}`)}function removeIfDead(character){if(character.health<=0){if(character.health=0,character.sprite.removeInteractive(),character.alive=!1,character.turnComplete=!0,character!=gameState.player){const indexEnemies=gameState.enemies.indexOf(character),indexCharacters=gameState.characters.indexOf(character);-1!==indexEnemies&&gameState.enemies.splice(indexEnemies,1),-1!==indexCharacters&&gameState.characters.splice(indexCharacters,1)}[character.sprite,character.healthBarBackground,character.healthBar,character.healthBarText,character.manaBarBackground,character.manaBar,character.manaBarText,character.strengthAndArmorImage,character.strengthText,character.armorText,character.descriptionBackground,character.descriptionText,character.intentionText,character.intentionBackground].forEach((object=>{fadeOutGameObject(object,500)}))}}function addHandtoDeck(){for(;gameState.currentCards.length>0;){let card=gameState.currentCards.pop();card.slot.available||(card.slot.available=!0),gameState.discardPile.push(card),gameState.discardPileText.setText(gameState.discardPile.length),fadeOutGameObject(card.sprite,200)}}function drawNewCards(numCards){const numCardsLimit=Math.min(gameState.deck.length,8),numOfFreeSlots=gameState.slots.filter((slot=>slot.available)).length;numCards=numOfFreeSlots<numCards?numOfFreeSlots:numCards;for(let i=0;i<numCards;i++)self.time.delayedCall(75*i,(()=>{if(gameState.currentCards.length<numCardsLimit){0===gameState.drawPile.length&&(gameState.drawPile=gameState.discardPile,self.shuffleDeck(gameState.drawPile),gameState.discardPile=[],gameState.discardPileText.setText(gameState.discardPile.length));let card=gameState.drawPile.pop();card.sprite=self.add.sprite(0,0,card.key).setScale(.35).setInteractive(),console.log(`card added: ${card.key}`),card.isBeingPlayed=!1,gameState.currentCards.push(card);let availableSlots=gameState.slots.filter((slot=>slot.available)),slot=availableSlots[Math.floor(availableSlots.length/2)];if(slot){card.sprite.x=slot.x,card.sprite.y=slot.y,card.startHeight=card.sprite.y,card.angle=slot.angle,card.sprite.setAngle(card.angle),slot.available=!1,card.slot=slot;let cardDepth=10+slot.index;card.sprite.setDepth(cardDepth),self.animateCard(card,cardDepth)}gameState.cardsDealtSound.play({volume:2.2}),gameState.drawPileText.setText(gameState.drawPile.length),gameState.ashenEncore&&gameState.enemies.forEach((enemy=>{if(enemy.health-=4,self.updateHealthBar(enemy),removeIfDead(enemy),"undefined"==typeof ashenEncoreText||!ashenEncoreText){const ashenEncoreConfig={fontSize:"32px",fill:"#ff0000"},ashenEncoreKey="Deals 4 fire damage to all enemies",ashenEncoreDrawText=self.add.text(550,350,ashenEncoreKey,ashenEncoreConfig).setOrigin(.5);self.cameras.main.shake(100,.003,!1),gameState.attackSound.play({volume:.8}),self.time.delayedCall(1500,(()=>{ashenEncoreDrawText.destroy()}))}})),gameState.playersTurn&&card.sprite.on("pointerup",(function(){activateCard(card)}))}else self.cameras.main.shake(70,.002,!1)}))}function getValueOrInvoke(cardProperty){return"function"==typeof cardProperty?cardProperty():cardProperty}function fadeOutGameObject(gameObject,duration){gameObject&&self.tweens.add({targets:gameObject,alpha:0,ease:"Power1",duration:duration,onComplete:()=>{gameObject.destroy()}},self)}gameState.slots=[{available:!0,x:230,y:640,index:0,angle:-12},{available:!0,x:320,y:610,index:1,angle:-8},{available:!0,x:410,y:590,index:2,angle:-4},{available:!0,x:500,y:580,index:3,angle:0},{available:!0,x:590,y:590,index:4,angle:4},{available:!0,x:680,y:610,index:5,angle:8},{available:!0,x:770,y:640,index:6,angle:12},{available:!0,x:860,y:670,index:7,angle:16}],gameState.endOfTurnButton.on("pointerup",(function(){gameState.currentEnemyIndex=0,gameState.targetingCursor.visible||!gameState.playersTurn?self.cameras.main.shake(70,.002,!1):(this.setTexture("rectangularButtonPressed"),this.removeInteractive(),gameState.buttonPressedSound.play(),gameState.endOfTurnButtonPressed=!0,addHandtoDeck(),updateStrengthAndArmor(gameState.player),updateEnemyActions(),gameState.rebelHeart&&(gameState.player.health=Math.min(gameState.player.healthMax,gameState.player.health+Math.abs(gameState.player.stancePoints)),self.updateHealthBar(gameState.player)),gameState.enemies.forEach((enemy=>{enemy.turnComplete=!enemy.alive,fadeOutGameObject(enemy.intentionText,200),fadeOutGameObject(enemy.intentionBackground,200)})),0!=gameState.player.mana&&(gameState.player.mana=0,self.updateManaBar(gameState.player)),self.time.delayedCall(100,(()=>{gameState.actionText&&gameState.actionText.destroy(),initiateEnemiesTurn()})))})),"admin"===gameState.playerName&&(gameState.getManaButton=self.add.sprite(550,200,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.getManaText=self.add.text(550,200,"Get Mana",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.getManaButton.on("pointerup",(()=>{gameState.playersTurn&&(gameState.player.mana=gameState.player.manaMax,self.updateManaBar(gameState.player),console.log("mana gained"))})),gameState.drawCardButton=self.add.sprite(550,300,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.drawCardText=self.add.text(550,300,"Draw Card",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.drawCardButton.on("pointerup",(()=>{gameState.playersTurn&&(drawNewCards(1),console.log("card drawn"))})),gameState.killEnemyButton=self.add.sprite(550,400,"rectangularButton").setScale(.45).setOrigin(.5).setInteractive(),gameState.killEnemyText=self.add.text(550,400,"Kill Enemy",{fontSize:"15px",fill:"#ff0000"}).setOrigin(.5),gameState.killEnemyButton.on("pointerup",(()=>{if(gameState.enemies.some((enemy=>enemy.health>0&&gameState.playersTurn))){const enemy=gameState.enemies.find((enemy=>enemy.health>0));enemy.health=0,removeIfDead(enemy),checkGameOver(),console.log(`${enemy.name} killed`)}})))}update(){gameState.targetingCursor.visible&&(gameState.targetingCursor.x=this.input.mousePointer.x,gameState.targetingCursor.y=this.input.mousePointer.y)}}function updateLeaderboard(username,score){fetch(`https://www.dreamlo.com/lb/CBGhFikNak2i8KjH3UPThAfGJFnWo9A0O8mjvU19hS2Q/add/${username}/${score}`).then((response=>response.text())).then((data=>console.log(data))).catch((error=>{console.error("Error:",error)}))}class Endscene extends Phaser.Scene{constructor(){super("Endscene")}async getTopScores(){try{const response=await fetch("https://www.dreamlo.com/lb/64c442f28f40bb8380e27ce7/json");if(!response.ok)throw new Error("Failed to fetch leaderboard data");let scores=(await response.json()).dreamlo.leaderboard.entry;return scores.sort(((a,b)=>b.score-a.score)),scores.slice(0,5)}catch(error){return console.error(error),null}}preload(){this.load.image("endscene","assets/images/endscene.jpg")}create(){self=this;this.cameras.main.fadeIn(800,0,0,0),this.input.keyboard.createCursorKeys(),this.add.image(550,320,"endscene").setScale(.95).setOrigin(.5,.5).on("pointerup",(()=>returnToMenu())),this.add.text(550,110,"    Thanks for playing\nPunk Rock Samurai alpha v1.1",{fontSize:"57px",fill:"#a9a9a9",fontFamily:"Rock Kapak"}).setOrigin(.5,.5),gameState.score.totalScore=gameState.score.levelsCompleted>0?gameState.score.levelsCompleted*(15+Math.max(0,7-gameState.score.numberOfTurns/gameState.score.levelsCompleted)):0;let labels={numberOfTurns:"Number of turns played",levelsCompleted:"Number of fights won",damageTaken:"Total damage taken",damageDealt:"Total damage dealt",totalScore:"Your score"},x=280,y=200;function returnToMenu(){console.log("returnto meny called"),gameState.name="",self.cameras.main.shake(1500,.0015,!1),self.cameras.main.flash(500),self.time.delayedCall(500,(()=>{self.cameras.main.fadeOut(1e3),location.reload()}))}"admin"!=gameState.playerName&&updateLeaderboard(gameState.playerName,gameState.score.totalScore),self.time.delayedCall(600,(()=>{!async function(){try{console.log("displayLeaderBoard called");let topScores=await self.getTopScores();const leaderboardBackground=self.add.graphics();leaderboardBackground.fillStyle(16777215,1).setAlpha(.8),leaderboardBackground.fillRect(x,y,540,420),self.add.text(330,y+50,"Your Results",{fontSize:"25px",fill:"#000000"}).setOrigin(0),Object.entries(gameState.score).forEach((([key,value])=>{if(console.log(`${key}: ${value}`),labels[key]){let resultsText=`${labels[key]}: ${value}`;self.add.text(330,y+90,resultsText,{color:"#000",fontSize:"16px"}),y+=20}}));const textConfig={fontSize:"16px",fill:"#000000"};self.add.text(330,y+150,"Leaderboard",{fontSize:"25px",fill:"#000000"}).setOrigin(0),topScores?topScores.forEach(((score,index)=>{let dateOnly=score.date.split(" ")[0];const scoreText=`${index+1}. Name: ${score.name}, Score: ${score.score}, Date: ${dateOnly}`;let displayedScore=self.add.text(330,y+190,scoreText,textConfig).setOrigin(0);sceneState.displayedScoreArray.push(displayedScore),y+=20})):self.add.text(330,y+190,"Leaderboard is down for maintenance",textConfig).setOrigin(0)}catch(error){console.error("Error in displayLeaderBoard: ",error);const errorTextConfig={fontSize:"16px",fill:"#FF0000"};self.add.text(330,y+190,"Leaderboard is down for maintenance",errorTextConfig).setOrigin(0)}}()})),self.time.delayedCall(7e3,(()=>{console.log("timeout"),returnToMenu()}))}}const config={type:Phaser.AUTO,width:1100,height:680,scene:[BaseScene,Preload,Mainmenu,Level1Fight1,Level1Fight2,Level1Fight3,Level2Fight1,Level2Fight2,Level2Fight3,Level3Fight1,Level3Fight2,Level3Fight3,Level4Fight1,Level4Fight2,Level4Fight3,Endscene],scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},dom:{createContainer:!0}},game=new Phaser.Game(config);